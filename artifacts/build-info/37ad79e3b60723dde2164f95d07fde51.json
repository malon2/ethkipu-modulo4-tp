{"id":"37ad79e3b60723dde2164f95d07fde51","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"contracts/MockERC20.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract MockERC20 is ERC20 {\n    constructor(string memory name, string memory symbol, uint256 initialSupply) ERC20(name, symbol) {\n        _mint(msg.sender, initialSupply);\n    }\n}\n"},"contracts/SimpleSwap.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\n/// @title SimpleSwap\n/// @dev Inherits ERC20 to represent LP tokens. Tokens are set at first addLiquidity call.\ncontract SimpleSwap is ERC20 {\n    using SafeERC20 for IERC20;\n\n    /// @notice Token A address (set at first liquidity addition)\n    address public tokenAAddres;\n    /// @notice Token B address (set at first liquidity addition)\n    address public tokenBAddres;\n\n    /// @notice Current reserve of token A\n    uint256 public reserveA;\n    /// @notice Current reserve of token B\n    uint256 public reserveB;\n\n    /// @dev Initializes LP token with name and symbol\n    constructor() ERC20(\"LIQUIDITY\", \"LP\") {}\n\n    /// @notice Adds liquidity to the pool and mints LP tokens\n    /// @param tokenA Address of token A\n    /// @param tokenB Address of token B\n    /// @param amountADesired Desired amount of token A to deposit\n    /// @param amountBDesired Desired amount of token B to deposit\n    /// @param amountAMin Minimum acceptable amount of token A\n    /// @param amountBMin Minimum acceptable amount of token B\n    /// @param to Address receiving LP tokens\n    /// @param deadline Timestamp after which transaction is invalid\n    /// @return amountA Actual amount of token A deposited\n    /// @return amountB Actual amount of token B deposited\n    /// @return liquidity Amount of LP tokens minted\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint256 amountADesired,\n        uint256 amountBDesired,\n        uint256 amountAMin,\n        uint256 amountBMin,\n        address to,\n        uint256 deadline\n    ) external returns (uint256 amountA, uint256 amountB, uint256 liquidity) {\n        require(block.timestamp <= deadline, \"Expired\");\n\n        address _tokenAAddres = tokenAAddres;\n        address _tokenBAddres = tokenBAddres;\n\n        if (_tokenAAddres == address(0) && _tokenBAddres == address(0)) {\n            require(tokenA != tokenB, \"Tokens must differ\");\n            tokenAAddres = tokenA;\n            tokenBAddres = tokenB;\n            _tokenAAddres = tokenA;\n            _tokenBAddres = tokenB;\n        } else {\n            require(\n                (tokenA == _tokenAAddres && tokenB == _tokenBAddres) ||\n                (tokenA == _tokenBAddres && tokenB == _tokenAAddres),\n                \"Invalid token pair\"\n            );\n        }\n\n        uint256 _reserveA = reserveA;\n        uint256 _reserveB = reserveB;\n        uint256 _totalSupply = totalSupply();\n\n        if (_totalSupply == 0) {\n            amountA = amountADesired;\n            amountB = amountBDesired;\n            liquidity = Math.sqrt(amountA * amountB);\n        } else {\n            amountA = amountADesired;\n            amountB = (amountA * _reserveB) / _reserveA;\n            require(amountB <= amountBDesired, \"Too much B\");\n            liquidity = (amountA * _totalSupply) / _reserveA;\n        }\n\n        require(amountA >= amountAMin, \"Low A\");\n        require(amountB >= amountBMin, \"Low B\");\n        require(liquidity > 0, \"Zero liquidity\");\n\n        IERC20(_tokenAAddres).safeTransferFrom(msg.sender, address(this), amountA);\n        IERC20(_tokenBAddres).safeTransferFrom(msg.sender, address(this), amountB);\n\n        reserveA = _reserveA + amountA;\n        reserveB = _reserveB + amountB;\n        _mint(to, liquidity);\n    }\n\n    /// @notice Removes liquidity and burns LP tokens\n    /// @param tokenA Address of token A\n    /// @param tokenB Address of token B\n    /// @param liquidity Amount of LP tokens to burn\n    /// @param amountAMin Minimum amount of token A to receive\n    /// @param amountBMin Minimum amount of token B to receive\n    /// @param to Address receiving the underlying tokens\n    /// @param deadline Timestamp after which transaction is invalid\n    /// @return amountA Amount of token A returned\n    /// @return amountB Amount of token B returned\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint256 liquidity,\n        uint256 amountAMin,\n        uint256 amountBMin,\n        address to,\n        uint256 deadline\n    ) external returns (uint256 amountA, uint256 amountB) {\n        require(block.timestamp <= deadline, \"Expired\");\n\n        address _tokenAAddres = tokenAAddres;\n        address _tokenBAddres = tokenBAddres;\n\n        require(\n            (tokenA == _tokenAAddres && tokenB == _tokenBAddres) ||\n            (tokenA == _tokenBAddres && tokenB == _tokenAAddres),\n            \"Invalid token pair\"\n        );\n\n        uint256 _reserveA = reserveA;\n        uint256 _reserveB = reserveB;\n        uint256 _totalSupply = totalSupply();\n\n        require(balanceOf(msg.sender) >= liquidity, \"Not enough LP\");\n\n        amountA = (liquidity * _reserveA) / _totalSupply;\n        amountB = (liquidity * _reserveB) / _totalSupply;\n\n        require(amountA >= amountAMin, \"Low A\");\n        require(amountB >= amountBMin, \"Low B\");\n\n        _burn(msg.sender, liquidity);\n\n        reserveA = _reserveA - amountA;\n        reserveB = _reserveB - amountB;\n\n        IERC20(_tokenAAddres).safeTransfer(to, amountA);\n        IERC20(_tokenBAddres).safeTransfer(to, amountB);\n    }\n\n    /// @notice Swaps an exact amount of input tokens for output tokens\n    /// @param amountIn Amount of input token to send\n    /// @param amountOutMin Minimum acceptable amount of output token\n    /// @param path Array with [tokenIn, tokenOut] addresses\n    /// @param to Address to receive the output token\n    /// @param deadline Timestamp after which transaction is invalid\n    function swapExactTokensForTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external {\n        require(block.timestamp <= deadline, \"Expired\");\n        require(path.length == 2, \"Only 2-token swaps\");\n\n        address tokenIn = path[0];\n        address tokenOut = path[1];\n\n        address _tokenAAddres = tokenAAddres;\n        address _tokenBAddres = tokenBAddres;\n\n        require(\n            (tokenIn == _tokenAAddres && tokenOut == _tokenBAddres) ||\n            (tokenIn == _tokenBAddres && tokenOut == _tokenAAddres),\n            \"Invalid swap path\"\n        );\n\n        (uint256 reserveIn, uint256 reserveOut) = tokenIn == _tokenAAddres\n            ? (reserveA, reserveB)\n            : (reserveB, reserveA);\n\n        IERC20(tokenIn).safeTransferFrom(msg.sender, address(this), amountIn);\n\n        uint256 amountOut = (amountIn * reserveOut) / (reserveIn + amountIn);\n        require(amountOut >= amountOutMin, \"Slippage\");\n\n        if (tokenIn == _tokenAAddres) {\n            reserveA += amountIn;\n            reserveB -= amountOut;\n        } else {\n            reserveB += amountIn;\n            reserveA -= amountOut;\n        }\n\n        IERC20(tokenOut).safeTransfer(to, amountOut);\n    }\n\n    /// @notice Returns the price of tokenA in terms of tokenB\n    /// @param tokenA Address\n    /// @param tokenB Address\n    /// @return price Price with 18 decimals (tokenB per tokenA)\n    function getPrice(address tokenA, address tokenB) external view returns (uint256 price) {\n        address _tokenAAddres = tokenAAddres;\n        address _tokenBAddres = tokenBAddres;\n\n        require(\n            (tokenA == _tokenAAddres && tokenB == _tokenBAddres) ||\n            (tokenA == _tokenBAddres && tokenB == _tokenAAddres),\n            \"Invalid token pair\"\n        );\n\n        uint256 _reserveA = reserveA;\n        uint256 _reserveB = reserveB;\n\n        require(_reserveA > 0 && _reserveB > 0, \"No reserves\");\n\n        price = (_reserveB * 1e18) / _reserveA;\n    }\n\n    /// @notice Computes output amount for a given input and reserves\n    /// @param amountIn Amount of input token\n    /// @param reserveIn Reserve of input token\n    /// @param reserveOut Reserve of output token\n    /// @return Output token amount\n    function getAmountOut(uint256 amountIn, uint256 reserveIn, uint256 reserveOut)\n        external\n        pure\n        returns (uint256)\n    {\n        require(amountIn > 0, \"Zero input\");\n        require(reserveIn > 0 && reserveOut > 0, \"Empty reserves\");\n\n        return (amountIn * reserveOut) / (reserveIn + amountIn);\n    }\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[81],"IERC165":[1403],"IERC20":[819]},"id":82,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:0"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":82,"sourceUnit":90,"src":"133:36:0","symbolAliases":[{"foreign":{"id":2,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"141:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":82,"sourceUnit":86,"src":"170:38:0","symbolAliases":[{"foreign":{"id":4,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"178:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7,"name":"IERC20","nameLocations":["590:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"590:6:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"590:6:0"},{"baseName":{"id":9,"name":"IERC165","nameLocations":["598:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1403,"src":"598:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"598:7:0"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"210:357:0","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":81,"linearizedBaseContracts":[81,1403,819],"name":"IERC1363","nameLocation":"578:8:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"1148:370:0","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":20,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:0","nodeType":"FunctionDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"to","nameLocation":"1556:2:0","nodeType":"VariableDeclaration","scope":20,"src":"1548:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15,"mutability":"mutable","name":"value","nameLocation":"1568:5:0","nodeType":"VariableDeclaration","scope":20,"src":"1560:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:0"},"returnParameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":20,"src":"1593:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:0"},"scope":81,"src":"1523:76:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"1605:453:0","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":32,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":23,"mutability":"mutable","name":"to","nameLocation":"2096:2:0","nodeType":"VariableDeclaration","scope":32,"src":"2088:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":22,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":25,"mutability":"mutable","name":"value","nameLocation":"2108:5:0","nodeType":"VariableDeclaration","scope":32,"src":"2100:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"data","nameLocation":"2130:4:0","nodeType":"VariableDeclaration","scope":32,"src":"2115:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":26,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":32,"src":"2154:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":29,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:0"},"scope":81,"src":"2063:97:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":33,"nodeType":"StructuredDocumentation","src":"2166:453:0","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:0","nodeType":"FunctionDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"from","nameLocation":"2661:4:0","nodeType":"VariableDeclaration","scope":44,"src":"2653:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":37,"mutability":"mutable","name":"to","nameLocation":"2675:2:0","nodeType":"VariableDeclaration","scope":44,"src":"2667:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"value","nameLocation":"2687:5:0","nodeType":"VariableDeclaration","scope":44,"src":"2679:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":44,"src":"2712:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:0"},"scope":81,"src":"2624:94:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"2724:536:0","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":58,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:0","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"from","nameLocation":"3302:4:0","nodeType":"VariableDeclaration","scope":58,"src":"3294:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":49,"mutability":"mutable","name":"to","nameLocation":"3316:2:0","nodeType":"VariableDeclaration","scope":58,"src":"3308:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51,"mutability":"mutable","name":"value","nameLocation":"3328:5:0","nodeType":"VariableDeclaration","scope":58,"src":"3320:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"data","nameLocation":"3350:4:0","nodeType":"VariableDeclaration","scope":58,"src":"3335:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":52,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":58,"src":"3374:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:0"},"scope":81,"src":"3265:115:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"3386:390:0","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":68,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"spender","nameLocation":"3813:7:0","nodeType":"VariableDeclaration","scope":68,"src":"3805:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"mutability":"mutable","name":"value","nameLocation":"3830:5:0","nodeType":"VariableDeclaration","scope":68,"src":"3822:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":68,"src":"3855:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":65,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:0"},"scope":81,"src":"3781:80:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"3867:478:0","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":80,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:0","nodeType":"FunctionDefinition","parameters":{"id":76,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"spender","nameLocation":"4382:7:0","nodeType":"VariableDeclaration","scope":80,"src":"4374:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":73,"mutability":"mutable","name":"value","nameLocation":"4399:5:0","nodeType":"VariableDeclaration","scope":80,"src":"4391:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":72,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"data","nameLocation":"4421:4:0","nodeType":"VariableDeclaration","scope":80,"src":"4406:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":74,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:0"},"returnParameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"4445:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":77,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:0"},"scope":81,"src":"4350:101:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":82,"src":"568:3885:0","usedErrors":[],"usedEvents":[753,762]}],"src":"107:4347:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[1403]},"id":86,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":83,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":85,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":86,"sourceUnit":1404,"src":"132:59:1","symbolAliases":[{"foreign":{"id":84,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"140:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[819]},"id":90,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":87,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":89,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":90,"sourceUnit":820,"src":"131:49:2","symbolAliases":[{"foreign":{"id":88,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"139:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:2"},"id":2},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[226],"IERC20Errors":[131],"IERC721Errors":[179]},"id":227,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":91,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"138:141:3","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":131,"linearizedBaseContracts":[131],"name":"IERC20Errors","nameLocation":"290:12:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"309:309:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":101,"name":"ERC20InsufficientBalance","nameLocation":"629:24:3","nodeType":"ErrorDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"sender","nameLocation":"662:6:3","nodeType":"VariableDeclaration","scope":101,"src":"654:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":94,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"balance","nameLocation":"678:7:3","nodeType":"VariableDeclaration","scope":101,"src":"670:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"needed","nameLocation":"695:6:3","nodeType":"VariableDeclaration","scope":101,"src":"687:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:3"},"src":"623:80:3"},{"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"709:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":106,"name":"ERC20InvalidSender","nameLocation":"872:18:3","nodeType":"ErrorDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"sender","nameLocation":"899:6:3","nodeType":"VariableDeclaration","scope":106,"src":"891:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:3"},"src":"866:41:3"},{"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"913:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":111,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:3","nodeType":"ErrorDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:3","nodeType":"VariableDeclaration","scope":111,"src":"1104:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:3"},"src":"1077:45:3"},{"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"1128:345:3","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":120,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:3","nodeType":"ErrorDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"spender","nameLocation":"1519:7:3","nodeType":"VariableDeclaration","scope":120,"src":"1511:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:3","nodeType":"VariableDeclaration","scope":120,"src":"1528:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":115,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":118,"mutability":"mutable","name":"needed","nameLocation":"1555:6:3","nodeType":"VariableDeclaration","scope":120,"src":"1547:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":117,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:3"},"src":"1478:85:3"},{"documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"1569:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":125,"name":"ERC20InvalidApprover","nameLocation":"1754:20:3","nodeType":"ErrorDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":123,"mutability":"mutable","name":"approver","nameLocation":"1783:8:3","nodeType":"VariableDeclaration","scope":125,"src":"1775:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":122,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:3"},"src":"1748:45:3"},{"documentation":{"id":126,"nodeType":"StructuredDocumentation","src":"1799:195:3","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":130,"name":"ERC20InvalidSpender","nameLocation":"2005:19:3","nodeType":"ErrorDefinition","parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"mutability":"mutable","name":"spender","nameLocation":"2033:7:3","nodeType":"VariableDeclaration","scope":130,"src":"2025:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":127,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:3"},"src":"1999:43:3"}],"scope":227,"src":"280:1764:3","usedErrors":[101,106,111,120,125,130],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"2046:143:3","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":179,"linearizedBaseContracts":[179],"name":"IERC721Errors","nameLocation":"2200:13:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":133,"nodeType":"StructuredDocumentation","src":"2220:219:3","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":137,"name":"ERC721InvalidOwner","nameLocation":"2450:18:3","nodeType":"ErrorDefinition","parameters":{"id":136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":135,"mutability":"mutable","name":"owner","nameLocation":"2477:5:3","nodeType":"VariableDeclaration","scope":137,"src":"2469:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":134,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:3"},"src":"2444:40:3"},{"documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"2490:132:3","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":142,"name":"ERC721NonexistentToken","nameLocation":"2633:22:3","nodeType":"ErrorDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:3","nodeType":"VariableDeclaration","scope":142,"src":"2656:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":139,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:3"},"src":"2627:46:3"},{"documentation":{"id":143,"nodeType":"StructuredDocumentation","src":"2679:289:3","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":151,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:3","nodeType":"ErrorDefinition","parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"sender","nameLocation":"3008:6:3","nodeType":"VariableDeclaration","scope":151,"src":"3000:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":144,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":147,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:3","nodeType":"VariableDeclaration","scope":151,"src":"3016:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":146,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":149,"mutability":"mutable","name":"owner","nameLocation":"3041:5:3","nodeType":"VariableDeclaration","scope":151,"src":"3033:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":148,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:3"},"src":"2973:75:3"},{"documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"3054:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":156,"name":"ERC721InvalidSender","nameLocation":"3217:19:3","nodeType":"ErrorDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"sender","nameLocation":"3245:6:3","nodeType":"VariableDeclaration","scope":156,"src":"3237:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":153,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:3"},"src":"3211:42:3"},{"documentation":{"id":157,"nodeType":"StructuredDocumentation","src":"3259:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":161,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:3","nodeType":"ErrorDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:3","nodeType":"VariableDeclaration","scope":161,"src":"3451:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":158,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:3"},"src":"3423:46:3"},{"documentation":{"id":162,"nodeType":"StructuredDocumentation","src":"3475:247:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":168,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:3","nodeType":"ErrorDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"operator","nameLocation":"3768:8:3","nodeType":"VariableDeclaration","scope":168,"src":"3760:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:3","nodeType":"VariableDeclaration","scope":168,"src":"3778:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":165,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:3"},"src":"3727:68:3"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"3801:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":173,"name":"ERC721InvalidApprover","nameLocation":"3986:21:3","nodeType":"ErrorDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"approver","nameLocation":"4016:8:3","nodeType":"VariableDeclaration","scope":173,"src":"4008:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:3"},"src":"3980:46:3"},{"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"4032:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":178,"name":"ERC721InvalidOperator","nameLocation":"4240:21:3","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"operator","nameLocation":"4270:8:3","nodeType":"VariableDeclaration","scope":178,"src":"4262:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:3"},"src":"4234:46:3"}],"scope":227,"src":"2190:2092:3","usedErrors":[137,142,151,156,161,168,173,178],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"4284:145:3","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":226,"linearizedBaseContracts":[226],"name":"IERC1155Errors","nameLocation":"4440:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"4461:361:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":191,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:3","nodeType":"ErrorDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"sender","nameLocation":"4868:6:3","nodeType":"VariableDeclaration","scope":191,"src":"4860:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"balance","nameLocation":"4884:7:3","nodeType":"VariableDeclaration","scope":191,"src":"4876:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"needed","nameLocation":"4901:6:3","nodeType":"VariableDeclaration","scope":191,"src":"4893:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:3","nodeType":"VariableDeclaration","scope":191,"src":"4909:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:3"},"src":"4827:99:3"},{"documentation":{"id":192,"nodeType":"StructuredDocumentation","src":"4932:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":196,"name":"ERC1155InvalidSender","nameLocation":"5095:20:3","nodeType":"ErrorDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"mutability":"mutable","name":"sender","nameLocation":"5124:6:3","nodeType":"VariableDeclaration","scope":196,"src":"5116:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:3"},"src":"5089:43:3"},{"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"5138:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":201,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:3","nodeType":"ErrorDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:3","nodeType":"VariableDeclaration","scope":201,"src":"5331:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:3"},"src":"5302:47:3"},{"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"5355:256:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":208,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:3","nodeType":"ErrorDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"operator","nameLocation":"5659:8:3","nodeType":"VariableDeclaration","scope":208,"src":"5651:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":203,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"owner","nameLocation":"5677:5:3","nodeType":"VariableDeclaration","scope":208,"src":"5669:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:3"},"src":"5616:68:3"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"5690:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":213,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:3","nodeType":"ErrorDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"approver","nameLocation":"5906:8:3","nodeType":"VariableDeclaration","scope":213,"src":"5898:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:3"},"src":"5869:47:3"},{"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"5922:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":218,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:3","nodeType":"ErrorDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"operator","nameLocation":"6161:8:3","nodeType":"VariableDeclaration","scope":218,"src":"6153:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:3"},"src":"6124:47:3"},{"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"6177:280:3","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":225,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:3","nodeType":"ErrorDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:3","nodeType":"VariableDeclaration","scope":225,"src":"6494:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:3","nodeType":"VariableDeclaration","scope":225,"src":"6513:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:3"},"src":"6462:73:3"}],"scope":227,"src":"4430:2107:3","usedErrors":[191,196,201,208,213,218,225],"usedEvents":[]}],"src":"112:6426:3"},"id":3},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1339],"ERC20":[741],"IERC20":[819],"IERC20Errors":[131],"IERC20Metadata":[845]},"id":742,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":228,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":230,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":742,"sourceUnit":820,"src":"131:36:4","symbolAliases":[{"foreign":{"id":229,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"139:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":232,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":742,"sourceUnit":846,"src":"168:63:4","symbolAliases":[{"foreign":{"id":231,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"176:14:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":234,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":742,"sourceUnit":1340,"src":"232:48:4","symbolAliases":[{"foreign":{"id":233,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"240:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":236,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":742,"sourceUnit":227,"src":"281:65:4","symbolAliases":[{"foreign":{"id":235,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"289:12:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":238,"name":"Context","nameLocations":["1133:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1339,"src":"1133:7:4"},"id":239,"nodeType":"InheritanceSpecifier","src":"1133:7:4"},{"baseName":{"id":240,"name":"IERC20","nameLocations":["1142:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"1142:6:4"},"id":241,"nodeType":"InheritanceSpecifier","src":"1142:6:4"},{"baseName":{"id":242,"name":"IERC20Metadata","nameLocations":["1150:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"1150:14:4"},"id":243,"nodeType":"InheritanceSpecifier","src":"1150:14:4"},{"baseName":{"id":244,"name":"IERC20Errors","nameLocations":["1166:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":131,"src":"1166:12:4"},"id":245,"nodeType":"InheritanceSpecifier","src":"1166:12:4"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":237,"nodeType":"StructuredDocumentation","src":"348:757:4","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":741,"linearizedBaseContracts":[741,131,845,819,1339],"name":"ERC20","nameLocation":"1124:5:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":249,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:4","nodeType":"VariableDeclaration","scope":741,"src":"1185:53:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":248,"keyName":"account","keyNameLocation":"1201:7:4","keyType":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":255,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:4","nodeType":"VariableDeclaration","scope":741,"src":"1245:83:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":254,"keyName":"account","keyNameLocation":"1261:7:4","keyType":{"id":250,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":253,"keyName":"spender","keyNameLocation":"1288:7:4","keyType":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":252,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":257,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:4","nodeType":"VariableDeclaration","scope":741,"src":"1335:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":256,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":259,"mutability":"mutable","name":"_name","nameLocation":"1385:5:4","nodeType":"VariableDeclaration","scope":741,"src":"1370:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":258,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":261,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:4","nodeType":"VariableDeclaration","scope":741,"src":"1396:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":260,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":277,"nodeType":"Block","src":"1638:57:4","statements":[{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":269,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"1648:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":270,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"1656:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":272,"nodeType":"ExpressionStatement","src":"1648:13:4"},{"expression":{"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":273,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"1671:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":274,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"1681:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":276,"nodeType":"ExpressionStatement","src":"1671:17:4"}]},"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"1425:152:4","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":278,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"name_","nameLocation":"1608:5:4","nodeType":"VariableDeclaration","scope":278,"src":"1594:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":263,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":266,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:4","nodeType":"VariableDeclaration","scope":278,"src":"1615:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":265,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:4"},"returnParameters":{"id":268,"nodeType":"ParameterList","parameters":[],"src":"1638:0:4"},"scope":741,"src":"1582:113:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[832],"body":{"id":286,"nodeType":"Block","src":"1820:29:4","statements":[{"expression":{"id":284,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"1837:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":283,"id":285,"nodeType":"Return","src":"1830:12:4"}]},"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"1701:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":287,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:4","nodeType":"FunctionDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[],"src":"1773:2:4"},"returnParameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":287,"src":"1805:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":281,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:4"},"scope":741,"src":"1760:89:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[838],"body":{"id":295,"nodeType":"Block","src":"2024:31:4","statements":[{"expression":{"id":293,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"2041:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":292,"id":294,"nodeType":"Return","src":"2034:14:4"}]},"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"1855:102:4","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":296,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:4","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[],"src":"1977:2:4"},"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":296,"src":"2009:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":290,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:4"},"scope":741,"src":"1962:93:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[844],"body":{"id":304,"nodeType":"Block","src":"2744:26:4","statements":[{"expression":{"hexValue":"3138","id":302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":301,"id":303,"nodeType":"Return","src":"2754:9:4"}]},"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"2061:622:4","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":305,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:4","nodeType":"FunctionDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[],"src":"2705:2:4"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":305,"src":"2737:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":299,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:4"},"scope":741,"src":"2688:82:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[768],"body":{"id":313,"nodeType":"Block","src":"2891:36:4","statements":[{"expression":{"id":311,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"2908:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":310,"id":312,"nodeType":"Return","src":"2901:19:4"}]},"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"2776:49:4","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":314,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2839:11:4","nodeType":"FunctionDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"2850:2:4"},"returnParameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":314,"src":"2882:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"2882:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2881:9:4"},"scope":741,"src":"2830:97:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[776],"body":{"id":326,"nodeType":"Block","src":"3059:42:4","statements":[{"expression":{"baseExpression":{"id":322,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"3076:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":324,"indexExpression":{"id":323,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"3086:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3076:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":321,"id":325,"nodeType":"Return","src":"3069:25:4"}]},"documentation":{"id":315,"nodeType":"StructuredDocumentation","src":"2933:47:4","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":327,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2994:9:4","nodeType":"FunctionDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":317,"mutability":"mutable","name":"account","nameLocation":"3012:7:4","nodeType":"VariableDeclaration","scope":327,"src":"3004:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":316,"name":"address","nodeType":"ElementaryTypeName","src":"3004:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3003:17:4"},"returnParameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":327,"src":"3050:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3049:9:4"},"scope":741,"src":"2985:116:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[786],"body":{"id":350,"nodeType":"Block","src":"3371:103:4","statements":[{"assignments":[338],"declarations":[{"constant":false,"id":338,"mutability":"mutable","name":"owner","nameLocation":"3389:5:4","nodeType":"VariableDeclaration","scope":350,"src":"3381:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"3381:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":341,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":339,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"3397:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3397:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3381:28:4"},{"expression":{"arguments":[{"id":343,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"3429:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":344,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3436:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3440:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":342,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"3419:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3419:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"ExpressionStatement","src":"3419:27:4"},{"expression":{"hexValue":"74727565","id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3463:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":336,"id":349,"nodeType":"Return","src":"3456:11:4"}]},"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"3107:184:4","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":351,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3305:8:4","nodeType":"FunctionDefinition","parameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"mutability":"mutable","name":"to","nameLocation":"3322:2:4","nodeType":"VariableDeclaration","scope":351,"src":"3314:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"3314:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"value","nameLocation":"3334:5:4","nodeType":"VariableDeclaration","scope":351,"src":"3326:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"3326:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3313:27:4"},"returnParameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":351,"src":"3365:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":334,"name":"bool","nodeType":"ElementaryTypeName","src":"3365:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3364:6:4"},"scope":741,"src":"3296:178:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[796],"body":{"id":367,"nodeType":"Block","src":"3621:51:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":361,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"3638:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":363,"indexExpression":{"id":362,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"3650:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":365,"indexExpression":{"id":364,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"3657:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":360,"id":366,"nodeType":"Return","src":"3631:34:4"}]},"documentation":{"id":352,"nodeType":"StructuredDocumentation","src":"3480:47:4","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":368,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3541:9:4","nodeType":"FunctionDefinition","parameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"owner","nameLocation":"3559:5:4","nodeType":"VariableDeclaration","scope":368,"src":"3551:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"3551:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":356,"mutability":"mutable","name":"spender","nameLocation":"3574:7:4","nodeType":"VariableDeclaration","scope":368,"src":"3566:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":355,"name":"address","nodeType":"ElementaryTypeName","src":"3566:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3550:32:4"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":368,"src":"3612:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:9:4"},"scope":741,"src":"3532:140:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[806],"body":{"id":391,"nodeType":"Block","src":"4058:107:4","statements":[{"assignments":[379],"declarations":[{"constant":false,"id":379,"mutability":"mutable","name":"owner","nameLocation":"4076:5:4","nodeType":"VariableDeclaration","scope":391,"src":"4068:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"4068:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":382,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":380,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"4084:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4084:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4068:28:4"},{"expression":{"arguments":[{"id":384,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"4115:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":385,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"4122:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"4131:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":383,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[632,692],"referencedDeclaration":632,"src":"4106:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4106:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":388,"nodeType":"ExpressionStatement","src":"4106:31:4"},{"expression":{"hexValue":"74727565","id":389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4154:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":377,"id":390,"nodeType":"Return","src":"4147:11:4"}]},"documentation":{"id":369,"nodeType":"StructuredDocumentation","src":"3678:296:4","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":392,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3988:7:4","nodeType":"FunctionDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"mutability":"mutable","name":"spender","nameLocation":"4004:7:4","nodeType":"VariableDeclaration","scope":392,"src":"3996:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"3996:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":373,"mutability":"mutable","name":"value","nameLocation":"4021:5:4","nodeType":"VariableDeclaration","scope":392,"src":"4013:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"4013:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3995:32:4"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":392,"src":"4052:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":375,"name":"bool","nodeType":"ElementaryTypeName","src":"4052:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4051:6:4"},"scope":741,"src":"3979:186:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[818],"body":{"id":423,"nodeType":"Block","src":"4850:151:4","statements":[{"assignments":[405],"declarations":[{"constant":false,"id":405,"mutability":"mutable","name":"spender","nameLocation":"4868:7:4","nodeType":"VariableDeclaration","scope":423,"src":"4860:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":404,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":408,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":406,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"4878:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4878:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4860:30:4"},{"expression":{"arguments":[{"id":410,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"4916:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":411,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"4922:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"4931:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":409,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"4900:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4900:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":414,"nodeType":"ExpressionStatement","src":"4900:37:4"},{"expression":{"arguments":[{"id":416,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"4957:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":417,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4963:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"4967:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":415,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"4947:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4947:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":420,"nodeType":"ExpressionStatement","src":"4947:26:4"},{"expression":{"hexValue":"74727565","id":421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4990:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":403,"id":422,"nodeType":"Return","src":"4983:11:4"}]},"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"4171:581:4","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":424,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4766:12:4","nodeType":"FunctionDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"from","nameLocation":"4787:4:4","nodeType":"VariableDeclaration","scope":424,"src":"4779:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"4779:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":397,"mutability":"mutable","name":"to","nameLocation":"4801:2:4","nodeType":"VariableDeclaration","scope":424,"src":"4793:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":396,"name":"address","nodeType":"ElementaryTypeName","src":"4793:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":399,"mutability":"mutable","name":"value","nameLocation":"4813:5:4","nodeType":"VariableDeclaration","scope":424,"src":"4805:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"4805:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4778:41:4"},"returnParameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":424,"src":"4844:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":401,"name":"bool","nodeType":"ElementaryTypeName","src":"4844:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4843:6:4"},"scope":741,"src":"4757:244:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":470,"nodeType":"Block","src":"5443:231:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":434,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"5457:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5473:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5465:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"5465:7:4","typeDescriptions":{}}},"id":438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5465:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5457:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":448,"nodeType":"IfStatement","src":"5453:86:4","trueBody":{"id":447,"nodeType":"Block","src":"5477:62:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5525:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5517:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"5517:7:4","typeDescriptions":{}}},"id":444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":440,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"5498:18:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":446,"nodeType":"RevertStatement","src":"5491:37:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":449,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"5552:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5566:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5558:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:4","typeDescriptions":{}}},"id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5558:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5552:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":463,"nodeType":"IfStatement","src":"5548:86:4","trueBody":{"id":462,"nodeType":"Block","src":"5570:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5620:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"5612:7:4","typeDescriptions":{}}},"id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":455,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"5591:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5591:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":461,"nodeType":"RevertStatement","src":"5584:39:4"}]}},{"expression":{"arguments":[{"id":465,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"5651:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":466,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"5657:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"5661:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":464,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"5643:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":469,"nodeType":"ExpressionStatement","src":"5643:24:4"}]},"documentation":{"id":425,"nodeType":"StructuredDocumentation","src":"5007:362:4","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":471,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5383:9:4","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"mutability":"mutable","name":"from","nameLocation":"5401:4:4","nodeType":"VariableDeclaration","scope":471,"src":"5393:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":426,"name":"address","nodeType":"ElementaryTypeName","src":"5393:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":429,"mutability":"mutable","name":"to","nameLocation":"5415:2:4","nodeType":"VariableDeclaration","scope":471,"src":"5407:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"5407:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"value","nameLocation":"5427:5:4","nodeType":"VariableDeclaration","scope":471,"src":"5419:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"5419:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5392:41:4"},"returnParameters":{"id":433,"nodeType":"ParameterList","parameters":[],"src":"5443:0:4"},"scope":741,"src":"5374:300:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":547,"nodeType":"Block","src":"6064:1032:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":481,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"6078:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6094:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6086:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"6086:7:4","typeDescriptions":{}}},"id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6086:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6078:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":518,"nodeType":"Block","src":"6252:362:4","statements":[{"assignments":[493],"declarations":[{"constant":false,"id":493,"mutability":"mutable","name":"fromBalance","nameLocation":"6274:11:4","nodeType":"VariableDeclaration","scope":518,"src":"6266:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"6266:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":497,"initialValue":{"baseExpression":{"id":494,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"6288:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":496,"indexExpression":{"id":495,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"6298:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6288:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6266:37:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":498,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"6321:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"6335:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6321:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":508,"nodeType":"IfStatement","src":"6317:115:4","trueBody":{"id":507,"nodeType":"Block","src":"6342:90:4","statements":[{"errorCall":{"arguments":[{"id":502,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"6392:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":503,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"6398:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"6411:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":501,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"6367:24:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6367:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":506,"nodeType":"RevertStatement","src":"6360:57:4"}]}},{"id":517,"nodeType":"UncheckedBlock","src":"6445:159:4","statements":[{"expression":{"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":509,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"6552:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":511,"indexExpression":{"id":510,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"6562:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6552:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":512,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"6570:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"6584:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6570:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6552:37:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":516,"nodeType":"ExpressionStatement","src":"6552:37:4"}]}]},"id":519,"nodeType":"IfStatement","src":"6074:540:4","trueBody":{"id":491,"nodeType":"Block","src":"6098:148:4","statements":[{"expression":{"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":487,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"6214:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"6230:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6214:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":490,"nodeType":"ExpressionStatement","src":"6214:21:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":520,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"6628:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6642:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6634:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:4","typeDescriptions":{}}},"id":524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6634:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6628:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":539,"nodeType":"Block","src":"6843:206:4","statements":[{"id":538,"nodeType":"UncheckedBlock","src":"6857:182:4","statements":[{"expression":{"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":532,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"7002:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":534,"indexExpression":{"id":533,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"7012:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7002:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"7019:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7002:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":537,"nodeType":"ExpressionStatement","src":"7002:22:4"}]}]},"id":540,"nodeType":"IfStatement","src":"6624:425:4","trueBody":{"id":531,"nodeType":"Block","src":"6646:191:4","statements":[{"id":530,"nodeType":"UncheckedBlock","src":"6660:167:4","statements":[{"expression":{"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":526,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"6791:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"6807:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6791:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":529,"nodeType":"ExpressionStatement","src":"6791:21:4"}]}]}},{"eventCall":{"arguments":[{"id":542,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"7073:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":543,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"7079:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"7083:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":541,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7064:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7064:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":546,"nodeType":"EmitStatement","src":"7059:30:4"}]},"documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"5680:304:4","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":548,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5998:7:4","nodeType":"FunctionDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"from","nameLocation":"6014:4:4","nodeType":"VariableDeclaration","scope":548,"src":"6006:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"6006:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":476,"mutability":"mutable","name":"to","nameLocation":"6028:2:4","nodeType":"VariableDeclaration","scope":548,"src":"6020:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"6020:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":478,"mutability":"mutable","name":"value","nameLocation":"6040:5:4","nodeType":"VariableDeclaration","scope":548,"src":"6032:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"6032:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6005:41:4"},"returnParameters":{"id":480,"nodeType":"ParameterList","parameters":[],"src":"6064:0:4"},"scope":741,"src":"5989:1107:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":580,"nodeType":"Block","src":"7495:152:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":556,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"7509:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7528:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7520:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"7520:7:4","typeDescriptions":{}}},"id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7520:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7509:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":570,"nodeType":"IfStatement","src":"7505:91:4","trueBody":{"id":569,"nodeType":"Block","src":"7532:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7582:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7574:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":563,"name":"address","nodeType":"ElementaryTypeName","src":"7574:7:4","typeDescriptions":{}}},"id":566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7574:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":562,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"7553:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7553:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":568,"nodeType":"RevertStatement","src":"7546:39:4"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7621:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7613:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"7613:7:4","typeDescriptions":{}}},"id":575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7613:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":576,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"7625:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"7634:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":571,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"7605:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7605:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":579,"nodeType":"ExpressionStatement","src":"7605:35:4"}]},"documentation":{"id":549,"nodeType":"StructuredDocumentation","src":"7102:332:4","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":581,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7448:5:4","nodeType":"FunctionDefinition","parameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"account","nameLocation":"7462:7:4","nodeType":"VariableDeclaration","scope":581,"src":"7454:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":550,"name":"address","nodeType":"ElementaryTypeName","src":"7454:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":553,"mutability":"mutable","name":"value","nameLocation":"7479:5:4","nodeType":"VariableDeclaration","scope":581,"src":"7471:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"7471:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7453:32:4"},"returnParameters":{"id":555,"nodeType":"ParameterList","parameters":[],"src":"7495:0:4"},"scope":741,"src":"7439:208:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":613,"nodeType":"Block","src":"8021:150:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":589,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"8035:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8054:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8046:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"8046:7:4","typeDescriptions":{}}},"id":593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8046:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8035:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":603,"nodeType":"IfStatement","src":"8031:89:4","trueBody":{"id":602,"nodeType":"Block","src":"8058:62:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8106:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8098:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"8098:7:4","typeDescriptions":{}}},"id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":595,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"8079:18:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8079:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":601,"nodeType":"RevertStatement","src":"8072:37:4"}]}},{"expression":{"arguments":[{"id":605,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"8137:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8154:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8146:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"8146:7:4","typeDescriptions":{}}},"id":609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8146:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"8158:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":604,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"8129:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8129:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":612,"nodeType":"ExpressionStatement","src":"8129:35:4"}]},"documentation":{"id":582,"nodeType":"StructuredDocumentation","src":"7653:307:4","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":614,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7974:5:4","nodeType":"FunctionDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"mutability":"mutable","name":"account","nameLocation":"7988:7:4","nodeType":"VariableDeclaration","scope":614,"src":"7980:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"7980:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"value","nameLocation":"8005:5:4","nodeType":"VariableDeclaration","scope":614,"src":"7997:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"7997:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7979:32:4"},"returnParameters":{"id":588,"nodeType":"ParameterList","parameters":[],"src":"8021:0:4"},"scope":741,"src":"7965:206:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":631,"nodeType":"Block","src":"8781:54:4","statements":[{"expression":{"arguments":[{"id":625,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"8800:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":626,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"8807:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"8816:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8823:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":624,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[632,692],"referencedDeclaration":692,"src":"8791:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8791:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":630,"nodeType":"ExpressionStatement","src":"8791:37:4"}]},"documentation":{"id":615,"nodeType":"StructuredDocumentation","src":"8177:525:4","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":632,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8716:8:4","nodeType":"FunctionDefinition","parameters":{"id":622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":617,"mutability":"mutable","name":"owner","nameLocation":"8733:5:4","nodeType":"VariableDeclaration","scope":632,"src":"8725:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":616,"name":"address","nodeType":"ElementaryTypeName","src":"8725:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":619,"mutability":"mutable","name":"spender","nameLocation":"8748:7:4","nodeType":"VariableDeclaration","scope":632,"src":"8740:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":618,"name":"address","nodeType":"ElementaryTypeName","src":"8740:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":621,"mutability":"mutable","name":"value","nameLocation":"8765:5:4","nodeType":"VariableDeclaration","scope":632,"src":"8757:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":620,"name":"uint256","nodeType":"ElementaryTypeName","src":"8757:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8724:47:4"},"returnParameters":{"id":623,"nodeType":"ParameterList","parameters":[],"src":"8781:0:4"},"scope":741,"src":"8707:128:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":691,"nodeType":"Block","src":"9780:334:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":644,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"9794:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9811:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"9803:7:4","typeDescriptions":{}}},"id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9794:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":658,"nodeType":"IfStatement","src":"9790:89:4","trueBody":{"id":657,"nodeType":"Block","src":"9815:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9865:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9857:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"9857:7:4","typeDescriptions":{}}},"id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9857:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":650,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"9836:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9836:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":656,"nodeType":"RevertStatement","src":"9829:39:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":659,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9892:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9911:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9903:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"9903:7:4","typeDescriptions":{}}},"id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9892:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":673,"nodeType":"IfStatement","src":"9888:90:4","trueBody":{"id":672,"nodeType":"Block","src":"9915:63:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9964:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9956:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"9956:7:4","typeDescriptions":{}}},"id":669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9956:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":665,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"9936:19:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9936:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":671,"nodeType":"RevertStatement","src":"9929:38:4"}]}},{"expression":{"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":674,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"9987:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":677,"indexExpression":{"id":675,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"9999:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9987:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":678,"indexExpression":{"id":676,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"10006:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9987:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"10017:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9987:35:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":681,"nodeType":"ExpressionStatement","src":"9987:35:4"},{"condition":{"id":682,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"10036:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":690,"nodeType":"IfStatement","src":"10032:76:4","trueBody":{"id":689,"nodeType":"Block","src":"10047:61:4","statements":[{"eventCall":{"arguments":[{"id":684,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"10075:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":685,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"10082:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"10091:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":683,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"10066:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10066:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"EmitStatement","src":"10061:36:4"}]}}]},"documentation":{"id":633,"nodeType":"StructuredDocumentation","src":"8841:836:4","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":692,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9691:8:4","nodeType":"FunctionDefinition","parameters":{"id":642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"mutability":"mutable","name":"owner","nameLocation":"9708:5:4","nodeType":"VariableDeclaration","scope":692,"src":"9700:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"9700:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":637,"mutability":"mutable","name":"spender","nameLocation":"9723:7:4","nodeType":"VariableDeclaration","scope":692,"src":"9715:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"9715:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":639,"mutability":"mutable","name":"value","nameLocation":"9740:5:4","nodeType":"VariableDeclaration","scope":692,"src":"9732:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"9732:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":641,"mutability":"mutable","name":"emitEvent","nameLocation":"9752:9:4","nodeType":"VariableDeclaration","scope":692,"src":"9747:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":640,"name":"bool","nodeType":"ElementaryTypeName","src":"9747:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9699:63:4"},"returnParameters":{"id":643,"nodeType":"ParameterList","parameters":[],"src":"9780:0:4"},"scope":741,"src":"9682:432:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":739,"nodeType":"Block","src":"10485:387:4","statements":[{"assignments":[703],"declarations":[{"constant":false,"id":703,"mutability":"mutable","name":"currentAllowance","nameLocation":"10503:16:4","nodeType":"VariableDeclaration","scope":739,"src":"10495:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":702,"name":"uint256","nodeType":"ElementaryTypeName","src":"10495:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":708,"initialValue":{"arguments":[{"id":705,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10532:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":706,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10539:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":704,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"10522:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10522:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10495:52:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":709,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"10561:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10585:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":711,"name":"uint256","nodeType":"ElementaryTypeName","src":"10585:7:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":710,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10580:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10580:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10594:3:4","memberName":"max","nodeType":"MemberAccess","src":"10580:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10561:36:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":738,"nodeType":"IfStatement","src":"10557:309:4","trueBody":{"id":737,"nodeType":"Block","src":"10599:267:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":716,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"10617:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"10636:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10617:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":726,"nodeType":"IfStatement","src":"10613:130:4","trueBody":{"id":725,"nodeType":"Block","src":"10643:100:4","statements":[{"errorCall":{"arguments":[{"id":720,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10695:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":721,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"10704:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"10722:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":719,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"10668:26:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10668:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":724,"nodeType":"RevertStatement","src":"10661:67:4"}]}},{"id":736,"nodeType":"UncheckedBlock","src":"10756:100:4","statements":[{"expression":{"arguments":[{"id":728,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10793:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":729,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10800:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":730,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"10809:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"10828:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10809:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10835:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":727,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[632,692],"referencedDeclaration":692,"src":"10784:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10784:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":735,"nodeType":"ExpressionStatement","src":"10784:57:4"}]}]}}]},"documentation":{"id":693,"nodeType":"StructuredDocumentation","src":"10120:271:4","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":740,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10405:15:4","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"owner","nameLocation":"10429:5:4","nodeType":"VariableDeclaration","scope":740,"src":"10421:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"10421:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"spender","nameLocation":"10444:7:4","nodeType":"VariableDeclaration","scope":740,"src":"10436:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"10436:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"value","nameLocation":"10461:5:4","nodeType":"VariableDeclaration","scope":740,"src":"10453:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":698,"name":"uint256","nodeType":"ElementaryTypeName","src":"10453:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10420:47:4"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"10485:0:4"},"scope":741,"src":"10396:476:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":742,"src":"1106:9768:4","usedErrors":[101,106,111,120,125,130],"usedEvents":[753,762]}],"src":"105:10770:4"},"id":4},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[819]},"id":820,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":743,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":744,"nodeType":"StructuredDocumentation","src":"132:71:5","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":819,"linearizedBaseContracts":[819],"name":"IERC20","nameLocation":"214:6:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"227:158:5","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":753,"name":"Transfer","nameLocation":"396:8:5","nodeType":"EventDefinition","parameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:5","nodeType":"VariableDeclaration","scope":753,"src":"405:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":749,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:5","nodeType":"VariableDeclaration","scope":753,"src":"427:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":751,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:5","nodeType":"VariableDeclaration","scope":753,"src":"447:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":750,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:5"},"src":"390:72:5"},{"anonymous":false,"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"468:148:5","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":762,"name":"Approval","nameLocation":"627:8:5","nodeType":"EventDefinition","parameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:5","nodeType":"VariableDeclaration","scope":762,"src":"636:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":758,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:5","nodeType":"VariableDeclaration","scope":762,"src":"659:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":757,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":760,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:5","nodeType":"VariableDeclaration","scope":762,"src":"684:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":759,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:5"},"src":"621:78:5"},{"documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"705:65:5","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":768,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:5","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[],"src":"795:2:5"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":768,"src":"821:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":765,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:5"},"scope":819,"src":"775:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"836:71:5","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":776,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:5","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"account","nameLocation":"939:7:5","nodeType":"VariableDeclaration","scope":776,"src":"931:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:5"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"971:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":773,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:5"},"scope":819,"src":"912:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":777,"nodeType":"StructuredDocumentation","src":"986:213:5","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":786,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:5","nodeType":"FunctionDefinition","parameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"to","nameLocation":"1230:2:5","nodeType":"VariableDeclaration","scope":786,"src":"1222:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":778,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":781,"mutability":"mutable","name":"value","nameLocation":"1242:5:5","nodeType":"VariableDeclaration","scope":786,"src":"1234:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":780,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:5"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":786,"src":"1267:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":783,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:5"},"scope":819,"src":"1204:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":787,"nodeType":"StructuredDocumentation","src":"1279:264:5","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":796,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:5","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"owner","nameLocation":"1575:5:5","nodeType":"VariableDeclaration","scope":796,"src":"1567:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"spender","nameLocation":"1590:7:5","nodeType":"VariableDeclaration","scope":796,"src":"1582:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:5"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":796,"src":"1622:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":793,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:5"},"scope":819,"src":"1548:83:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":797,"nodeType":"StructuredDocumentation","src":"1637:667:5","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":806,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:5","nodeType":"FunctionDefinition","parameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"spender","nameLocation":"2334:7:5","nodeType":"VariableDeclaration","scope":806,"src":"2326:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":801,"mutability":"mutable","name":"value","nameLocation":"2351:5:5","nodeType":"VariableDeclaration","scope":806,"src":"2343:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":800,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:5"},"returnParameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":806,"src":"2376:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":803,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:5"},"scope":819,"src":"2309:73:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":807,"nodeType":"StructuredDocumentation","src":"2388:297:5","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":818,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:5","nodeType":"FunctionDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"mutability":"mutable","name":"from","nameLocation":"2720:4:5","nodeType":"VariableDeclaration","scope":818,"src":"2712:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":811,"mutability":"mutable","name":"to","nameLocation":"2734:2:5","nodeType":"VariableDeclaration","scope":818,"src":"2726:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":813,"mutability":"mutable","name":"value","nameLocation":"2746:5:5","nodeType":"VariableDeclaration","scope":818,"src":"2738:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":812,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:5"},"returnParameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":818,"src":"2771:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":815,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:5"},"scope":819,"src":"2690:87:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":820,"src":"204:2575:5","usedErrors":[],"usedEvents":[753,762]}],"src":"106:2674:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[819],"IERC20Metadata":[845]},"id":846,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":821,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":823,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":846,"sourceUnit":820,"src":"151:37:6","symbolAliases":[{"foreign":{"id":822,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"159:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":825,"name":"IERC20","nameLocations":["306:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"306:6:6"},"id":826,"nodeType":"InheritanceSpecifier","src":"306:6:6"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":824,"nodeType":"StructuredDocumentation","src":"190:87:6","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":845,"linearizedBaseContracts":[845,819],"name":"IERC20Metadata","nameLocation":"288:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"319:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":832,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:6","nodeType":"FunctionDefinition","parameters":{"id":828,"nodeType":"ParameterList","parameters":[],"src":"391:2:6"},"returnParameters":{"id":831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":832,"src":"417:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":829,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:6"},"scope":845,"src":"378:54:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"438:56:6","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":838,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:6","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[],"src":"514:2:6"},"returnParameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":838,"src":"540:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":835,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:6"},"scope":845,"src":"499:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":839,"nodeType":"StructuredDocumentation","src":"561:65:6","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":844,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:6","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[],"src":"648:2:6"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":844,"src":"674:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":841,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:6"},"scope":845,"src":"631:50:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":846,"src":"278:405:6","usedErrors":[],"usedEvents":[753,762]}],"src":"125:559:6"},"id":6},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[81],"IERC20":[819],"SafeERC20":[1309]},"id":1310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":847,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":849,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1310,"sourceUnit":820,"src":"141:37:7","symbolAliases":[{"foreign":{"id":848,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"149:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":851,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1310,"sourceUnit":82,"src":"179:58:7","symbolAliases":[{"foreign":{"id":850,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"187:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"239:458:7","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1309,"linearizedBaseContracts":[1309],"name":"SafeERC20","nameLocation":"706:9:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":853,"nodeType":"StructuredDocumentation","src":"722:65:7","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":857,"name":"SafeERC20FailedOperation","nameLocation":"798:24:7","nodeType":"ErrorDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"mutability":"mutable","name":"token","nameLocation":"831:5:7","nodeType":"VariableDeclaration","scope":857,"src":"823:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:7"},"src":"792:46:7"},{"documentation":{"id":858,"nodeType":"StructuredDocumentation","src":"844:71:7","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":866,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:7","nodeType":"ErrorDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":860,"mutability":"mutable","name":"spender","nameLocation":"967:7:7","nodeType":"VariableDeclaration","scope":866,"src":"959:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":859,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":862,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:7","nodeType":"VariableDeclaration","scope":866,"src":"976:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":861,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:7","nodeType":"VariableDeclaration","scope":866,"src":"1002:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:7"},"src":"920:109:7"},{"body":{"id":889,"nodeType":"Block","src":"1291:88:7","statements":[{"expression":{"arguments":[{"id":878,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"1321:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":881,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"1343:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":786,"src":"1343:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":883,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"1360:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"1364:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":885,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":879,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":877,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"1301:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":888,"nodeType":"ExpressionStatement","src":"1301:71:7"}]},"documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"1035:179:7","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":890,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:7","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"token","nameLocation":"1248:5:7","nodeType":"VariableDeclaration","scope":890,"src":"1241:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"},"typeName":{"id":869,"nodeType":"UserDefinedTypeName","pathNode":{"id":868,"name":"IERC20","nameLocations":["1241:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"1241:6:7"},"referencedDeclaration":819,"src":"1241:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"to","nameLocation":"1263:2:7","nodeType":"VariableDeclaration","scope":890,"src":"1255:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"value","nameLocation":"1275:5:7","nodeType":"VariableDeclaration","scope":890,"src":"1267:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":873,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:7"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[],"src":"1291:0:7"},"scope":1309,"src":"1219:160:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":916,"nodeType":"Block","src":"1708:98:7","statements":[{"expression":{"arguments":[{"id":904,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"1738:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":907,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"1760:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:7","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":818,"src":"1760:18:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":909,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"1781:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":910,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"1787:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"1791:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":912,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":905,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":903,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"1718:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":915,"nodeType":"ExpressionStatement","src":"1718:81:7"}]},"documentation":{"id":891,"nodeType":"StructuredDocumentation","src":"1385:228:7","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":917,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:7","nodeType":"FunctionDefinition","parameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"token","nameLocation":"1651:5:7","nodeType":"VariableDeclaration","scope":917,"src":"1644:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"},"typeName":{"id":893,"nodeType":"UserDefinedTypeName","pathNode":{"id":892,"name":"IERC20","nameLocations":["1644:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"1644:6:7"},"referencedDeclaration":819,"src":"1644:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"from","nameLocation":"1666:4:7","nodeType":"VariableDeclaration","scope":917,"src":"1658:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":898,"mutability":"mutable","name":"to","nameLocation":"1680:2:7","nodeType":"VariableDeclaration","scope":917,"src":"1672:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":897,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":900,"mutability":"mutable","name":"value","nameLocation":"1692:5:7","nodeType":"VariableDeclaration","scope":917,"src":"1684:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":899,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:7"},"returnParameters":{"id":902,"nodeType":"ParameterList","parameters":[],"src":"1708:0:7"},"scope":1309,"src":"1618:188:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":942,"nodeType":"Block","src":"2033:99:7","statements":[{"expression":{"arguments":[{"id":931,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"2074:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":934,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"2096:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":786,"src":"2096:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":936,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"2113:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"2117:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":938,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2112:11:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":932,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2081:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2085:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"2081:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":930,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"2050:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2050:75:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":929,"id":941,"nodeType":"Return","src":"2043:82:7"}]},"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"1812:126:7","text":" @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."},"id":943,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransfer","nameLocation":"1952:15:7","nodeType":"FunctionDefinition","parameters":{"id":926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":921,"mutability":"mutable","name":"token","nameLocation":"1975:5:7","nodeType":"VariableDeclaration","scope":943,"src":"1968:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"},"typeName":{"id":920,"nodeType":"UserDefinedTypeName","pathNode":{"id":919,"name":"IERC20","nameLocations":["1968:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"1968:6:7"},"referencedDeclaration":819,"src":"1968:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":923,"mutability":"mutable","name":"to","nameLocation":"1990:2:7","nodeType":"VariableDeclaration","scope":943,"src":"1982:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":925,"mutability":"mutable","name":"value","nameLocation":"2002:5:7","nodeType":"VariableDeclaration","scope":943,"src":"1994:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":924,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1967:41:7"},"returnParameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":943,"src":"2027:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":927,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:7"},"scope":1309,"src":"1943:189:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":971,"nodeType":"Block","src":"2381:109:7","statements":[{"expression":{"arguments":[{"id":959,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"2422:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":962,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"2444:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:7","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":818,"src":"2444:18:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":964,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"2465:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":965,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"2471:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"2475:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":967,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2464:17:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":960,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2429:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2433:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"2429:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":958,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"2398:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:85:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":957,"id":970,"nodeType":"Return","src":"2391:92:7"}]},"documentation":{"id":944,"nodeType":"StructuredDocumentation","src":"2138:130:7","text":" @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."},"id":972,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransferFrom","nameLocation":"2282:19:7","nodeType":"FunctionDefinition","parameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"token","nameLocation":"2309:5:7","nodeType":"VariableDeclaration","scope":972,"src":"2302:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"},"typeName":{"id":946,"nodeType":"UserDefinedTypeName","pathNode":{"id":945,"name":"IERC20","nameLocations":["2302:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"2302:6:7"},"referencedDeclaration":819,"src":"2302:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"from","nameLocation":"2324:4:7","nodeType":"VariableDeclaration","scope":972,"src":"2316:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":948,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"to","nameLocation":"2338:2:7","nodeType":"VariableDeclaration","scope":972,"src":"2330:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"2330:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"value","nameLocation":"2350:5:7","nodeType":"VariableDeclaration","scope":972,"src":"2342:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":952,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:55:7"},"returnParameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":972,"src":"2375:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":955,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:7"},"scope":1309,"src":"2273:217:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1002,"nodeType":"Block","src":"3232:139:7","statements":[{"assignments":[984],"declarations":[{"constant":false,"id":984,"mutability":"mutable","name":"oldAllowance","nameLocation":"3250:12:7","nodeType":"VariableDeclaration","scope":1002,"src":"3242:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":993,"initialValue":{"arguments":[{"arguments":[{"id":989,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3289:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1309","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1309","typeString":"library SafeERC20"}],"id":988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3281:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:7","typeDescriptions":{}}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":991,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"3296:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":985,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"3265:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:9:7","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":796,"src":"3265:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3242:62:7"},{"expression":{"arguments":[{"id":995,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"3327:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},{"id":996,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"3334:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":997,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"3343:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"3358:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3343:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":994,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"3314:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1001,"nodeType":"ExpressionStatement","src":"3314:50:7"}]},"documentation":{"id":973,"nodeType":"StructuredDocumentation","src":"2496:645:7","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1003,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"3155:21:7","nodeType":"FunctionDefinition","parameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":976,"mutability":"mutable","name":"token","nameLocation":"3184:5:7","nodeType":"VariableDeclaration","scope":1003,"src":"3177:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"},"typeName":{"id":975,"nodeType":"UserDefinedTypeName","pathNode":{"id":974,"name":"IERC20","nameLocations":["3177:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"3177:6:7"},"referencedDeclaration":819,"src":"3177:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"spender","nameLocation":"3199:7:7","nodeType":"VariableDeclaration","scope":1003,"src":"3191:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":977,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":980,"mutability":"mutable","name":"value","nameLocation":"3216:5:7","nodeType":"VariableDeclaration","scope":1003,"src":"3208:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":979,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3176:46:7"},"returnParameters":{"id":982,"nodeType":"ParameterList","parameters":[],"src":"3232:0:7"},"scope":1309,"src":"3146:225:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1045,"nodeType":"Block","src":"4137:370:7","statements":[{"id":1044,"nodeType":"UncheckedBlock","src":"4147:354:7","statements":[{"assignments":[1015],"declarations":[{"constant":false,"id":1015,"mutability":"mutable","name":"currentAllowance","nameLocation":"4179:16:7","nodeType":"VariableDeclaration","scope":1044,"src":"4171:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1024,"initialValue":{"arguments":[{"arguments":[{"id":1020,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4222:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1309","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1309","typeString":"library SafeERC20"}],"id":1019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4214:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1018,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:7","typeDescriptions":{}}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1022,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"4229:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1016,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"4198:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:9:7","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":796,"src":"4198:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4171:66:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1025,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"4255:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1026,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"4274:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4255:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1035,"nodeType":"IfStatement","src":"4251:160:7","trueBody":{"id":1034,"nodeType":"Block","src":"4293:118:7","statements":[{"errorCall":{"arguments":[{"id":1029,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"4351:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1030,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"4360:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1031,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"4378:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1028,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"4318:32:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1033,"nodeType":"RevertStatement","src":"4311:85:7"}]}},{"expression":{"arguments":[{"id":1037,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"4437:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},{"id":1038,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"4444:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1039,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"4453:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1040,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"4472:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1036,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"4424:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1043,"nodeType":"ExpressionStatement","src":"4424:66:7"}]}]},"documentation":{"id":1004,"nodeType":"StructuredDocumentation","src":"3377:657:7","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1046,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"4048:21:7","nodeType":"FunctionDefinition","parameters":{"id":1012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1007,"mutability":"mutable","name":"token","nameLocation":"4077:5:7","nodeType":"VariableDeclaration","scope":1046,"src":"4070:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"},"typeName":{"id":1006,"nodeType":"UserDefinedTypeName","pathNode":{"id":1005,"name":"IERC20","nameLocations":["4070:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"4070:6:7"},"referencedDeclaration":819,"src":"4070:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1009,"mutability":"mutable","name":"spender","nameLocation":"4092:7:7","nodeType":"VariableDeclaration","scope":1046,"src":"4084:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1011,"mutability":"mutable","name":"requestedDecrease","nameLocation":"4109:17:7","nodeType":"VariableDeclaration","scope":1046,"src":"4101:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:58:7"},"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[],"src":"4137:0:7"},"scope":1309,"src":"4039:468:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1092,"nodeType":"Block","src":"5161:303:7","statements":[{"assignments":[1058],"declarations":[{"constant":false,"id":1058,"mutability":"mutable","name":"approvalCall","nameLocation":"5184:12:7","nodeType":"VariableDeclaration","scope":1092,"src":"5171:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1057,"name":"bytes","nodeType":"ElementaryTypeName","src":"5171:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1067,"initialValue":{"arguments":[{"expression":{"id":1061,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"5214:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5220:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":806,"src":"5214:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1063,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"5230:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"5239:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1065,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5229:16:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1059,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5199:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5203:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"5199:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5171:75:7"},{"condition":{"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5261:45:7","subExpression":{"arguments":[{"id":1069,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"5286:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},{"id":1070,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"5293:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1068,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"5262:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1091,"nodeType":"IfStatement","src":"5257:201:7","trueBody":{"id":1090,"nodeType":"Block","src":"5308:150:7","statements":[{"expression":{"arguments":[{"id":1074,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"5342:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1077,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"5364:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5370:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":806,"src":"5364:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1079,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"5380:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1081,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5379:12:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1075,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5349:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5353:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"5349:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1073,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"5322:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1084,"nodeType":"ExpressionStatement","src":"5322:71:7"},{"expression":{"arguments":[{"id":1086,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"5427:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},{"id":1087,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"5434:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1085,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"5407:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1089,"nodeType":"ExpressionStatement","src":"5407:40:7"}]}}]},"documentation":{"id":1047,"nodeType":"StructuredDocumentation","src":"4513:566:7","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":1093,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"5093:12:7","nodeType":"FunctionDefinition","parameters":{"id":1055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"mutability":"mutable","name":"token","nameLocation":"5113:5:7","nodeType":"VariableDeclaration","scope":1093,"src":"5106:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"},"typeName":{"id":1049,"nodeType":"UserDefinedTypeName","pathNode":{"id":1048,"name":"IERC20","nameLocations":["5106:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"5106:6:7"},"referencedDeclaration":819,"src":"5106:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1052,"mutability":"mutable","name":"spender","nameLocation":"5128:7:7","nodeType":"VariableDeclaration","scope":1093,"src":"5120:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1054,"mutability":"mutable","name":"value","nameLocation":"5145:5:7","nodeType":"VariableDeclaration","scope":1093,"src":"5137:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1053,"name":"uint256","nodeType":"ElementaryTypeName","src":"5137:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:46:7"},"returnParameters":{"id":1056,"nodeType":"ParameterList","parameters":[],"src":"5161:0:7"},"scope":1309,"src":"5084:380:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1135,"nodeType":"Block","src":"5911:219:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1106,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"5925:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5928:4:7","memberName":"code","nodeType":"MemberAccess","src":"5925:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:6:7","memberName":"length","nodeType":"MemberAccess","src":"5925:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5943:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5925:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6011:39:7","subExpression":{"arguments":[{"id":1120,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"6034:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"6038:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1122,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"6045:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1118,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"6012:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6018:15:7","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":32,"src":"6012:21:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1133,"nodeType":"IfStatement","src":"6007:117:7","trueBody":{"id":1132,"nodeType":"Block","src":"6052:72:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1128,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"6106:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}],"id":1127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6098:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1126,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:7","typeDescriptions":{}}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6098:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1125,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"6073:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6073:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1131,"nodeType":"RevertStatement","src":"6066:47:7"}]}},"id":1134,"nodeType":"IfStatement","src":"5921:203:7","trueBody":{"id":1117,"nodeType":"Block","src":"5946:55:7","statements":[{"expression":{"arguments":[{"id":1112,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"5973:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},{"id":1113,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"5980:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"5984:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1111,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"5960:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1116,"nodeType":"ExpressionStatement","src":"5960:30:7"}]}}]},"documentation":{"id":1094,"nodeType":"StructuredDocumentation","src":"5470:333:7","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1136,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5817:22:7","nodeType":"FunctionDefinition","parameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1097,"mutability":"mutable","name":"token","nameLocation":"5849:5:7","nodeType":"VariableDeclaration","scope":1136,"src":"5840:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"},"typeName":{"id":1096,"nodeType":"UserDefinedTypeName","pathNode":{"id":1095,"name":"IERC1363","nameLocations":["5840:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":81,"src":"5840:8:7"},"referencedDeclaration":81,"src":"5840:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"to","nameLocation":"5864:2:7","nodeType":"VariableDeclaration","scope":1136,"src":"5856:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"value","nameLocation":"5876:5:7","nodeType":"VariableDeclaration","scope":1136,"src":"5868:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"data","nameLocation":"5896:4:7","nodeType":"VariableDeclaration","scope":1136,"src":"5883:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1102,"name":"bytes","nodeType":"ElementaryTypeName","src":"5883:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5839:62:7"},"returnParameters":{"id":1105,"nodeType":"ParameterList","parameters":[],"src":"5911:0:7"},"scope":1309,"src":"5808:322:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1182,"nodeType":"Block","src":"6649:239:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1151,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"6663:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6666:4:7","memberName":"code","nodeType":"MemberAccess","src":"6663:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:6:7","memberName":"length","nodeType":"MemberAccess","src":"6663:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6663:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6759:49:7","subExpression":{"arguments":[{"id":1166,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"6786:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1167,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"6792:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"6796:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1169,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"6803:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1164,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"6760:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:19:7","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":58,"src":"6760:25:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6760:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1180,"nodeType":"IfStatement","src":"6755:127:7","trueBody":{"id":1179,"nodeType":"Block","src":"6810:72:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1175,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"6864:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}],"id":1174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6856:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1173,"name":"address","nodeType":"ElementaryTypeName","src":"6856:7:7","typeDescriptions":{}}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6856:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1172,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"6831:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1178,"nodeType":"RevertStatement","src":"6824:47:7"}]}},"id":1181,"nodeType":"IfStatement","src":"6659:223:7","trueBody":{"id":1163,"nodeType":"Block","src":"6684:65:7","statements":[{"expression":{"arguments":[{"id":1157,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"6715:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},{"id":1158,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"6722:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1159,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"6728:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"6732:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1156,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"6698:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1162,"nodeType":"ExpressionStatement","src":"6698:40:7"}]}}]},"documentation":{"id":1137,"nodeType":"StructuredDocumentation","src":"6136:341:7","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1183,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"6491:26:7","nodeType":"FunctionDefinition","parameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"token","nameLocation":"6536:5:7","nodeType":"VariableDeclaration","scope":1183,"src":"6527:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"},"typeName":{"id":1139,"nodeType":"UserDefinedTypeName","pathNode":{"id":1138,"name":"IERC1363","nameLocations":["6527:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":81,"src":"6527:8:7"},"referencedDeclaration":81,"src":"6527:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"from","nameLocation":"6559:4:7","nodeType":"VariableDeclaration","scope":1183,"src":"6551:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1141,"name":"address","nodeType":"ElementaryTypeName","src":"6551:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"to","nameLocation":"6581:2:7","nodeType":"VariableDeclaration","scope":1183,"src":"6573:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1143,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1146,"mutability":"mutable","name":"value","nameLocation":"6601:5:7","nodeType":"VariableDeclaration","scope":1183,"src":"6593:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1148,"mutability":"mutable","name":"data","nameLocation":"6629:4:7","nodeType":"VariableDeclaration","scope":1183,"src":"6616:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1147,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6517:122:7"},"returnParameters":{"id":1150,"nodeType":"ParameterList","parameters":[],"src":"6649:0:7"},"scope":1309,"src":"6482:406:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1225,"nodeType":"Block","src":"7655:218:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1196,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"7669:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7672:4:7","memberName":"code","nodeType":"MemberAccess","src":"7669:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7677:6:7","memberName":"length","nodeType":"MemberAccess","src":"7669:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7687:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7669:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7755:38:7","subExpression":{"arguments":[{"id":1210,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"7777:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"7781:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1212,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"7788:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1208,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"7756:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7762:14:7","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":80,"src":"7756:20:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1223,"nodeType":"IfStatement","src":"7751:116:7","trueBody":{"id":1222,"nodeType":"Block","src":"7795:72:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1218,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"7849:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}],"id":1217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7841:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:7","typeDescriptions":{}}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1215,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"7816:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7816:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1221,"nodeType":"RevertStatement","src":"7809:47:7"}]}},"id":1224,"nodeType":"IfStatement","src":"7665:202:7","trueBody":{"id":1207,"nodeType":"Block","src":"7690:55:7","statements":[{"expression":{"arguments":[{"id":1202,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"7717:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},{"id":1203,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"7724:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"7728:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1201,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"7704:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7704:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1206,"nodeType":"ExpressionStatement","src":"7704:30:7"}]}}]},"documentation":{"id":1184,"nodeType":"StructuredDocumentation","src":"6894:654:7","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":1226,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"7562:21:7","nodeType":"FunctionDefinition","parameters":{"id":1194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"token","nameLocation":"7593:5:7","nodeType":"VariableDeclaration","scope":1226,"src":"7584:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"},"typeName":{"id":1186,"nodeType":"UserDefinedTypeName","pathNode":{"id":1185,"name":"IERC1363","nameLocations":["7584:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":81,"src":"7584:8:7"},"referencedDeclaration":81,"src":"7584:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"to","nameLocation":"7608:2:7","nodeType":"VariableDeclaration","scope":1226,"src":"7600:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1188,"name":"address","nodeType":"ElementaryTypeName","src":"7600:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"value","nameLocation":"7620:5:7","nodeType":"VariableDeclaration","scope":1226,"src":"7612:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1190,"name":"uint256","nodeType":"ElementaryTypeName","src":"7612:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"data","nameLocation":"7640:4:7","nodeType":"VariableDeclaration","scope":1226,"src":"7627:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1192,"name":"bytes","nodeType":"ElementaryTypeName","src":"7627:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:62:7"},"returnParameters":{"id":1195,"nodeType":"ParameterList","parameters":[],"src":"7655:0:7"},"scope":1309,"src":"7553:320:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1266,"nodeType":"Block","src":"8440:650:7","statements":[{"assignments":[1236],"declarations":[{"constant":false,"id":1236,"mutability":"mutable","name":"returnSize","nameLocation":"8458:10:7","nodeType":"VariableDeclaration","scope":1266,"src":"8450:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1235,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1237,"nodeType":"VariableDeclarationStatement","src":"8450:18:7"},{"assignments":[1239],"declarations":[{"constant":false,"id":1239,"mutability":"mutable","name":"returnValue","nameLocation":"8486:11:7","nodeType":"VariableDeclaration","scope":1266,"src":"8478:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"8478:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1240,"nodeType":"VariableDeclarationStatement","src":"8478:19:7"},{"AST":{"nativeSrc":"8532:396:7","nodeType":"YulBlock","src":"8532:396:7","statements":[{"nativeSrc":"8546:75:7","nodeType":"YulVariableDeclaration","src":"8546:75:7","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"8566:3:7","nodeType":"YulIdentifier","src":"8566:3:7"},"nativeSrc":"8566:5:7","nodeType":"YulFunctionCall","src":"8566:5:7"},{"name":"token","nativeSrc":"8573:5:7","nodeType":"YulIdentifier","src":"8573:5:7"},{"kind":"number","nativeSrc":"8580:1:7","nodeType":"YulLiteral","src":"8580:1:7","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"8587:4:7","nodeType":"YulIdentifier","src":"8587:4:7"},{"kind":"number","nativeSrc":"8593:4:7","nodeType":"YulLiteral","src":"8593:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8583:3:7","nodeType":"YulIdentifier","src":"8583:3:7"},"nativeSrc":"8583:15:7","nodeType":"YulFunctionCall","src":"8583:15:7"},{"arguments":[{"name":"data","nativeSrc":"8606:4:7","nodeType":"YulIdentifier","src":"8606:4:7"}],"functionName":{"name":"mload","nativeSrc":"8600:5:7","nodeType":"YulIdentifier","src":"8600:5:7"},"nativeSrc":"8600:11:7","nodeType":"YulFunctionCall","src":"8600:11:7"},{"kind":"number","nativeSrc":"8613:1:7","nodeType":"YulLiteral","src":"8613:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"8616:4:7","nodeType":"YulLiteral","src":"8616:4:7","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"8561:4:7","nodeType":"YulIdentifier","src":"8561:4:7"},"nativeSrc":"8561:60:7","nodeType":"YulFunctionCall","src":"8561:60:7"},"variables":[{"name":"success","nativeSrc":"8550:7:7","nodeType":"YulTypedName","src":"8550:7:7","type":""}]},{"body":{"nativeSrc":"8682:157:7","nodeType":"YulBlock","src":"8682:157:7","statements":[{"nativeSrc":"8700:22:7","nodeType":"YulVariableDeclaration","src":"8700:22:7","value":{"arguments":[{"kind":"number","nativeSrc":"8717:4:7","nodeType":"YulLiteral","src":"8717:4:7","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8711:5:7","nodeType":"YulIdentifier","src":"8711:5:7"},"nativeSrc":"8711:11:7","nodeType":"YulFunctionCall","src":"8711:11:7"},"variables":[{"name":"ptr","nativeSrc":"8704:3:7","nodeType":"YulTypedName","src":"8704:3:7","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8754:3:7","nodeType":"YulIdentifier","src":"8754:3:7"},{"kind":"number","nativeSrc":"8759:1:7","nodeType":"YulLiteral","src":"8759:1:7","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8762:14:7","nodeType":"YulIdentifier","src":"8762:14:7"},"nativeSrc":"8762:16:7","nodeType":"YulFunctionCall","src":"8762:16:7"}],"functionName":{"name":"returndatacopy","nativeSrc":"8739:14:7","nodeType":"YulIdentifier","src":"8739:14:7"},"nativeSrc":"8739:40:7","nodeType":"YulFunctionCall","src":"8739:40:7"},"nativeSrc":"8739:40:7","nodeType":"YulExpressionStatement","src":"8739:40:7"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8803:3:7","nodeType":"YulIdentifier","src":"8803:3:7"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8808:14:7","nodeType":"YulIdentifier","src":"8808:14:7"},"nativeSrc":"8808:16:7","nodeType":"YulFunctionCall","src":"8808:16:7"}],"functionName":{"name":"revert","nativeSrc":"8796:6:7","nodeType":"YulIdentifier","src":"8796:6:7"},"nativeSrc":"8796:29:7","nodeType":"YulFunctionCall","src":"8796:29:7"},"nativeSrc":"8796:29:7","nodeType":"YulExpressionStatement","src":"8796:29:7"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"8673:7:7","nodeType":"YulIdentifier","src":"8673:7:7"}],"functionName":{"name":"iszero","nativeSrc":"8666:6:7","nodeType":"YulIdentifier","src":"8666:6:7"},"nativeSrc":"8666:15:7","nodeType":"YulFunctionCall","src":"8666:15:7"},"nativeSrc":"8663:176:7","nodeType":"YulIf","src":"8663:176:7"},{"nativeSrc":"8852:30:7","nodeType":"YulAssignment","src":"8852:30:7","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8866:14:7","nodeType":"YulIdentifier","src":"8866:14:7"},"nativeSrc":"8866:16:7","nodeType":"YulFunctionCall","src":"8866:16:7"},"variableNames":[{"name":"returnSize","nativeSrc":"8852:10:7","nodeType":"YulIdentifier","src":"8852:10:7"}]},{"nativeSrc":"8895:23:7","nodeType":"YulAssignment","src":"8895:23:7","value":{"arguments":[{"kind":"number","nativeSrc":"8916:1:7","nodeType":"YulLiteral","src":"8916:1:7","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8910:5:7","nodeType":"YulIdentifier","src":"8910:5:7"},"nativeSrc":"8910:8:7","nodeType":"YulFunctionCall","src":"8910:8:7"},"variableNames":[{"name":"returnValue","nativeSrc":"8895:11:7","nodeType":"YulIdentifier","src":"8895:11:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1232,"isOffset":false,"isSlot":false,"src":"8587:4:7","valueSize":1},{"declaration":1232,"isOffset":false,"isSlot":false,"src":"8606:4:7","valueSize":1},{"declaration":1236,"isOffset":false,"isSlot":false,"src":"8852:10:7","valueSize":1},{"declaration":1239,"isOffset":false,"isSlot":false,"src":"8895:11:7","valueSize":1},{"declaration":1230,"isOffset":false,"isSlot":false,"src":"8573:5:7","valueSize":1}],"flags":["memory-safe"],"id":1241,"nodeType":"InlineAssembly","src":"8507:421:7"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1242,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"8942:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8942:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1253,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"8994:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8994:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8942:68:7","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1247,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"8968:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}],"id":1246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8960:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"8960:7:7","typeDescriptions":{}}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8975:4:7","memberName":"code","nodeType":"MemberAccess","src":"8960:19:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8980:6:7","memberName":"length","nodeType":"MemberAccess","src":"8960:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1265,"nodeType":"IfStatement","src":"8938:146:7","trueBody":{"id":1264,"nodeType":"Block","src":"9012:72:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1260,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"9066:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}],"id":1259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9058:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"9058:7:7","typeDescriptions":{}}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9058:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1257,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"9033:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9033:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1263,"nodeType":"RevertStatement","src":"9026:47:7"}]}}]},"documentation":{"id":1227,"nodeType":"StructuredDocumentation","src":"7879:486:7","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":1267,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"8379:19:7","nodeType":"FunctionDefinition","parameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"token","nameLocation":"8406:5:7","nodeType":"VariableDeclaration","scope":1267,"src":"8399:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"},"typeName":{"id":1229,"nodeType":"UserDefinedTypeName","pathNode":{"id":1228,"name":"IERC20","nameLocations":["8399:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"8399:6:7"},"referencedDeclaration":819,"src":"8399:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1232,"mutability":"mutable","name":"data","nameLocation":"8426:4:7","nodeType":"VariableDeclaration","scope":1267,"src":"8413:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1231,"name":"bytes","nodeType":"ElementaryTypeName","src":"8413:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8398:33:7"},"returnParameters":{"id":1234,"nodeType":"ParameterList","parameters":[],"src":"8440:0:7"},"scope":1309,"src":"8370:720:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1307,"nodeType":"Block","src":"9681:391:7","statements":[{"assignments":[1279],"declarations":[{"constant":false,"id":1279,"mutability":"mutable","name":"success","nameLocation":"9696:7:7","nodeType":"VariableDeclaration","scope":1307,"src":"9691:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1278,"name":"bool","nodeType":"ElementaryTypeName","src":"9691:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1280,"nodeType":"VariableDeclarationStatement","src":"9691:12:7"},{"assignments":[1282],"declarations":[{"constant":false,"id":1282,"mutability":"mutable","name":"returnSize","nameLocation":"9721:10:7","nodeType":"VariableDeclaration","scope":1307,"src":"9713:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"9713:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1283,"nodeType":"VariableDeclarationStatement","src":"9713:18:7"},{"assignments":[1285],"declarations":[{"constant":false,"id":1285,"mutability":"mutable","name":"returnValue","nameLocation":"9749:11:7","nodeType":"VariableDeclaration","scope":1307,"src":"9741:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1284,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1286,"nodeType":"VariableDeclarationStatement","src":"9741:19:7"},{"AST":{"nativeSrc":"9795:174:7","nodeType":"YulBlock","src":"9795:174:7","statements":[{"nativeSrc":"9809:71:7","nodeType":"YulAssignment","src":"9809:71:7","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9825:3:7","nodeType":"YulIdentifier","src":"9825:3:7"},"nativeSrc":"9825:5:7","nodeType":"YulFunctionCall","src":"9825:5:7"},{"name":"token","nativeSrc":"9832:5:7","nodeType":"YulIdentifier","src":"9832:5:7"},{"kind":"number","nativeSrc":"9839:1:7","nodeType":"YulLiteral","src":"9839:1:7","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9846:4:7","nodeType":"YulIdentifier","src":"9846:4:7"},{"kind":"number","nativeSrc":"9852:4:7","nodeType":"YulLiteral","src":"9852:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9842:3:7","nodeType":"YulIdentifier","src":"9842:3:7"},"nativeSrc":"9842:15:7","nodeType":"YulFunctionCall","src":"9842:15:7"},{"arguments":[{"name":"data","nativeSrc":"9865:4:7","nodeType":"YulIdentifier","src":"9865:4:7"}],"functionName":{"name":"mload","nativeSrc":"9859:5:7","nodeType":"YulIdentifier","src":"9859:5:7"},"nativeSrc":"9859:11:7","nodeType":"YulFunctionCall","src":"9859:11:7"},{"kind":"number","nativeSrc":"9872:1:7","nodeType":"YulLiteral","src":"9872:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"9875:4:7","nodeType":"YulLiteral","src":"9875:4:7","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9820:4:7","nodeType":"YulIdentifier","src":"9820:4:7"},"nativeSrc":"9820:60:7","nodeType":"YulFunctionCall","src":"9820:60:7"},"variableNames":[{"name":"success","nativeSrc":"9809:7:7","nodeType":"YulIdentifier","src":"9809:7:7"}]},{"nativeSrc":"9893:30:7","nodeType":"YulAssignment","src":"9893:30:7","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9907:14:7","nodeType":"YulIdentifier","src":"9907:14:7"},"nativeSrc":"9907:16:7","nodeType":"YulFunctionCall","src":"9907:16:7"},"variableNames":[{"name":"returnSize","nativeSrc":"9893:10:7","nodeType":"YulIdentifier","src":"9893:10:7"}]},{"nativeSrc":"9936:23:7","nodeType":"YulAssignment","src":"9936:23:7","value":{"arguments":[{"kind":"number","nativeSrc":"9957:1:7","nodeType":"YulLiteral","src":"9957:1:7","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9951:5:7","nodeType":"YulIdentifier","src":"9951:5:7"},"nativeSrc":"9951:8:7","nodeType":"YulFunctionCall","src":"9951:8:7"},"variableNames":[{"name":"returnValue","nativeSrc":"9936:11:7","nodeType":"YulIdentifier","src":"9936:11:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1273,"isOffset":false,"isSlot":false,"src":"9846:4:7","valueSize":1},{"declaration":1273,"isOffset":false,"isSlot":false,"src":"9865:4:7","valueSize":1},{"declaration":1282,"isOffset":false,"isSlot":false,"src":"9893:10:7","valueSize":1},{"declaration":1285,"isOffset":false,"isSlot":false,"src":"9936:11:7","valueSize":1},{"declaration":1279,"isOffset":false,"isSlot":false,"src":"9809:7:7","valueSize":1},{"declaration":1271,"isOffset":false,"isSlot":false,"src":"9832:5:7","valueSize":1}],"flags":["memory-safe"],"id":1287,"nodeType":"InlineAssembly","src":"9770:199:7"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1288,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"9985:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1289,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"9997:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10011:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9997:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1300,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"10048:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10048:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9997:67:7","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1294,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"10023:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}],"id":1293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10015:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:7","typeDescriptions":{}}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10015:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10030:4:7","memberName":"code","nodeType":"MemberAccess","src":"10015:19:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10035:6:7","memberName":"length","nodeType":"MemberAccess","src":"10015:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10044:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10015:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9996:69:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9985:80:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1277,"id":1306,"nodeType":"Return","src":"9978:87:7"}]},"documentation":{"id":1268,"nodeType":"StructuredDocumentation","src":"9096:491:7","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":1308,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"9601:23:7","nodeType":"FunctionDefinition","parameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"mutability":"mutable","name":"token","nameLocation":"9632:5:7","nodeType":"VariableDeclaration","scope":1308,"src":"9625:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"},"typeName":{"id":1270,"nodeType":"UserDefinedTypeName","pathNode":{"id":1269,"name":"IERC20","nameLocations":["9625:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"9625:6:7"},"referencedDeclaration":819,"src":"9625:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1273,"mutability":"mutable","name":"data","nameLocation":"9652:4:7","nodeType":"VariableDeclaration","scope":1308,"src":"9639:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1272,"name":"bytes","nodeType":"ElementaryTypeName","src":"9639:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9624:33:7"},"returnParameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1308,"src":"9675:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1275,"name":"bool","nodeType":"ElementaryTypeName","src":"9675:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9674:6:7"},"scope":1309,"src":"9592:480:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1310,"src":"698:9376:7","usedErrors":[857,866],"usedEvents":[]}],"src":"115:9960:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1339]},"id":1340,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1311,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1312,"nodeType":"StructuredDocumentation","src":"127:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1339,"linearizedBaseContracts":[1339],"name":"Context","nameLocation":"642:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1320,"nodeType":"Block","src":"718:34:8","statements":[{"expression":{"expression":{"id":1317,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:8","memberName":"sender","nodeType":"MemberAccess","src":"735:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1316,"id":1319,"nodeType":"Return","src":"728:17:8"}]},"id":1321,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:8","nodeType":"FunctionDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[],"src":"675:2:8"},"returnParameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1321,"src":"709:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:8"},"scope":1339,"src":"656:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1329,"nodeType":"Block","src":"825:32:8","statements":[{"expression":{"expression":{"id":1326,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:8","memberName":"data","nodeType":"MemberAccess","src":"842:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1325,"id":1328,"nodeType":"Return","src":"835:15:8"}]},"id":1330,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:8","nodeType":"FunctionDefinition","parameters":{"id":1322,"nodeType":"ParameterList","parameters":[],"src":"775:2:8"},"returnParameters":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1330,"src":"809:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1323,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:8"},"scope":1339,"src":"758:99:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1337,"nodeType":"Block","src":"935:25:8","statements":[{"expression":{"hexValue":"30","id":1335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1334,"id":1336,"nodeType":"Return","src":"945:8:8"}]},"id":1338,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:8","nodeType":"FunctionDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[],"src":"892:2:8"},"returnParameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1338,"src":"926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1332,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:8"},"scope":1339,"src":"863:97:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1340,"src":"624:338:8","usedErrors":[],"usedEvents":[]}],"src":"101:862:8"},"id":8},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1391]},"id":1392,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1341,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1342,"nodeType":"StructuredDocumentation","src":"125:489:9","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1391,"linearizedBaseContracts":[1391],"name":"Panic","nameLocation":"665:5:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"677:36:9","text":"@dev generic / unspecified error"},"id":1346,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:9","nodeType":"VariableDeclaration","scope":1391,"src":"718:40:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1344,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1347,"nodeType":"StructuredDocumentation","src":"764:37:9","text":"@dev used by the assert() builtin"},"id":1350,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:9","nodeType":"VariableDeclaration","scope":1391,"src":"806:39:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1351,"nodeType":"StructuredDocumentation","src":"851:41:9","text":"@dev arithmetic underflow or overflow"},"id":1354,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:9","nodeType":"VariableDeclaration","scope":1391,"src":"897:47:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1352,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:9","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"950:35:9","text":"@dev division or modulo by zero"},"id":1358,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:9","nodeType":"VariableDeclaration","scope":1391,"src":"990:49:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:9","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1359,"nodeType":"StructuredDocumentation","src":"1045:30:9","text":"@dev enum conversion error"},"id":1362,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:9","nodeType":"VariableDeclaration","scope":1391,"src":"1080:54:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1360,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:9","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1363,"nodeType":"StructuredDocumentation","src":"1140:36:9","text":"@dev invalid encoding in storage"},"id":1366,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:9","nodeType":"VariableDeclaration","scope":1391,"src":"1181:55:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1364,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:9","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1367,"nodeType":"StructuredDocumentation","src":"1242:24:9","text":"@dev empty array pop"},"id":1370,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:9","nodeType":"VariableDeclaration","scope":1391,"src":"1271:48:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:9","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"1325:35:9","text":"@dev array out of bounds access"},"id":1374,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:9","nodeType":"VariableDeclaration","scope":1391,"src":"1365:52:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:9","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1375,"nodeType":"StructuredDocumentation","src":"1423:65:9","text":"@dev resource error (too large allocation or too large array)"},"id":1378,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:9","nodeType":"VariableDeclaration","scope":1391,"src":"1493:47:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:9","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1379,"nodeType":"StructuredDocumentation","src":"1546:42:9","text":"@dev calling invalid internal function"},"id":1382,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:9","nodeType":"VariableDeclaration","scope":1391,"src":"1593:58:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1380,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:9","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1389,"nodeType":"Block","src":"1819:151:9","statements":[{"AST":{"nativeSrc":"1854:110:9","nodeType":"YulBlock","src":"1854:110:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:9","nodeType":"YulLiteral","src":"1875:4:9","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:9","nodeType":"YulLiteral","src":"1881:10:9","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:9","nodeType":"YulIdentifier","src":"1868:6:9"},"nativeSrc":"1868:24:9","nodeType":"YulFunctionCall","src":"1868:24:9"},"nativeSrc":"1868:24:9","nodeType":"YulExpressionStatement","src":"1868:24:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:9","nodeType":"YulLiteral","src":"1912:4:9","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:9","nodeType":"YulIdentifier","src":"1918:4:9"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:9","nodeType":"YulIdentifier","src":"1905:6:9"},"nativeSrc":"1905:18:9","nodeType":"YulFunctionCall","src":"1905:18:9"},"nativeSrc":"1905:18:9","nodeType":"YulExpressionStatement","src":"1905:18:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:9","nodeType":"YulLiteral","src":"1943:4:9","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:9","nodeType":"YulLiteral","src":"1949:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:9","nodeType":"YulIdentifier","src":"1936:6:9"},"nativeSrc":"1936:18:9","nodeType":"YulFunctionCall","src":"1936:18:9"},"nativeSrc":"1936:18:9","nodeType":"YulExpressionStatement","src":"1936:18:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1385,"isOffset":false,"isSlot":false,"src":"1918:4:9","valueSize":1}],"flags":["memory-safe"],"id":1388,"nodeType":"InlineAssembly","src":"1829:135:9"}]},"documentation":{"id":1383,"nodeType":"StructuredDocumentation","src":"1658:113:9","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1390,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:9","nodeType":"FunctionDefinition","parameters":{"id":1386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"code","nameLocation":"1799:4:9","nodeType":"VariableDeclaration","scope":1390,"src":"1791:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:9"},"returnParameters":{"id":1387,"nodeType":"ParameterList","parameters":[],"src":"1819:0:9"},"scope":1391,"src":"1776:194:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1392,"src":"657:1315:9","usedErrors":[],"usedEvents":[]}],"src":"99:1874:9"},"id":9},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1403]},"id":1404,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1393,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1394,"nodeType":"StructuredDocumentation","src":"141:280:10","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1403,"linearizedBaseContracts":[1403],"name":"IERC165","nameLocation":"432:7:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"446:340:10","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1402,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:10","nodeType":"FunctionDefinition","parameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:10","nodeType":"VariableDeclaration","scope":1402,"src":"818:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1396,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:10"},"returnParameters":{"id":1401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1402,"src":"861:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1399,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:10"},"scope":1403,"src":"791:76:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1404,"src":"422:447:10","usedErrors":[],"usedEvents":[]}],"src":"115:755:10"},"id":10},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3024],"Panic":[1391],"SafeCast":[4789]},"id":3025,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1405,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":1407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3025,"sourceUnit":1392,"src":"129:35:11","symbolAliases":[{"foreign":{"id":1406,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"137:5:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":1409,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3025,"sourceUnit":4790,"src":"165:40:11","symbolAliases":[{"foreign":{"id":1408,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"173:8:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1410,"nodeType":"StructuredDocumentation","src":"207:73:11","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3024,"linearizedBaseContracts":[3024],"name":"Math","nameLocation":"289:4:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1415,"members":[{"id":1411,"name":"Floor","nameLocation":"324:5:11","nodeType":"EnumValue","src":"324:5:11"},{"id":1412,"name":"Ceil","nameLocation":"367:4:11","nodeType":"EnumValue","src":"367:4:11"},{"id":1413,"name":"Trunc","nameLocation":"409:5:11","nodeType":"EnumValue","src":"409:5:11"},{"id":1414,"name":"Expand","nameLocation":"439:6:11","nodeType":"EnumValue","src":"439:6:11"}],"name":"Rounding","nameLocation":"305:8:11","nodeType":"EnumDefinition","src":"300:169:11"},{"body":{"id":1428,"nodeType":"Block","src":"731:112:11","statements":[{"AST":{"nativeSrc":"766:71:11","nodeType":"YulBlock","src":"766:71:11","statements":[{"nativeSrc":"780:16:11","nodeType":"YulAssignment","src":"780:16:11","value":{"arguments":[{"name":"a","nativeSrc":"791:1:11","nodeType":"YulIdentifier","src":"791:1:11"},{"name":"b","nativeSrc":"794:1:11","nodeType":"YulIdentifier","src":"794:1:11"}],"functionName":{"name":"add","nativeSrc":"787:3:11","nodeType":"YulIdentifier","src":"787:3:11"},"nativeSrc":"787:9:11","nodeType":"YulFunctionCall","src":"787:9:11"},"variableNames":[{"name":"low","nativeSrc":"780:3:11","nodeType":"YulIdentifier","src":"780:3:11"}]},{"nativeSrc":"809:18:11","nodeType":"YulAssignment","src":"809:18:11","value":{"arguments":[{"name":"low","nativeSrc":"820:3:11","nodeType":"YulIdentifier","src":"820:3:11"},{"name":"a","nativeSrc":"825:1:11","nodeType":"YulIdentifier","src":"825:1:11"}],"functionName":{"name":"lt","nativeSrc":"817:2:11","nodeType":"YulIdentifier","src":"817:2:11"},"nativeSrc":"817:10:11","nodeType":"YulFunctionCall","src":"817:10:11"},"variableNames":[{"name":"high","nativeSrc":"809:4:11","nodeType":"YulIdentifier","src":"809:4:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1418,"isOffset":false,"isSlot":false,"src":"791:1:11","valueSize":1},{"declaration":1418,"isOffset":false,"isSlot":false,"src":"825:1:11","valueSize":1},{"declaration":1420,"isOffset":false,"isSlot":false,"src":"794:1:11","valueSize":1},{"declaration":1423,"isOffset":false,"isSlot":false,"src":"809:4:11","valueSize":1},{"declaration":1425,"isOffset":false,"isSlot":false,"src":"780:3:11","valueSize":1},{"declaration":1425,"isOffset":false,"isSlot":false,"src":"820:3:11","valueSize":1}],"flags":["memory-safe"],"id":1427,"nodeType":"InlineAssembly","src":"741:96:11"}]},"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"475:163:11","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":1429,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:11","nodeType":"FunctionDefinition","parameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"a","nameLocation":"667:1:11","nodeType":"VariableDeclaration","scope":1429,"src":"659:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1417,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"b","nameLocation":"678:1:11","nodeType":"VariableDeclaration","scope":1429,"src":"670:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:11"},"returnParameters":{"id":1426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1423,"mutability":"mutable","name":"high","nameLocation":"712:4:11","nodeType":"VariableDeclaration","scope":1429,"src":"704:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1422,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1425,"mutability":"mutable","name":"low","nameLocation":"726:3:11","nodeType":"VariableDeclaration","scope":1429,"src":"718:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1424,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:11"},"scope":3024,"src":"643:200:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1442,"nodeType":"Block","src":"1115:462:11","statements":[{"AST":{"nativeSrc":"1437:134:11","nodeType":"YulBlock","src":"1437:134:11","statements":[{"nativeSrc":"1451:30:11","nodeType":"YulVariableDeclaration","src":"1451:30:11","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:11","nodeType":"YulIdentifier","src":"1468:1:11"},{"name":"b","nativeSrc":"1471:1:11","nodeType":"YulIdentifier","src":"1471:1:11"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:11","nodeType":"YulLiteral","src":"1478:1:11","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:11","nodeType":"YulIdentifier","src":"1474:3:11"},"nativeSrc":"1474:6:11","nodeType":"YulFunctionCall","src":"1474:6:11"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:11","nodeType":"YulIdentifier","src":"1461:6:11"},"nativeSrc":"1461:20:11","nodeType":"YulFunctionCall","src":"1461:20:11"},"variables":[{"name":"mm","nativeSrc":"1455:2:11","nodeType":"YulTypedName","src":"1455:2:11","type":""}]},{"nativeSrc":"1494:16:11","nodeType":"YulAssignment","src":"1494:16:11","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:11","nodeType":"YulIdentifier","src":"1505:1:11"},{"name":"b","nativeSrc":"1508:1:11","nodeType":"YulIdentifier","src":"1508:1:11"}],"functionName":{"name":"mul","nativeSrc":"1501:3:11","nodeType":"YulIdentifier","src":"1501:3:11"},"nativeSrc":"1501:9:11","nodeType":"YulFunctionCall","src":"1501:9:11"},"variableNames":[{"name":"low","nativeSrc":"1494:3:11","nodeType":"YulIdentifier","src":"1494:3:11"}]},{"nativeSrc":"1523:38:11","nodeType":"YulAssignment","src":"1523:38:11","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:11","nodeType":"YulIdentifier","src":"1539:2:11"},{"name":"low","nativeSrc":"1543:3:11","nodeType":"YulIdentifier","src":"1543:3:11"}],"functionName":{"name":"sub","nativeSrc":"1535:3:11","nodeType":"YulIdentifier","src":"1535:3:11"},"nativeSrc":"1535:12:11","nodeType":"YulFunctionCall","src":"1535:12:11"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:11","nodeType":"YulIdentifier","src":"1552:2:11"},{"name":"low","nativeSrc":"1556:3:11","nodeType":"YulIdentifier","src":"1556:3:11"}],"functionName":{"name":"lt","nativeSrc":"1549:2:11","nodeType":"YulIdentifier","src":"1549:2:11"},"nativeSrc":"1549:11:11","nodeType":"YulFunctionCall","src":"1549:11:11"}],"functionName":{"name":"sub","nativeSrc":"1531:3:11","nodeType":"YulIdentifier","src":"1531:3:11"},"nativeSrc":"1531:30:11","nodeType":"YulFunctionCall","src":"1531:30:11"},"variableNames":[{"name":"high","nativeSrc":"1523:4:11","nodeType":"YulIdentifier","src":"1523:4:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1432,"isOffset":false,"isSlot":false,"src":"1468:1:11","valueSize":1},{"declaration":1432,"isOffset":false,"isSlot":false,"src":"1505:1:11","valueSize":1},{"declaration":1434,"isOffset":false,"isSlot":false,"src":"1471:1:11","valueSize":1},{"declaration":1434,"isOffset":false,"isSlot":false,"src":"1508:1:11","valueSize":1},{"declaration":1437,"isOffset":false,"isSlot":false,"src":"1523:4:11","valueSize":1},{"declaration":1439,"isOffset":false,"isSlot":false,"src":"1494:3:11","valueSize":1},{"declaration":1439,"isOffset":false,"isSlot":false,"src":"1543:3:11","valueSize":1},{"declaration":1439,"isOffset":false,"isSlot":false,"src":"1556:3:11","valueSize":1}],"flags":["memory-safe"],"id":1441,"nodeType":"InlineAssembly","src":"1412:159:11"}]},"documentation":{"id":1430,"nodeType":"StructuredDocumentation","src":"849:173:11","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":1443,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:11","nodeType":"FunctionDefinition","parameters":{"id":1435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1432,"mutability":"mutable","name":"a","nameLocation":"1051:1:11","nodeType":"VariableDeclaration","scope":1443,"src":"1043:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1434,"mutability":"mutable","name":"b","nameLocation":"1062:1:11","nodeType":"VariableDeclaration","scope":1443,"src":"1054:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:11"},"returnParameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1437,"mutability":"mutable","name":"high","nameLocation":"1096:4:11","nodeType":"VariableDeclaration","scope":1443,"src":"1088:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1436,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1439,"mutability":"mutable","name":"low","nameLocation":"1110:3:11","nodeType":"VariableDeclaration","scope":1443,"src":"1102:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1438,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:11"},"scope":3024,"src":"1027:550:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1477,"nodeType":"Block","src":"1784:149:11","statements":[{"id":1476,"nodeType":"UncheckedBlock","src":"1794:133:11","statements":[{"assignments":[1456],"declarations":[{"constant":false,"id":1456,"mutability":"mutable","name":"c","nameLocation":"1826:1:11","nodeType":"VariableDeclaration","scope":1476,"src":"1818:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1455,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1460,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1457,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"1830:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1458,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"1834:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:11"},{"expression":{"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1461,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"1849:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1462,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"1859:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1463,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"1864:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1466,"nodeType":"ExpressionStatement","src":"1849:16:11"},{"expression":{"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1467,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"1879:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1468,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"1888:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1471,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"1908:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1469,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"1892:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"1892:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1475,"nodeType":"ExpressionStatement","src":"1879:37:11"}]}]},"documentation":{"id":1444,"nodeType":"StructuredDocumentation","src":"1583:105:11","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":1478,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:11","nodeType":"FunctionDefinition","parameters":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1446,"mutability":"mutable","name":"a","nameLocation":"1717:1:11","nodeType":"VariableDeclaration","scope":1478,"src":"1709:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1445,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1448,"mutability":"mutable","name":"b","nameLocation":"1728:1:11","nodeType":"VariableDeclaration","scope":1478,"src":"1720:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:11"},"returnParameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"success","nameLocation":"1759:7:11","nodeType":"VariableDeclaration","scope":1478,"src":"1754:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1450,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1453,"mutability":"mutable","name":"result","nameLocation":"1776:6:11","nodeType":"VariableDeclaration","scope":1478,"src":"1768:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1452,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:11"},"scope":3024,"src":"1693:240:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1512,"nodeType":"Block","src":"2143:149:11","statements":[{"id":1511,"nodeType":"UncheckedBlock","src":"2153:133:11","statements":[{"assignments":[1491],"declarations":[{"constant":false,"id":1491,"mutability":"mutable","name":"c","nameLocation":"2185:1:11","nodeType":"VariableDeclaration","scope":1511,"src":"2177:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1490,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1495,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1492,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"2189:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1493,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"2193:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:11"},{"expression":{"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1496,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"2208:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1497,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"2218:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1498,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"2223:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1501,"nodeType":"ExpressionStatement","src":"2208:16:11"},{"expression":{"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1502,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"2238:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1503,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"2247:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1506,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"2267:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1504,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"2251:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"2251:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1510,"nodeType":"ExpressionStatement","src":"2238:37:11"}]}]},"documentation":{"id":1479,"nodeType":"StructuredDocumentation","src":"1939:108:11","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":1513,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:11","nodeType":"FunctionDefinition","parameters":{"id":1484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"mutability":"mutable","name":"a","nameLocation":"2076:1:11","nodeType":"VariableDeclaration","scope":1513,"src":"2068:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1483,"mutability":"mutable","name":"b","nameLocation":"2087:1:11","nodeType":"VariableDeclaration","scope":1513,"src":"2079:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1482,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:11"},"returnParameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1486,"mutability":"mutable","name":"success","nameLocation":"2118:7:11","nodeType":"VariableDeclaration","scope":1513,"src":"2113:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1485,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1488,"mutability":"mutable","name":"result","nameLocation":"2135:6:11","nodeType":"VariableDeclaration","scope":1513,"src":"2127:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:11"},"scope":3024,"src":"2052:240:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1542,"nodeType":"Block","src":"2505:391:11","statements":[{"id":1541,"nodeType":"UncheckedBlock","src":"2515:375:11","statements":[{"assignments":[1526],"declarations":[{"constant":false,"id":1526,"mutability":"mutable","name":"c","nameLocation":"2547:1:11","nodeType":"VariableDeclaration","scope":1541,"src":"2539:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1525,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1530,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1527,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"2551:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1528,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"2555:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:11"},{"AST":{"nativeSrc":"2595:188:11","nodeType":"YulBlock","src":"2595:188:11","statements":[{"nativeSrc":"2727:42:11","nodeType":"YulAssignment","src":"2727:42:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:11","nodeType":"YulIdentifier","src":"2748:1:11"},{"name":"a","nativeSrc":"2751:1:11","nodeType":"YulIdentifier","src":"2751:1:11"}],"functionName":{"name":"div","nativeSrc":"2744:3:11","nodeType":"YulIdentifier","src":"2744:3:11"},"nativeSrc":"2744:9:11","nodeType":"YulFunctionCall","src":"2744:9:11"},{"name":"b","nativeSrc":"2755:1:11","nodeType":"YulIdentifier","src":"2755:1:11"}],"functionName":{"name":"eq","nativeSrc":"2741:2:11","nodeType":"YulIdentifier","src":"2741:2:11"},"nativeSrc":"2741:16:11","nodeType":"YulFunctionCall","src":"2741:16:11"},{"arguments":[{"name":"a","nativeSrc":"2766:1:11","nodeType":"YulIdentifier","src":"2766:1:11"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:11","nodeType":"YulIdentifier","src":"2759:6:11"},"nativeSrc":"2759:9:11","nodeType":"YulFunctionCall","src":"2759:9:11"}],"functionName":{"name":"or","nativeSrc":"2738:2:11","nodeType":"YulIdentifier","src":"2738:2:11"},"nativeSrc":"2738:31:11","nodeType":"YulFunctionCall","src":"2738:31:11"},"variableNames":[{"name":"success","nativeSrc":"2727:7:11","nodeType":"YulIdentifier","src":"2727:7:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1516,"isOffset":false,"isSlot":false,"src":"2751:1:11","valueSize":1},{"declaration":1516,"isOffset":false,"isSlot":false,"src":"2766:1:11","valueSize":1},{"declaration":1518,"isOffset":false,"isSlot":false,"src":"2755:1:11","valueSize":1},{"declaration":1526,"isOffset":false,"isSlot":false,"src":"2748:1:11","valueSize":1},{"declaration":1521,"isOffset":false,"isSlot":false,"src":"2727:7:11","valueSize":1}],"flags":["memory-safe"],"id":1531,"nodeType":"InlineAssembly","src":"2570:213:11"},{"expression":{"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1532,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"2842:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1533,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"2851:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1536,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"2871:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1534,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"2855:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"2855:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1540,"nodeType":"ExpressionStatement","src":"2842:37:11"}]}]},"documentation":{"id":1514,"nodeType":"StructuredDocumentation","src":"2298:111:11","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":1543,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:11","nodeType":"FunctionDefinition","parameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"mutability":"mutable","name":"a","nameLocation":"2438:1:11","nodeType":"VariableDeclaration","scope":1543,"src":"2430:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1515,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1518,"mutability":"mutable","name":"b","nameLocation":"2449:1:11","nodeType":"VariableDeclaration","scope":1543,"src":"2441:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:11"},"returnParameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1521,"mutability":"mutable","name":"success","nameLocation":"2480:7:11","nodeType":"VariableDeclaration","scope":1543,"src":"2475:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1520,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1523,"mutability":"mutable","name":"result","nameLocation":"2497:6:11","nodeType":"VariableDeclaration","scope":1543,"src":"2489:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:11"},"scope":3024,"src":"2414:482:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1563,"nodeType":"Block","src":"3111:231:11","statements":[{"id":1562,"nodeType":"UncheckedBlock","src":"3121:215:11","statements":[{"expression":{"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1555,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"3145:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1556,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"3155:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1560,"nodeType":"ExpressionStatement","src":"3145:15:11"},{"AST":{"nativeSrc":"3199:127:11","nodeType":"YulBlock","src":"3199:127:11","statements":[{"nativeSrc":"3293:19:11","nodeType":"YulAssignment","src":"3293:19:11","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:11","nodeType":"YulIdentifier","src":"3307:1:11"},{"name":"b","nativeSrc":"3310:1:11","nodeType":"YulIdentifier","src":"3310:1:11"}],"functionName":{"name":"div","nativeSrc":"3303:3:11","nodeType":"YulIdentifier","src":"3303:3:11"},"nativeSrc":"3303:9:11","nodeType":"YulFunctionCall","src":"3303:9:11"},"variableNames":[{"name":"result","nativeSrc":"3293:6:11","nodeType":"YulIdentifier","src":"3293:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1546,"isOffset":false,"isSlot":false,"src":"3307:1:11","valueSize":1},{"declaration":1548,"isOffset":false,"isSlot":false,"src":"3310:1:11","valueSize":1},{"declaration":1553,"isOffset":false,"isSlot":false,"src":"3293:6:11","valueSize":1}],"flags":["memory-safe"],"id":1561,"nodeType":"InlineAssembly","src":"3174:152:11"}]}]},"documentation":{"id":1544,"nodeType":"StructuredDocumentation","src":"2902:113:11","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":1564,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:11","nodeType":"FunctionDefinition","parameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1546,"mutability":"mutable","name":"a","nameLocation":"3044:1:11","nodeType":"VariableDeclaration","scope":1564,"src":"3036:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1545,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1548,"mutability":"mutable","name":"b","nameLocation":"3055:1:11","nodeType":"VariableDeclaration","scope":1564,"src":"3047:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1547,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:11"},"returnParameters":{"id":1554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1551,"mutability":"mutable","name":"success","nameLocation":"3086:7:11","nodeType":"VariableDeclaration","scope":1564,"src":"3081:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1550,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1553,"mutability":"mutable","name":"result","nameLocation":"3103:6:11","nodeType":"VariableDeclaration","scope":1564,"src":"3095:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1552,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:11"},"scope":3024,"src":"3020:322:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1584,"nodeType":"Block","src":"3567:231:11","statements":[{"id":1583,"nodeType":"UncheckedBlock","src":"3577:215:11","statements":[{"expression":{"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1576,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"3601:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1577,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"3611:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1581,"nodeType":"ExpressionStatement","src":"3601:15:11"},{"AST":{"nativeSrc":"3655:127:11","nodeType":"YulBlock","src":"3655:127:11","statements":[{"nativeSrc":"3749:19:11","nodeType":"YulAssignment","src":"3749:19:11","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:11","nodeType":"YulIdentifier","src":"3763:1:11"},{"name":"b","nativeSrc":"3766:1:11","nodeType":"YulIdentifier","src":"3766:1:11"}],"functionName":{"name":"mod","nativeSrc":"3759:3:11","nodeType":"YulIdentifier","src":"3759:3:11"},"nativeSrc":"3759:9:11","nodeType":"YulFunctionCall","src":"3759:9:11"},"variableNames":[{"name":"result","nativeSrc":"3749:6:11","nodeType":"YulIdentifier","src":"3749:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1567,"isOffset":false,"isSlot":false,"src":"3763:1:11","valueSize":1},{"declaration":1569,"isOffset":false,"isSlot":false,"src":"3766:1:11","valueSize":1},{"declaration":1574,"isOffset":false,"isSlot":false,"src":"3749:6:11","valueSize":1}],"flags":["memory-safe"],"id":1582,"nodeType":"InlineAssembly","src":"3630:152:11"}]}]},"documentation":{"id":1565,"nodeType":"StructuredDocumentation","src":"3348:123:11","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":1585,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:11","nodeType":"FunctionDefinition","parameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"a","nameLocation":"3500:1:11","nodeType":"VariableDeclaration","scope":1585,"src":"3492:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1566,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1569,"mutability":"mutable","name":"b","nameLocation":"3511:1:11","nodeType":"VariableDeclaration","scope":1585,"src":"3503:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1568,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:11"},"returnParameters":{"id":1575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"success","nameLocation":"3542:7:11","nodeType":"VariableDeclaration","scope":1585,"src":"3537:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1571,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1574,"mutability":"mutable","name":"result","nameLocation":"3559:6:11","nodeType":"VariableDeclaration","scope":1585,"src":"3551:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1573,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:11"},"scope":3024,"src":"3476:322:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1614,"nodeType":"Block","src":"3989:122:11","statements":[{"assignments":[1596,1598],"declarations":[{"constant":false,"id":1596,"mutability":"mutable","name":"success","nameLocation":"4005:7:11","nodeType":"VariableDeclaration","scope":1614,"src":"4000:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1595,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1598,"mutability":"mutable","name":"result","nameLocation":"4022:6:11","nodeType":"VariableDeclaration","scope":1614,"src":"4014:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1597,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1603,"initialValue":{"arguments":[{"id":1600,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"4039:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1601,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"4042:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1599,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"4032:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:11"},{"expression":{"arguments":[{"id":1605,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"4069:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1606,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"4078:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":1609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1607,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:11","memberName":"max","nodeType":"MemberAccess","src":"4086:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1604,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"4061:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1594,"id":1613,"nodeType":"Return","src":"4054:50:11"}]},"documentation":{"id":1586,"nodeType":"StructuredDocumentation","src":"3804:103:11","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":1615,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:11","nodeType":"FunctionDefinition","parameters":{"id":1591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1588,"mutability":"mutable","name":"a","nameLocation":"3943:1:11","nodeType":"VariableDeclaration","scope":1615,"src":"3935:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1590,"mutability":"mutable","name":"b","nameLocation":"3954:1:11","nodeType":"VariableDeclaration","scope":1615,"src":"3946:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1589,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:11"},"returnParameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1615,"src":"3980:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:11"},"scope":3024,"src":"3912:199:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1634,"nodeType":"Block","src":"4294:73:11","statements":[{"assignments":[null,1626],"declarations":[null,{"constant":false,"id":1626,"mutability":"mutable","name":"result","nameLocation":"4315:6:11","nodeType":"VariableDeclaration","scope":1634,"src":"4307:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1625,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1631,"initialValue":{"arguments":[{"id":1628,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"4332:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1629,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"4335:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1627,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"4325:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:11"},{"expression":{"id":1632,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"4354:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1624,"id":1633,"nodeType":"Return","src":"4347:13:11"}]},"documentation":{"id":1616,"nodeType":"StructuredDocumentation","src":"4117:95:11","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":1635,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:11","nodeType":"FunctionDefinition","parameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"mutability":"mutable","name":"a","nameLocation":"4248:1:11","nodeType":"VariableDeclaration","scope":1635,"src":"4240:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1617,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1620,"mutability":"mutable","name":"b","nameLocation":"4259:1:11","nodeType":"VariableDeclaration","scope":1635,"src":"4251:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1619,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:11"},"returnParameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1635,"src":"4285:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:11"},"scope":3024,"src":"4217:150:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1664,"nodeType":"Block","src":"4564:122:11","statements":[{"assignments":[1646,1648],"declarations":[{"constant":false,"id":1646,"mutability":"mutable","name":"success","nameLocation":"4580:7:11","nodeType":"VariableDeclaration","scope":1664,"src":"4575:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1645,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1648,"mutability":"mutable","name":"result","nameLocation":"4597:6:11","nodeType":"VariableDeclaration","scope":1664,"src":"4589:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1653,"initialValue":{"arguments":[{"id":1650,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"4614:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1651,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"4617:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1649,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"4607:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:11"},{"expression":{"arguments":[{"id":1655,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"4644:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1656,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"4653:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":1659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1658,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1657,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:11","memberName":"max","nodeType":"MemberAccess","src":"4661:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1654,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"4636:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1644,"id":1663,"nodeType":"Return","src":"4629:50:11"}]},"documentation":{"id":1636,"nodeType":"StructuredDocumentation","src":"4373:109:11","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":1665,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:11","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"mutability":"mutable","name":"a","nameLocation":"4518:1:11","nodeType":"VariableDeclaration","scope":1665,"src":"4510:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1637,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1640,"mutability":"mutable","name":"b","nameLocation":"4529:1:11","nodeType":"VariableDeclaration","scope":1665,"src":"4521:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:11"},"returnParameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1665,"src":"4555:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:11"},"scope":3024,"src":"4487:199:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1691,"nodeType":"Block","src":"5158:207:11","statements":[{"id":1690,"nodeType":"UncheckedBlock","src":"5168:191:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1677,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"5306:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1678,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"5312:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1679,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"5316:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1681,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1684,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"5337:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1682,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"5321:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"5321:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1687,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1676,"id":1689,"nodeType":"Return","src":"5299:49:11"}]}]},"documentation":{"id":1666,"nodeType":"StructuredDocumentation","src":"4692:374:11","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":1692,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:11","nodeType":"FunctionDefinition","parameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"condition","nameLocation":"5093:9:11","nodeType":"VariableDeclaration","scope":1692,"src":"5088:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1667,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1670,"mutability":"mutable","name":"a","nameLocation":"5112:1:11","nodeType":"VariableDeclaration","scope":1692,"src":"5104:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1672,"mutability":"mutable","name":"b","nameLocation":"5123:1:11","nodeType":"VariableDeclaration","scope":1692,"src":"5115:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1671,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:11"},"returnParameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1692,"src":"5149:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1674,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:11"},"scope":3024,"src":"5071:294:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1710,"nodeType":"Block","src":"5502:44:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1703,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"5527:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1704,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"5531:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1706,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"5534:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1707,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"5537:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1702,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"5519:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1701,"id":1709,"nodeType":"Return","src":"5512:27:11"}]},"documentation":{"id":1693,"nodeType":"StructuredDocumentation","src":"5371:59:11","text":" @dev Returns the largest of two numbers."},"id":1711,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:11","nodeType":"FunctionDefinition","parameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"mutability":"mutable","name":"a","nameLocation":"5456:1:11","nodeType":"VariableDeclaration","scope":1711,"src":"5448:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1694,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1697,"mutability":"mutable","name":"b","nameLocation":"5467:1:11","nodeType":"VariableDeclaration","scope":1711,"src":"5459:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1696,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:11"},"returnParameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1711,"src":"5493:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:11"},"scope":3024,"src":"5435:111:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1729,"nodeType":"Block","src":"5684:44:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1722,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"5709:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1723,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"5713:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1725,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"5716:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1726,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"5719:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1721,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"5701:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1720,"id":1728,"nodeType":"Return","src":"5694:27:11"}]},"documentation":{"id":1712,"nodeType":"StructuredDocumentation","src":"5552:60:11","text":" @dev Returns the smallest of two numbers."},"id":1730,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:11","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"a","nameLocation":"5638:1:11","nodeType":"VariableDeclaration","scope":1730,"src":"5630:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1713,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"b","nameLocation":"5649:1:11","nodeType":"VariableDeclaration","scope":1730,"src":"5641:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:11"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1730,"src":"5675:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1718,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:11"},"scope":3024,"src":"5617:111:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1752,"nodeType":"Block","src":"5912:82:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1740,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"5967:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1741,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"5971:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1743,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1744,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"5977:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1745,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"5981:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1747,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1739,"id":1751,"nodeType":"Return","src":"5959:28:11"}]},"documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"5734:102:11","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1753,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:11","nodeType":"FunctionDefinition","parameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"a","nameLocation":"5866:1:11","nodeType":"VariableDeclaration","scope":1753,"src":"5858:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1732,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1735,"mutability":"mutable","name":"b","nameLocation":"5877:1:11","nodeType":"VariableDeclaration","scope":1753,"src":"5869:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:11"},"returnParameters":{"id":1739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1753,"src":"5903:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1737,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:11"},"scope":3024,"src":"5841:153:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1793,"nodeType":"Block","src":"6286:633:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1763,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"6300:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1774,"nodeType":"IfStatement","src":"6296:150:11","trueBody":{"id":1773,"nodeType":"Block","src":"6308:138:11","statements":[{"expression":{"arguments":[{"expression":{"id":1769,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"6412:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1391_$","typeString":"type(library Panic)"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:11","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1358,"src":"6412:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1766,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"6400:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1391_$","typeString":"type(library Panic)"}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:11","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1390,"src":"6400:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1772,"nodeType":"ExpressionStatement","src":"6400:35:11"}]}},{"id":1792,"nodeType":"UncheckedBlock","src":"6829:84:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1777,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"6876:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1775,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"6860:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"6860:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1781,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"6887:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1785,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"6896:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1789,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1762,"id":1791,"nodeType":"Return","src":"6853:49:11"}]}]},"documentation":{"id":1754,"nodeType":"StructuredDocumentation","src":"6000:210:11","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":1794,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:11","nodeType":"FunctionDefinition","parameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1756,"mutability":"mutable","name":"a","nameLocation":"6240:1:11","nodeType":"VariableDeclaration","scope":1794,"src":"6232:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1755,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1758,"mutability":"mutable","name":"b","nameLocation":"6251:1:11","nodeType":"VariableDeclaration","scope":1794,"src":"6243:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1757,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:11"},"returnParameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1794,"src":"6277:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:11"},"scope":3024,"src":"6215:704:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1929,"nodeType":"Block","src":"7340:3585:11","statements":[{"id":1928,"nodeType":"UncheckedBlock","src":"7350:3569:11","statements":[{"assignments":[1807,1809],"declarations":[{"constant":false,"id":1807,"mutability":"mutable","name":"high","nameLocation":"7383:4:11","nodeType":"VariableDeclaration","scope":1928,"src":"7375:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1806,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1809,"mutability":"mutable","name":"low","nameLocation":"7397:3:11","nodeType":"VariableDeclaration","scope":1928,"src":"7389:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1808,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1814,"initialValue":{"arguments":[{"id":1811,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"7411:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1812,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"7414:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1810,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"7404:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1815,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"7498:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1823,"nodeType":"IfStatement","src":"7494:365:11","trueBody":{"id":1822,"nodeType":"Block","src":"7509:350:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1818,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"7827:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1819,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"7833:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1805,"id":1821,"nodeType":"Return","src":"7820:24:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1824,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"7969:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1825,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"7984:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1842,"nodeType":"IfStatement","src":"7965:142:11","trueBody":{"id":1841,"nodeType":"Block","src":"7990:117:11","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1831,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"8028:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1834,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"8046:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1391_$","typeString":"type(library Panic)"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:11","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1358,"src":"8046:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1836,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"8070:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1391_$","typeString":"type(library Panic)"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:11","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1354,"src":"8070:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1830,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"8020:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1827,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"8008:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1391_$","typeString":"type(library Panic)"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:11","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1390,"src":"8008:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1840,"nodeType":"ExpressionStatement","src":"8008:84:11"}]}},{"assignments":[1844],"declarations":[{"constant":false,"id":1844,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:11","nodeType":"VariableDeclaration","scope":1928,"src":"8359:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1843,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1845,"nodeType":"VariableDeclarationStatement","src":"8359:17:11"},{"AST":{"nativeSrc":"8415:283:11","nodeType":"YulBlock","src":"8415:283:11","statements":[{"nativeSrc":"8484:38:11","nodeType":"YulAssignment","src":"8484:38:11","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:11","nodeType":"YulIdentifier","src":"8504:1:11"},{"name":"y","nativeSrc":"8507:1:11","nodeType":"YulIdentifier","src":"8507:1:11"},{"name":"denominator","nativeSrc":"8510:11:11","nodeType":"YulIdentifier","src":"8510:11:11"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:11","nodeType":"YulIdentifier","src":"8497:6:11"},"nativeSrc":"8497:25:11","nodeType":"YulFunctionCall","src":"8497:25:11"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:11","nodeType":"YulIdentifier","src":"8484:9:11"}]},{"nativeSrc":"8604:37:11","nodeType":"YulAssignment","src":"8604:37:11","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:11","nodeType":"YulIdentifier","src":"8616:4:11"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:11","nodeType":"YulIdentifier","src":"8625:9:11"},{"name":"low","nativeSrc":"8636:3:11","nodeType":"YulIdentifier","src":"8636:3:11"}],"functionName":{"name":"gt","nativeSrc":"8622:2:11","nodeType":"YulIdentifier","src":"8622:2:11"},"nativeSrc":"8622:18:11","nodeType":"YulFunctionCall","src":"8622:18:11"}],"functionName":{"name":"sub","nativeSrc":"8612:3:11","nodeType":"YulIdentifier","src":"8612:3:11"},"nativeSrc":"8612:29:11","nodeType":"YulFunctionCall","src":"8612:29:11"},"variableNames":[{"name":"high","nativeSrc":"8604:4:11","nodeType":"YulIdentifier","src":"8604:4:11"}]},{"nativeSrc":"8658:26:11","nodeType":"YulAssignment","src":"8658:26:11","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:11","nodeType":"YulIdentifier","src":"8669:3:11"},{"name":"remainder","nativeSrc":"8674:9:11","nodeType":"YulIdentifier","src":"8674:9:11"}],"functionName":{"name":"sub","nativeSrc":"8665:3:11","nodeType":"YulIdentifier","src":"8665:3:11"},"nativeSrc":"8665:19:11","nodeType":"YulFunctionCall","src":"8665:19:11"},"variableNames":[{"name":"low","nativeSrc":"8658:3:11","nodeType":"YulIdentifier","src":"8658:3:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1801,"isOffset":false,"isSlot":false,"src":"8510:11:11","valueSize":1},{"declaration":1807,"isOffset":false,"isSlot":false,"src":"8604:4:11","valueSize":1},{"declaration":1807,"isOffset":false,"isSlot":false,"src":"8616:4:11","valueSize":1},{"declaration":1809,"isOffset":false,"isSlot":false,"src":"8636:3:11","valueSize":1},{"declaration":1809,"isOffset":false,"isSlot":false,"src":"8658:3:11","valueSize":1},{"declaration":1809,"isOffset":false,"isSlot":false,"src":"8669:3:11","valueSize":1},{"declaration":1844,"isOffset":false,"isSlot":false,"src":"8484:9:11","valueSize":1},{"declaration":1844,"isOffset":false,"isSlot":false,"src":"8625:9:11","valueSize":1},{"declaration":1844,"isOffset":false,"isSlot":false,"src":"8674:9:11","valueSize":1},{"declaration":1797,"isOffset":false,"isSlot":false,"src":"8504:1:11","valueSize":1},{"declaration":1799,"isOffset":false,"isSlot":false,"src":"8507:1:11","valueSize":1}],"flags":["memory-safe"],"id":1846,"nodeType":"InlineAssembly","src":"8390:308:11"},{"assignments":[1848],"declarations":[{"constant":false,"id":1848,"mutability":"mutable","name":"twos","nameLocation":"8910:4:11","nodeType":"VariableDeclaration","scope":1928,"src":"8902:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1847,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1855,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1849,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"8917:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1851,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"8936:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:11"},{"AST":{"nativeSrc":"8987:359:11","nodeType":"YulBlock","src":"8987:359:11","statements":[{"nativeSrc":"9052:37:11","nodeType":"YulAssignment","src":"9052:37:11","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:11","nodeType":"YulIdentifier","src":"9071:11:11"},{"name":"twos","nativeSrc":"9084:4:11","nodeType":"YulIdentifier","src":"9084:4:11"}],"functionName":{"name":"div","nativeSrc":"9067:3:11","nodeType":"YulIdentifier","src":"9067:3:11"},"nativeSrc":"9067:22:11","nodeType":"YulFunctionCall","src":"9067:22:11"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:11","nodeType":"YulIdentifier","src":"9052:11:11"}]},{"nativeSrc":"9153:21:11","nodeType":"YulAssignment","src":"9153:21:11","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:11","nodeType":"YulIdentifier","src":"9164:3:11"},{"name":"twos","nativeSrc":"9169:4:11","nodeType":"YulIdentifier","src":"9169:4:11"}],"functionName":{"name":"div","nativeSrc":"9160:3:11","nodeType":"YulIdentifier","src":"9160:3:11"},"nativeSrc":"9160:14:11","nodeType":"YulFunctionCall","src":"9160:14:11"},"variableNames":[{"name":"low","nativeSrc":"9153:3:11","nodeType":"YulIdentifier","src":"9153:3:11"}]},{"nativeSrc":"9293:39:11","nodeType":"YulAssignment","src":"9293:39:11","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:11","nodeType":"YulLiteral","src":"9313:1:11","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:11","nodeType":"YulIdentifier","src":"9316:4:11"}],"functionName":{"name":"sub","nativeSrc":"9309:3:11","nodeType":"YulIdentifier","src":"9309:3:11"},"nativeSrc":"9309:12:11","nodeType":"YulFunctionCall","src":"9309:12:11"},{"name":"twos","nativeSrc":"9323:4:11","nodeType":"YulIdentifier","src":"9323:4:11"}],"functionName":{"name":"div","nativeSrc":"9305:3:11","nodeType":"YulIdentifier","src":"9305:3:11"},"nativeSrc":"9305:23:11","nodeType":"YulFunctionCall","src":"9305:23:11"},{"kind":"number","nativeSrc":"9330:1:11","nodeType":"YulLiteral","src":"9330:1:11","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:11","nodeType":"YulIdentifier","src":"9301:3:11"},"nativeSrc":"9301:31:11","nodeType":"YulFunctionCall","src":"9301:31:11"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:11","nodeType":"YulIdentifier","src":"9293:4:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1801,"isOffset":false,"isSlot":false,"src":"9052:11:11","valueSize":1},{"declaration":1801,"isOffset":false,"isSlot":false,"src":"9071:11:11","valueSize":1},{"declaration":1809,"isOffset":false,"isSlot":false,"src":"9153:3:11","valueSize":1},{"declaration":1809,"isOffset":false,"isSlot":false,"src":"9164:3:11","valueSize":1},{"declaration":1848,"isOffset":false,"isSlot":false,"src":"9084:4:11","valueSize":1},{"declaration":1848,"isOffset":false,"isSlot":false,"src":"9169:4:11","valueSize":1},{"declaration":1848,"isOffset":false,"isSlot":false,"src":"9293:4:11","valueSize":1},{"declaration":1848,"isOffset":false,"isSlot":false,"src":"9316:4:11","valueSize":1},{"declaration":1848,"isOffset":false,"isSlot":false,"src":"9323:4:11","valueSize":1}],"flags":["memory-safe"],"id":1856,"nodeType":"InlineAssembly","src":"8962:384:11"},{"expression":{"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1857,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"9409:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1858,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"9416:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1859,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"9423:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1862,"nodeType":"ExpressionStatement","src":"9409:18:11"},{"assignments":[1864],"declarations":[{"constant":false,"id":1864,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:11","nodeType":"VariableDeclaration","scope":1928,"src":"9762:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1863,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1871,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1866,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"9785:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:11"},{"expression":{"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1872,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"10018:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1874,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"10033:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1875,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"10047:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1879,"nodeType":"ExpressionStatement","src":"10018:36:11"},{"expression":{"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1880,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"10088:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1882,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"10103:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1883,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"10117:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1887,"nodeType":"ExpressionStatement","src":"10088:36:11"},{"expression":{"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1888,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"10160:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1890,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"10175:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1891,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"10189:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1895,"nodeType":"ExpressionStatement","src":"10160:36:11"},{"expression":{"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1896,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"10231:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1898,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"10246:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1899,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"10260:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1903,"nodeType":"ExpressionStatement","src":"10231:36:11"},{"expression":{"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1904,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"10304:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1906,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"10319:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1907,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"10333:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1911,"nodeType":"ExpressionStatement","src":"10304:36:11"},{"expression":{"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1912,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"10378:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1914,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"10393:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1915,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"10407:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1919,"nodeType":"ExpressionStatement","src":"10378:36:11"},{"expression":{"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1920,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"10859:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1921,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"10868:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1922,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"10874:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1925,"nodeType":"ExpressionStatement","src":"10859:22:11"},{"expression":{"id":1926,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"10902:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1805,"id":1927,"nodeType":"Return","src":"10895:13:11"}]}]},"documentation":{"id":1795,"nodeType":"StructuredDocumentation","src":"6925:312:11","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":1930,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:11","nodeType":"FunctionDefinition","parameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"x","nameLocation":"7266:1:11","nodeType":"VariableDeclaration","scope":1930,"src":"7258:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1799,"mutability":"mutable","name":"y","nameLocation":"7277:1:11","nodeType":"VariableDeclaration","scope":1930,"src":"7269:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1798,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1801,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:11","nodeType":"VariableDeclaration","scope":1930,"src":"7280:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1800,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:11"},"returnParameters":{"id":1805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"result","nameLocation":"7332:6:11","nodeType":"VariableDeclaration","scope":1930,"src":"7324:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1803,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:11"},"scope":3024,"src":"7242:3683:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1966,"nodeType":"Block","src":"11164:128:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1946,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"11188:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1947,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"11191:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1948,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"11194:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1945,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1930,1967],"referencedDeclaration":1930,"src":"11181:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1953,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"11242:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"}],"id":1952,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"11225:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1415_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1956,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"11262:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1957,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"11265:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1958,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"11268:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1955,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1950,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"11209:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"11209:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1944,"id":1965,"nodeType":"Return","src":"11174:111:11"}]},"documentation":{"id":1931,"nodeType":"StructuredDocumentation","src":"10931:118:11","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1967,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:11","nodeType":"FunctionDefinition","parameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"x","nameLocation":"11078:1:11","nodeType":"VariableDeclaration","scope":1967,"src":"11070:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1935,"mutability":"mutable","name":"y","nameLocation":"11089:1:11","nodeType":"VariableDeclaration","scope":1967,"src":"11081:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1937,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:11","nodeType":"VariableDeclaration","scope":1967,"src":"11092:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1940,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:11","nodeType":"VariableDeclaration","scope":1967,"src":"11113:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"},"typeName":{"id":1939,"nodeType":"UserDefinedTypeName","pathNode":{"id":1938,"name":"Rounding","nameLocations":["11113:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1415,"src":"11113:8:11"},"referencedDeclaration":1415,"src":"11113:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:11"},"returnParameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1967,"src":"11155:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:11"},"scope":3024,"src":"11054:238:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2016,"nodeType":"Block","src":"11500:245:11","statements":[{"id":2015,"nodeType":"UncheckedBlock","src":"11510:229:11","statements":[{"assignments":[1980,1982],"declarations":[{"constant":false,"id":1980,"mutability":"mutable","name":"high","nameLocation":"11543:4:11","nodeType":"VariableDeclaration","scope":2015,"src":"11535:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1979,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1982,"mutability":"mutable","name":"low","nameLocation":"11557:3:11","nodeType":"VariableDeclaration","scope":2015,"src":"11549:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1987,"initialValue":{"arguments":[{"id":1984,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"11571:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1985,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"11574:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1983,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"11564:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1988,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"11594:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1990,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"11607:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2001,"nodeType":"IfStatement","src":"11590:86:11","trueBody":{"id":2000,"nodeType":"Block","src":"11610:66:11","statements":[{"expression":{"arguments":[{"expression":{"id":1996,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"11640:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1391_$","typeString":"type(library Panic)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:11","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1354,"src":"11640:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1993,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"11628:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1391_$","typeString":"type(library Panic)"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:11","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1390,"src":"11628:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1999,"nodeType":"ExpressionStatement","src":"11628:33:11"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2002,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"11697:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:11","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2004,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"11712:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":2006,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2009,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"11719:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2010,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"11726:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2012,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1978,"id":2014,"nodeType":"Return","src":"11689:39:11"}]}]},"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"11298:111:11","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":2017,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:11","nodeType":"FunctionDefinition","parameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"x","nameLocation":"11438:1:11","nodeType":"VariableDeclaration","scope":2017,"src":"11430:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1969,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"y","nameLocation":"11449:1:11","nodeType":"VariableDeclaration","scope":2017,"src":"11441:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1974,"mutability":"mutable","name":"n","nameLocation":"11458:1:11","nodeType":"VariableDeclaration","scope":2017,"src":"11452:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1973,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:11"},"returnParameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1977,"mutability":"mutable","name":"result","nameLocation":"11492:6:11","nodeType":"VariableDeclaration","scope":2017,"src":"11484:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1976,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:11"},"scope":3024,"src":"11414:331:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2055,"nodeType":"Block","src":"11963:113:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2033,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"11987:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2034,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"11990:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2035,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"11993:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2032,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[2017,2056],"referencedDeclaration":2017,"src":"11980:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2040,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"12031:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"}],"id":2039,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"12014:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1415_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2043,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"12051:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2044,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"12054:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2046,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"12062:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2042,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2037,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"11998:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"11998:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2031,"id":2054,"nodeType":"Return","src":"11973:96:11"}]},"documentation":{"id":2018,"nodeType":"StructuredDocumentation","src":"11751:109:11","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":2056,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:11","nodeType":"FunctionDefinition","parameters":{"id":2028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2020,"mutability":"mutable","name":"x","nameLocation":"11889:1:11","nodeType":"VariableDeclaration","scope":2056,"src":"11881:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2019,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2022,"mutability":"mutable","name":"y","nameLocation":"11900:1:11","nodeType":"VariableDeclaration","scope":2056,"src":"11892:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2021,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2024,"mutability":"mutable","name":"n","nameLocation":"11909:1:11","nodeType":"VariableDeclaration","scope":2056,"src":"11903:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2023,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2027,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:11","nodeType":"VariableDeclaration","scope":2056,"src":"11912:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"},"typeName":{"id":2026,"nodeType":"UserDefinedTypeName","pathNode":{"id":2025,"name":"Rounding","nameLocations":["11912:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1415,"src":"11912:8:11"},"referencedDeclaration":1415,"src":"11912:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:11"},"returnParameters":{"id":2031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2056,"src":"11954:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2029,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:11"},"scope":3024,"src":"11865:211:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2152,"nodeType":"Block","src":"12710:1849:11","statements":[{"id":2151,"nodeType":"UncheckedBlock","src":"12720:1833:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2066,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"12748:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2071,"nodeType":"IfStatement","src":"12744:20:11","trueBody":{"expression":{"hexValue":"30","id":2069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2065,"id":2070,"nodeType":"Return","src":"12756:8:11"}},{"assignments":[2073],"declarations":[{"constant":false,"id":2073,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:11","nodeType":"VariableDeclaration","scope":2151,"src":"13235:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2072,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2077,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2074,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"13255:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2075,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"13259:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:11"},{"assignments":[2079],"declarations":[{"constant":false,"id":2079,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:11","nodeType":"VariableDeclaration","scope":2151,"src":"13274:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2078,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2081,"initialValue":{"id":2080,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"13288:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:11"},{"assignments":[2083],"declarations":[{"constant":false,"id":2083,"mutability":"mutable","name":"x","nameLocation":"13432:1:11","nodeType":"VariableDeclaration","scope":2151,"src":"13425:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2082,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2085,"initialValue":{"hexValue":"30","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:11"},{"assignments":[2087],"declarations":[{"constant":false,"id":2087,"mutability":"mutable","name":"y","nameLocation":"13458:1:11","nodeType":"VariableDeclaration","scope":2151,"src":"13451:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2086,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2089,"initialValue":{"hexValue":"31","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:11"},{"body":{"id":2126,"nodeType":"Block","src":"13501:882:11","statements":[{"assignments":[2094],"declarations":[{"constant":false,"id":2094,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:11","nodeType":"VariableDeclaration","scope":2126,"src":"13519:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2093,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2098,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2095,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"13538:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2096,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"13544:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:11"},{"expression":{"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2099,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"13573:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2100,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"13578:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2101,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2102,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"13678:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2103,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"13923:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2104,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"13929:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2105,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"13941:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2108,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2110,"nodeType":"ExpressionStatement","src":"13572:395:11"},{"expression":{"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2111,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"13987:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":2112,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"13990:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2113,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2114,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"14072:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2115,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"14326:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2116,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"14330:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2119,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"14341:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2117,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:11","typeDescriptions":{}}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2125,"nodeType":"ExpressionStatement","src":"13986:382:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2090,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"13485:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2127,"nodeType":"WhileStatement","src":"13478:905:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2128,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"14401:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2133,"nodeType":"IfStatement","src":"14397:22:11","trueBody":{"expression":{"hexValue":"30","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2065,"id":2132,"nodeType":"Return","src":"14411:8:11"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2135,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"14470:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2138,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"14477:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:11","subExpression":{"id":2141,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"14490:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2139,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:11","typeDescriptions":{}}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2147,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"14502:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:11","typeDescriptions":{}}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2134,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"14462:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2065,"id":2150,"nodeType":"Return","src":"14455:50:11"}]}]},"documentation":{"id":2057,"nodeType":"StructuredDocumentation","src":"12082:553:11","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":2153,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:11","nodeType":"FunctionDefinition","parameters":{"id":2062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2059,"mutability":"mutable","name":"a","nameLocation":"12664:1:11","nodeType":"VariableDeclaration","scope":2153,"src":"12656:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2058,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2061,"mutability":"mutable","name":"n","nameLocation":"12675:1:11","nodeType":"VariableDeclaration","scope":2153,"src":"12667:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2060,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:11"},"returnParameters":{"id":2065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2153,"src":"12701:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2063,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:11"},"scope":3024,"src":"12640:1919:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2173,"nodeType":"Block","src":"15159:82:11","statements":[{"id":2172,"nodeType":"UncheckedBlock","src":"15169:66:11","statements":[{"expression":{"arguments":[{"id":2165,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"15212:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2166,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"15215:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2169,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"15222:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2163,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"15200:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3024_$","typeString":"type(library Math)"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:11","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":2210,"src":"15200:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2162,"id":2171,"nodeType":"Return","src":"15193:31:11"}]}]},"documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"14565:514:11","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":2174,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:11","nodeType":"FunctionDefinition","parameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"mutability":"mutable","name":"a","nameLocation":"15113:1:11","nodeType":"VariableDeclaration","scope":2174,"src":"15105:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2155,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2158,"mutability":"mutable","name":"p","nameLocation":"15124:1:11","nodeType":"VariableDeclaration","scope":2174,"src":"15116:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2157,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:11"},"returnParameters":{"id":2162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2174,"src":"15150:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2160,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:11"},"scope":3024,"src":"15084:157:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2209,"nodeType":"Block","src":"16011:174:11","statements":[{"assignments":[2187,2189],"declarations":[{"constant":false,"id":2187,"mutability":"mutable","name":"success","nameLocation":"16027:7:11","nodeType":"VariableDeclaration","scope":2209,"src":"16022:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2186,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2189,"mutability":"mutable","name":"result","nameLocation":"16044:6:11","nodeType":"VariableDeclaration","scope":2209,"src":"16036:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2188,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2195,"initialValue":{"arguments":[{"id":2191,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"16064:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2192,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"16067:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2193,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"16070:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2190,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[2234,2316],"referencedDeclaration":2234,"src":"16054:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:11"},{"condition":{"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:11","subExpression":{"id":2196,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"16087:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2206,"nodeType":"IfStatement","src":"16082:74:11","trueBody":{"id":2205,"nodeType":"Block","src":"16096:60:11","statements":[{"expression":{"arguments":[{"expression":{"id":2201,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"16122:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1391_$","typeString":"type(library Panic)"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:11","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1358,"src":"16122:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2198,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"16110:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1391_$","typeString":"type(library Panic)"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:11","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1390,"src":"16110:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2204,"nodeType":"ExpressionStatement","src":"16110:35:11"}]}},{"expression":{"id":2207,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"16172:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2185,"id":2208,"nodeType":"Return","src":"16165:13:11"}]},"documentation":{"id":2175,"nodeType":"StructuredDocumentation","src":"15247:678:11","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":2210,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:11","nodeType":"FunctionDefinition","parameters":{"id":2182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2177,"mutability":"mutable","name":"b","nameLocation":"15954:1:11","nodeType":"VariableDeclaration","scope":2210,"src":"15946:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2176,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2179,"mutability":"mutable","name":"e","nameLocation":"15965:1:11","nodeType":"VariableDeclaration","scope":2210,"src":"15957:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2178,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2181,"mutability":"mutable","name":"m","nameLocation":"15976:1:11","nodeType":"VariableDeclaration","scope":2210,"src":"15968:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2180,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:11"},"returnParameters":{"id":2185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2210,"src":"16002:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2183,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:11"},"scope":3024,"src":"15930:255:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2233,"nodeType":"Block","src":"17039:1493:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2224,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"17053:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2231,"nodeType":"IfStatement","src":"17049:29:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2229,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2223,"id":2230,"nodeType":"Return","src":"17061:17:11"}},{"AST":{"nativeSrc":"17113:1413:11","nodeType":"YulBlock","src":"17113:1413:11","statements":[{"nativeSrc":"17127:22:11","nodeType":"YulVariableDeclaration","src":"17127:22:11","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:11","nodeType":"YulLiteral","src":"17144:4:11","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:11","nodeType":"YulIdentifier","src":"17138:5:11"},"nativeSrc":"17138:11:11","nodeType":"YulFunctionCall","src":"17138:11:11"},"variables":[{"name":"ptr","nativeSrc":"17131:3:11","nodeType":"YulTypedName","src":"17131:3:11","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:11","nodeType":"YulIdentifier","src":"18057:3:11"},{"kind":"number","nativeSrc":"18062:4:11","nodeType":"YulLiteral","src":"18062:4:11","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:11","nodeType":"YulIdentifier","src":"18050:6:11"},"nativeSrc":"18050:17:11","nodeType":"YulFunctionCall","src":"18050:17:11"},"nativeSrc":"18050:17:11","nodeType":"YulExpressionStatement","src":"18050:17:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:11","nodeType":"YulIdentifier","src":"18091:3:11"},{"kind":"number","nativeSrc":"18096:4:11","nodeType":"YulLiteral","src":"18096:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:11","nodeType":"YulIdentifier","src":"18087:3:11"},"nativeSrc":"18087:14:11","nodeType":"YulFunctionCall","src":"18087:14:11"},{"kind":"number","nativeSrc":"18103:4:11","nodeType":"YulLiteral","src":"18103:4:11","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:11","nodeType":"YulIdentifier","src":"18080:6:11"},"nativeSrc":"18080:28:11","nodeType":"YulFunctionCall","src":"18080:28:11"},"nativeSrc":"18080:28:11","nodeType":"YulExpressionStatement","src":"18080:28:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:11","nodeType":"YulIdentifier","src":"18132:3:11"},{"kind":"number","nativeSrc":"18137:4:11","nodeType":"YulLiteral","src":"18137:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:11","nodeType":"YulIdentifier","src":"18128:3:11"},"nativeSrc":"18128:14:11","nodeType":"YulFunctionCall","src":"18128:14:11"},{"kind":"number","nativeSrc":"18144:4:11","nodeType":"YulLiteral","src":"18144:4:11","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:11","nodeType":"YulIdentifier","src":"18121:6:11"},"nativeSrc":"18121:28:11","nodeType":"YulFunctionCall","src":"18121:28:11"},"nativeSrc":"18121:28:11","nodeType":"YulExpressionStatement","src":"18121:28:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:11","nodeType":"YulIdentifier","src":"18173:3:11"},{"kind":"number","nativeSrc":"18178:4:11","nodeType":"YulLiteral","src":"18178:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:11","nodeType":"YulIdentifier","src":"18169:3:11"},"nativeSrc":"18169:14:11","nodeType":"YulFunctionCall","src":"18169:14:11"},{"name":"b","nativeSrc":"18185:1:11","nodeType":"YulIdentifier","src":"18185:1:11"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:11","nodeType":"YulIdentifier","src":"18162:6:11"},"nativeSrc":"18162:25:11","nodeType":"YulFunctionCall","src":"18162:25:11"},"nativeSrc":"18162:25:11","nodeType":"YulExpressionStatement","src":"18162:25:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:11","nodeType":"YulIdentifier","src":"18211:3:11"},{"kind":"number","nativeSrc":"18216:4:11","nodeType":"YulLiteral","src":"18216:4:11","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:11","nodeType":"YulIdentifier","src":"18207:3:11"},"nativeSrc":"18207:14:11","nodeType":"YulFunctionCall","src":"18207:14:11"},{"name":"e","nativeSrc":"18223:1:11","nodeType":"YulIdentifier","src":"18223:1:11"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:11","nodeType":"YulIdentifier","src":"18200:6:11"},"nativeSrc":"18200:25:11","nodeType":"YulFunctionCall","src":"18200:25:11"},"nativeSrc":"18200:25:11","nodeType":"YulExpressionStatement","src":"18200:25:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:11","nodeType":"YulIdentifier","src":"18249:3:11"},{"kind":"number","nativeSrc":"18254:4:11","nodeType":"YulLiteral","src":"18254:4:11","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:11","nodeType":"YulIdentifier","src":"18245:3:11"},"nativeSrc":"18245:14:11","nodeType":"YulFunctionCall","src":"18245:14:11"},{"name":"m","nativeSrc":"18261:1:11","nodeType":"YulIdentifier","src":"18261:1:11"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:11","nodeType":"YulIdentifier","src":"18238:6:11"},"nativeSrc":"18238:25:11","nodeType":"YulFunctionCall","src":"18238:25:11"},"nativeSrc":"18238:25:11","nodeType":"YulExpressionStatement","src":"18238:25:11"},{"nativeSrc":"18425:57:11","nodeType":"YulAssignment","src":"18425:57:11","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:11","nodeType":"YulIdentifier","src":"18447:3:11"},"nativeSrc":"18447:5:11","nodeType":"YulFunctionCall","src":"18447:5:11"},{"kind":"number","nativeSrc":"18454:4:11","nodeType":"YulLiteral","src":"18454:4:11","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:11","nodeType":"YulIdentifier","src":"18460:3:11"},{"kind":"number","nativeSrc":"18465:4:11","nodeType":"YulLiteral","src":"18465:4:11","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:11","nodeType":"YulLiteral","src":"18471:4:11","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:11","nodeType":"YulLiteral","src":"18477:4:11","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:11","nodeType":"YulIdentifier","src":"18436:10:11"},"nativeSrc":"18436:46:11","nodeType":"YulFunctionCall","src":"18436:46:11"},"variableNames":[{"name":"success","nativeSrc":"18425:7:11","nodeType":"YulIdentifier","src":"18425:7:11"}]},{"nativeSrc":"18495:21:11","nodeType":"YulAssignment","src":"18495:21:11","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:11","nodeType":"YulLiteral","src":"18511:4:11","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:11","nodeType":"YulIdentifier","src":"18505:5:11"},"nativeSrc":"18505:11:11","nodeType":"YulFunctionCall","src":"18505:11:11"},"variableNames":[{"name":"result","nativeSrc":"18495:6:11","nodeType":"YulIdentifier","src":"18495:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2213,"isOffset":false,"isSlot":false,"src":"18185:1:11","valueSize":1},{"declaration":2215,"isOffset":false,"isSlot":false,"src":"18223:1:11","valueSize":1},{"declaration":2217,"isOffset":false,"isSlot":false,"src":"18261:1:11","valueSize":1},{"declaration":2222,"isOffset":false,"isSlot":false,"src":"18495:6:11","valueSize":1},{"declaration":2220,"isOffset":false,"isSlot":false,"src":"18425:7:11","valueSize":1}],"flags":["memory-safe"],"id":2232,"nodeType":"InlineAssembly","src":"17088:1438:11"}]},"documentation":{"id":2211,"nodeType":"StructuredDocumentation","src":"16191:738:11","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":2234,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:11","nodeType":"FunctionDefinition","parameters":{"id":2218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2213,"mutability":"mutable","name":"b","nameLocation":"16961:1:11","nodeType":"VariableDeclaration","scope":2234,"src":"16953:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2212,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2215,"mutability":"mutable","name":"e","nameLocation":"16972:1:11","nodeType":"VariableDeclaration","scope":2234,"src":"16964:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2214,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2217,"mutability":"mutable","name":"m","nameLocation":"16983:1:11","nodeType":"VariableDeclaration","scope":2234,"src":"16975:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2216,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:11"},"returnParameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2220,"mutability":"mutable","name":"success","nameLocation":"17014:7:11","nodeType":"VariableDeclaration","scope":2234,"src":"17009:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2219,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2222,"mutability":"mutable","name":"result","nameLocation":"17031:6:11","nodeType":"VariableDeclaration","scope":2234,"src":"17023:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2221,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:11"},"scope":3024,"src":"16934:1598:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2269,"nodeType":"Block","src":"18729:179:11","statements":[{"assignments":[2247,2249],"declarations":[{"constant":false,"id":2247,"mutability":"mutable","name":"success","nameLocation":"18745:7:11","nodeType":"VariableDeclaration","scope":2269,"src":"18740:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2246,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2249,"mutability":"mutable","name":"result","nameLocation":"18767:6:11","nodeType":"VariableDeclaration","scope":2269,"src":"18754:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2248,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2255,"initialValue":{"arguments":[{"id":2251,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"18787:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2252,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"18790:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2253,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"18793:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2250,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[2234,2316],"referencedDeclaration":2316,"src":"18777:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:11"},{"condition":{"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:11","subExpression":{"id":2256,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"18810:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2266,"nodeType":"IfStatement","src":"18805:74:11","trueBody":{"id":2265,"nodeType":"Block","src":"18819:60:11","statements":[{"expression":{"arguments":[{"expression":{"id":2261,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"18845:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1391_$","typeString":"type(library Panic)"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:11","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1358,"src":"18845:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2258,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"18833:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1391_$","typeString":"type(library Panic)"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:11","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1390,"src":"18833:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2264,"nodeType":"ExpressionStatement","src":"18833:35:11"}]}},{"expression":{"id":2267,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"18895:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2245,"id":2268,"nodeType":"Return","src":"18888:13:11"}]},"documentation":{"id":2235,"nodeType":"StructuredDocumentation","src":"18538:85:11","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":2270,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:11","nodeType":"FunctionDefinition","parameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2237,"mutability":"mutable","name":"b","nameLocation":"18657:1:11","nodeType":"VariableDeclaration","scope":2270,"src":"18644:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2236,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2239,"mutability":"mutable","name":"e","nameLocation":"18673:1:11","nodeType":"VariableDeclaration","scope":2270,"src":"18660:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2238,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2241,"mutability":"mutable","name":"m","nameLocation":"18689:1:11","nodeType":"VariableDeclaration","scope":2270,"src":"18676:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2240,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:11"},"returnParameters":{"id":2245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2270,"src":"18715:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2243,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:11"},"scope":3024,"src":"18628:280:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2315,"nodeType":"Block","src":"19162:771:11","statements":[{"condition":{"arguments":[{"id":2285,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"19187:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2284,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"19176:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2294,"nodeType":"IfStatement","src":"19172:47:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2288,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":2292,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":2283,"id":2293,"nodeType":"Return","src":"19191:28:11"}},{"assignments":[2296],"declarations":[{"constant":false,"id":2296,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:11","nodeType":"VariableDeclaration","scope":2315,"src":"19230:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2299,"initialValue":{"expression":{"id":2297,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"19245:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:11","memberName":"length","nodeType":"MemberAccess","src":"19245:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:11"},{"expression":{"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2300,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"19335:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2303,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"19361:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:11","memberName":"length","nodeType":"MemberAccess","src":"19361:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2305,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"19371:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:11","memberName":"length","nodeType":"MemberAccess","src":"19371:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2307,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"19381:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2308,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"19387:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2309,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"19390:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2310,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"19393:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2301,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2313,"nodeType":"ExpressionStatement","src":"19335:60:11"},{"AST":{"nativeSrc":"19431:496:11","nodeType":"YulBlock","src":"19431:496:11","statements":[{"nativeSrc":"19445:32:11","nodeType":"YulVariableDeclaration","src":"19445:32:11","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:11","nodeType":"YulIdentifier","src":"19464:6:11"},{"kind":"number","nativeSrc":"19472:4:11","nodeType":"YulLiteral","src":"19472:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:11","nodeType":"YulIdentifier","src":"19460:3:11"},"nativeSrc":"19460:17:11","nodeType":"YulFunctionCall","src":"19460:17:11"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:11","nodeType":"YulTypedName","src":"19449:7:11","type":""}]},{"nativeSrc":"19567:73:11","nodeType":"YulAssignment","src":"19567:73:11","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:11","nodeType":"YulIdentifier","src":"19589:3:11"},"nativeSrc":"19589:5:11","nodeType":"YulFunctionCall","src":"19589:5:11"},{"kind":"number","nativeSrc":"19596:4:11","nodeType":"YulLiteral","src":"19596:4:11","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:11","nodeType":"YulIdentifier","src":"19602:7:11"},{"arguments":[{"name":"result","nativeSrc":"19617:6:11","nodeType":"YulIdentifier","src":"19617:6:11"}],"functionName":{"name":"mload","nativeSrc":"19611:5:11","nodeType":"YulIdentifier","src":"19611:5:11"},"nativeSrc":"19611:13:11","nodeType":"YulFunctionCall","src":"19611:13:11"},{"name":"dataPtr","nativeSrc":"19626:7:11","nodeType":"YulIdentifier","src":"19626:7:11"},{"name":"mLen","nativeSrc":"19635:4:11","nodeType":"YulIdentifier","src":"19635:4:11"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:11","nodeType":"YulIdentifier","src":"19578:10:11"},"nativeSrc":"19578:62:11","nodeType":"YulFunctionCall","src":"19578:62:11"},"variableNames":[{"name":"success","nativeSrc":"19567:7:11","nodeType":"YulIdentifier","src":"19567:7:11"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:11","nodeType":"YulIdentifier","src":"19796:6:11"},{"name":"mLen","nativeSrc":"19804:4:11","nodeType":"YulIdentifier","src":"19804:4:11"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:11","nodeType":"YulIdentifier","src":"19789:6:11"},"nativeSrc":"19789:20:11","nodeType":"YulFunctionCall","src":"19789:20:11"},"nativeSrc":"19789:20:11","nodeType":"YulExpressionStatement","src":"19789:20:11"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:11","nodeType":"YulLiteral","src":"19892:4:11","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:11","nodeType":"YulIdentifier","src":"19902:7:11"},{"name":"mLen","nativeSrc":"19911:4:11","nodeType":"YulIdentifier","src":"19911:4:11"}],"functionName":{"name":"add","nativeSrc":"19898:3:11","nodeType":"YulIdentifier","src":"19898:3:11"},"nativeSrc":"19898:18:11","nodeType":"YulFunctionCall","src":"19898:18:11"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:11","nodeType":"YulIdentifier","src":"19885:6:11"},"nativeSrc":"19885:32:11","nodeType":"YulFunctionCall","src":"19885:32:11"},"nativeSrc":"19885:32:11","nodeType":"YulExpressionStatement","src":"19885:32:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":2296,"isOffset":false,"isSlot":false,"src":"19635:4:11","valueSize":1},{"declaration":2296,"isOffset":false,"isSlot":false,"src":"19804:4:11","valueSize":1},{"declaration":2296,"isOffset":false,"isSlot":false,"src":"19911:4:11","valueSize":1},{"declaration":2282,"isOffset":false,"isSlot":false,"src":"19464:6:11","valueSize":1},{"declaration":2282,"isOffset":false,"isSlot":false,"src":"19617:6:11","valueSize":1},{"declaration":2282,"isOffset":false,"isSlot":false,"src":"19796:6:11","valueSize":1},{"declaration":2280,"isOffset":false,"isSlot":false,"src":"19567:7:11","valueSize":1}],"flags":["memory-safe"],"id":2314,"nodeType":"InlineAssembly","src":"19406:521:11"}]},"documentation":{"id":2271,"nodeType":"StructuredDocumentation","src":"18914:88:11","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":2316,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:11","nodeType":"FunctionDefinition","parameters":{"id":2278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"b","nameLocation":"19048:1:11","nodeType":"VariableDeclaration","scope":2316,"src":"19035:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2272,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2275,"mutability":"mutable","name":"e","nameLocation":"19072:1:11","nodeType":"VariableDeclaration","scope":2316,"src":"19059:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2274,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2277,"mutability":"mutable","name":"m","nameLocation":"19096:1:11","nodeType":"VariableDeclaration","scope":2316,"src":"19083:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2276,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:11"},"returnParameters":{"id":2283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"success","nameLocation":"19132:7:11","nodeType":"VariableDeclaration","scope":2316,"src":"19127:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2279,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2282,"mutability":"mutable","name":"result","nameLocation":"19154:6:11","nodeType":"VariableDeclaration","scope":2316,"src":"19141:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2281,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:11"},"scope":3024,"src":"19007:926:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2348,"nodeType":"Block","src":"20088:176:11","statements":[{"body":{"id":2344,"nodeType":"Block","src":"20145:92:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2335,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"20163:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2337,"indexExpression":{"id":2336,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"20173:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2343,"nodeType":"IfStatement","src":"20159:68:11","trueBody":{"id":2342,"nodeType":"Block","src":"20182:45:11","statements":[{"expression":{"hexValue":"66616c7365","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2323,"id":2341,"nodeType":"Return","src":"20200:12:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2328,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"20118:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2329,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"20122:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:11","memberName":"length","nodeType":"MemberAccess","src":"20122:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2345,"initializationExpression":{"assignments":[2325],"declarations":[{"constant":false,"id":2325,"mutability":"mutable","name":"i","nameLocation":"20111:1:11","nodeType":"VariableDeclaration","scope":2345,"src":"20103:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2324,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2327,"initialValue":{"hexValue":"30","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:11","subExpression":{"id":2332,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"20142:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2334,"nodeType":"ExpressionStatement","src":"20140:3:11"},"nodeType":"ForStatement","src":"20098:139:11"},{"expression":{"hexValue":"74727565","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2323,"id":2347,"nodeType":"Return","src":"20246:11:11"}]},"documentation":{"id":2317,"nodeType":"StructuredDocumentation","src":"19939:72:11","text":" @dev Returns whether the provided byte array is zero."},"id":2349,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:11","nodeType":"FunctionDefinition","parameters":{"id":2320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2319,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:11","nodeType":"VariableDeclaration","scope":2349,"src":"20036:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2318,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:11"},"returnParameters":{"id":2323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2349,"src":"20082:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2321,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:11"},"scope":3024,"src":"20016:248:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2567,"nodeType":"Block","src":"20624:5124:11","statements":[{"id":2566,"nodeType":"UncheckedBlock","src":"20634:5108:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2357,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"20728:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2363,"nodeType":"IfStatement","src":"20724:53:11","trueBody":{"id":2362,"nodeType":"Block","src":"20736:41:11","statements":[{"expression":{"id":2360,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"20761:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2356,"id":2361,"nodeType":"Return","src":"20754:8:11"}]}},{"assignments":[2365],"declarations":[{"constant":false,"id":2365,"mutability":"mutable","name":"aa","nameLocation":"21712:2:11","nodeType":"VariableDeclaration","scope":2566,"src":"21704:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2364,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2367,"initialValue":{"id":2366,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"21717:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:11"},{"assignments":[2369],"declarations":[{"constant":false,"id":2369,"mutability":"mutable","name":"xn","nameLocation":"21740:2:11","nodeType":"VariableDeclaration","scope":2566,"src":"21732:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2368,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2371,"initialValue":{"hexValue":"31","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2372,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"21765:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":2375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:11","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":2376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:11","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2387,"nodeType":"IfStatement","src":"21761:92:11","trueBody":{"id":2386,"nodeType":"Block","src":"21783:70:11","statements":[{"expression":{"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2378,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"21801:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2381,"nodeType":"ExpressionStatement","src":"21801:10:11"},{"expression":{"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2382,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"21829:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":2383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2385,"nodeType":"ExpressionStatement","src":"21829:9:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2388,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"21870:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":2391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:11","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":2392,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:11","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2403,"nodeType":"IfStatement","src":"21866:90:11","trueBody":{"id":2402,"nodeType":"Block","src":"21887:69:11","statements":[{"expression":{"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2394,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"21905:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2397,"nodeType":"ExpressionStatement","src":"21905:9:11"},{"expression":{"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2398,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"21932:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":2399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2401,"nodeType":"ExpressionStatement","src":"21932:9:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2404,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"21973:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":2407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":2406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:11","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":2408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:11","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2419,"nodeType":"IfStatement","src":"21969:90:11","trueBody":{"id":2418,"nodeType":"Block","src":"21990:69:11","statements":[{"expression":{"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2410,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"22008:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2413,"nodeType":"ExpressionStatement","src":"22008:9:11"},{"expression":{"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2414,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"22035:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2417,"nodeType":"ExpressionStatement","src":"22035:9:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2420,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"22076:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":2423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:11","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":2424,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:11","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2435,"nodeType":"IfStatement","src":"22072:89:11","trueBody":{"id":2434,"nodeType":"Block","src":"22093:68:11","statements":[{"expression":{"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2426,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"22111:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2429,"nodeType":"ExpressionStatement","src":"22111:9:11"},{"expression":{"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2430,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"22138:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":2431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2433,"nodeType":"ExpressionStatement","src":"22138:8:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2436,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"22178:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:11","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2440,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:11","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2451,"nodeType":"IfStatement","src":"22174:87:11","trueBody":{"id":2450,"nodeType":"Block","src":"22194:67:11","statements":[{"expression":{"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2442,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"22212:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2445,"nodeType":"ExpressionStatement","src":"22212:8:11"},{"expression":{"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2446,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"22238:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2449,"nodeType":"ExpressionStatement","src":"22238:8:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2452,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"22278:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":2455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":2456,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2467,"nodeType":"IfStatement","src":"22274:87:11","trueBody":{"id":2466,"nodeType":"Block","src":"22294:67:11","statements":[{"expression":{"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2458,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"22312:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2461,"nodeType":"ExpressionStatement","src":"22312:8:11"},{"expression":{"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2462,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"22338:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":2463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2465,"nodeType":"ExpressionStatement","src":"22338:8:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2468,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"22378:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":2471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":2472,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2479,"nodeType":"IfStatement","src":"22374:61:11","trueBody":{"id":2478,"nodeType":"Block","src":"22394:41:11","statements":[{"expression":{"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2474,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"22412:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":2475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2477,"nodeType":"ExpressionStatement","src":"22412:8:11"}]}},{"expression":{"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2480,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"22855:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2482,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"22865:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2484,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2488,"nodeType":"ExpressionStatement","src":"22855:18:11"},{"expression":{"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2489,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"24760:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2490,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"24766:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2491,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"24771:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2492,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"24775:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2495,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2499,"nodeType":"ExpressionStatement","src":"24760:23:11"},{"expression":{"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2500,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"24869:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2501,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"24875:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2502,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"24880:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2503,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"24884:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2506,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2510,"nodeType":"ExpressionStatement","src":"24869:23:11"},{"expression":{"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2511,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"24980:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2512,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"24986:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2513,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"24991:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2514,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"24995:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2517,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2521,"nodeType":"ExpressionStatement","src":"24980:23:11"},{"expression":{"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2522,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"25089:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2523,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"25095:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2524,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"25100:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2525,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"25104:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2528,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2532,"nodeType":"ExpressionStatement","src":"25089:23:11"},{"expression":{"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2533,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"25199:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2534,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"25205:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2535,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"25210:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2536,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"25214:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2539,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2543,"nodeType":"ExpressionStatement","src":"25199:23:11"},{"expression":{"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2544,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"25309:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2545,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"25315:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2546,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"25320:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2547,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"25324:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2554,"nodeType":"ExpressionStatement","src":"25309:23:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2555,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"25698:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2558,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"25719:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2559,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"25724:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2560,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"25728:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2556,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"25703:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"25703:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2356,"id":2565,"nodeType":"Return","src":"25691:40:11"}]}]},"documentation":{"id":2350,"nodeType":"StructuredDocumentation","src":"20270:292:11","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":2568,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:11","nodeType":"FunctionDefinition","parameters":{"id":2353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2352,"mutability":"mutable","name":"a","nameLocation":"20589:1:11","nodeType":"VariableDeclaration","scope":2568,"src":"20581:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2351,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:11"},"returnParameters":{"id":2356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2568,"src":"20615:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2354,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:11"},"scope":3024,"src":"20567:5181:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2601,"nodeType":"Block","src":"25921:171:11","statements":[{"id":2600,"nodeType":"UncheckedBlock","src":"25931:155:11","statements":[{"assignments":[2580],"declarations":[{"constant":false,"id":2580,"mutability":"mutable","name":"result","nameLocation":"25963:6:11","nodeType":"VariableDeclaration","scope":2600,"src":"25955:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2579,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2584,"initialValue":{"arguments":[{"id":2582,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"25977:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2581,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2568,2602],"referencedDeclaration":2568,"src":"25972:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2585,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"26000:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2589,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"26042:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"}],"id":2588,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"26025:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1415_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2591,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"26055:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2592,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"26064:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2594,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"26073:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2586,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"26009:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"26009:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2578,"id":2599,"nodeType":"Return","src":"25993:82:11"}]}]},"documentation":{"id":2569,"nodeType":"StructuredDocumentation","src":"25754:86:11","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":2602,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:11","nodeType":"FunctionDefinition","parameters":{"id":2575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2571,"mutability":"mutable","name":"a","nameLocation":"25867:1:11","nodeType":"VariableDeclaration","scope":2602,"src":"25859:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2574,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:11","nodeType":"VariableDeclaration","scope":2602,"src":"25870:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"},"typeName":{"id":2573,"nodeType":"UserDefinedTypeName","pathNode":{"id":2572,"name":"Rounding","nameLocations":["25870:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1415,"src":"25870:8:11"},"referencedDeclaration":1415,"src":"25870:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:11"},"returnParameters":{"id":2578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2602,"src":"25912:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2576,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:11"},"scope":3024,"src":"25845:247:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2692,"nodeType":"Block","src":"26281:2334:11","statements":[{"expression":{"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2610,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"26363:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2613,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"26383:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":2614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:11","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2611,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"26367:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"26367:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:11","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2620,"nodeType":"ExpressionStatement","src":"26363:64:11"},{"expression":{"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2621,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"26503:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2624,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"26525:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2625,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"26530:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2627,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":2628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:11","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2622,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"26508:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"26508:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":2631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:11","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2634,"nodeType":"ExpressionStatement","src":"26503:56:11"},{"expression":{"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2635,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"26634:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2638,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"26656:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2639,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"26661:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2641,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":2642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:11","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2636,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"26639:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"26639:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:11","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2648,"nodeType":"ExpressionStatement","src":"26634:48:11"},{"expression":{"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2649,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"26757:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2652,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"26779:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2653,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"26784:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2655,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:11","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2650,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"26762:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"26762:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2662,"nodeType":"ExpressionStatement","src":"26757:44:11"},{"expression":{"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2663,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"26874:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2666,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"26896:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2667,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"26901:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2669,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2664,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"26879:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"26879:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2676,"nodeType":"ExpressionStatement","src":"26874:42:11"},{"expression":{"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2677,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"26988:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2680,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"27010:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2681,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"27015:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2683,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":2684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:11","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2678,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"26993:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"26993:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2690,"nodeType":"ExpressionStatement","src":"26988:41:11"},{"AST":{"nativeSrc":"28490:119:11","nodeType":"YulBlock","src":"28490:119:11","statements":[{"nativeSrc":"28504:95:11","nodeType":"YulAssignment","src":"28504:95:11","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:11","nodeType":"YulIdentifier","src":"28512:1:11"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:11","nodeType":"YulIdentifier","src":"28524:1:11"},{"name":"x","nativeSrc":"28527:1:11","nodeType":"YulIdentifier","src":"28527:1:11"}],"functionName":{"name":"shr","nativeSrc":"28520:3:11","nodeType":"YulIdentifier","src":"28520:3:11"},"nativeSrc":"28520:9:11","nodeType":"YulFunctionCall","src":"28520:9:11"},{"kind":"number","nativeSrc":"28531:66:11","nodeType":"YulLiteral","src":"28531:66:11","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:11","nodeType":"YulIdentifier","src":"28515:4:11"},"nativeSrc":"28515:83:11","nodeType":"YulFunctionCall","src":"28515:83:11"}],"functionName":{"name":"or","nativeSrc":"28509:2:11","nodeType":"YulIdentifier","src":"28509:2:11"},"nativeSrc":"28509:90:11","nodeType":"YulFunctionCall","src":"28509:90:11"},"variableNames":[{"name":"r","nativeSrc":"28504:1:11","nodeType":"YulIdentifier","src":"28504:1:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2608,"isOffset":false,"isSlot":false,"src":"28504:1:11","valueSize":1},{"declaration":2608,"isOffset":false,"isSlot":false,"src":"28512:1:11","valueSize":1},{"declaration":2608,"isOffset":false,"isSlot":false,"src":"28524:1:11","valueSize":1},{"declaration":2605,"isOffset":false,"isSlot":false,"src":"28527:1:11","valueSize":1}],"flags":["memory-safe"],"id":2691,"nodeType":"InlineAssembly","src":"28465:144:11"}]},"documentation":{"id":2603,"nodeType":"StructuredDocumentation","src":"26098:119:11","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2693,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:11","nodeType":"FunctionDefinition","parameters":{"id":2606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"x","nameLocation":"26244:1:11","nodeType":"VariableDeclaration","scope":2693,"src":"26236:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2604,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:11"},"returnParameters":{"id":2609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2608,"mutability":"mutable","name":"r","nameLocation":"26278:1:11","nodeType":"VariableDeclaration","scope":2693,"src":"26270:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2607,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:11"},"scope":3024,"src":"26222:2393:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2726,"nodeType":"Block","src":"28848:175:11","statements":[{"id":2725,"nodeType":"UncheckedBlock","src":"28858:159:11","statements":[{"assignments":[2705],"declarations":[{"constant":false,"id":2705,"mutability":"mutable","name":"result","nameLocation":"28890:6:11","nodeType":"VariableDeclaration","scope":2725,"src":"28882:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2704,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2709,"initialValue":{"arguments":[{"id":2707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"28904:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2706,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2693,2727],"referencedDeclaration":2693,"src":"28899:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2710,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"28931:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2714,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"28973:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"}],"id":2713,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"28956:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1415_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2717,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"28991:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"29000:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2711,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"28940:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"28940:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2703,"id":2724,"nodeType":"Return","src":"28924:82:11"}]}]},"documentation":{"id":2694,"nodeType":"StructuredDocumentation","src":"28621:142:11","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2727,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:11","nodeType":"FunctionDefinition","parameters":{"id":2700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2696,"mutability":"mutable","name":"value","nameLocation":"28790:5:11","nodeType":"VariableDeclaration","scope":2727,"src":"28782:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2695,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2699,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:11","nodeType":"VariableDeclaration","scope":2727,"src":"28797:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"},"typeName":{"id":2698,"nodeType":"UserDefinedTypeName","pathNode":{"id":2697,"name":"Rounding","nameLocations":["28797:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1415,"src":"28797:8:11"},"referencedDeclaration":1415,"src":"28797:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:11"},"returnParameters":{"id":2703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2727,"src":"28839:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:11"},"scope":3024,"src":"28768:255:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2855,"nodeType":"Block","src":"29216:854:11","statements":[{"assignments":[2736],"declarations":[{"constant":false,"id":2736,"mutability":"mutable","name":"result","nameLocation":"29234:6:11","nodeType":"VariableDeclaration","scope":2855,"src":"29226:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2738,"initialValue":{"hexValue":"30","id":2737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:11"},{"id":2852,"nodeType":"UncheckedBlock","src":"29254:787:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"29282:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2755,"nodeType":"IfStatement","src":"29278:103:11","trueBody":{"id":2754,"nodeType":"Block","src":"29301:80:11","statements":[{"expression":{"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"29319:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2749,"nodeType":"ExpressionStatement","src":"29319:17:11"},{"expression":{"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2750,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"29354:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2753,"nodeType":"ExpressionStatement","src":"29354:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"29398:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2772,"nodeType":"IfStatement","src":"29394:103:11","trueBody":{"id":2771,"nodeType":"Block","src":"29417:80:11","statements":[{"expression":{"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"29435:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2766,"nodeType":"ExpressionStatement","src":"29435:17:11"},{"expression":{"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2767,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"29470:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2770,"nodeType":"ExpressionStatement","src":"29470:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"29514:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2789,"nodeType":"IfStatement","src":"29510:103:11","trueBody":{"id":2788,"nodeType":"Block","src":"29533:80:11","statements":[{"expression":{"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"29551:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2783,"nodeType":"ExpressionStatement","src":"29551:17:11"},{"expression":{"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2784,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"29586:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2787,"nodeType":"ExpressionStatement","src":"29586:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"29630:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2806,"nodeType":"IfStatement","src":"29626:100:11","trueBody":{"id":2805,"nodeType":"Block","src":"29648:78:11","statements":[{"expression":{"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"29666:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2800,"nodeType":"ExpressionStatement","src":"29666:16:11"},{"expression":{"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2801,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"29700:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2804,"nodeType":"ExpressionStatement","src":"29700:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"29743:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:11","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2823,"nodeType":"IfStatement","src":"29739:100:11","trueBody":{"id":2822,"nodeType":"Block","src":"29761:78:11","statements":[{"expression":{"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"29779:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:11","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2817,"nodeType":"ExpressionStatement","src":"29779:16:11"},{"expression":{"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2818,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"29813:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2821,"nodeType":"ExpressionStatement","src":"29813:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"29856:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2840,"nodeType":"IfStatement","src":"29852:100:11","trueBody":{"id":2839,"nodeType":"Block","src":"29874:78:11","statements":[{"expression":{"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"29892:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2834,"nodeType":"ExpressionStatement","src":"29892:16:11"},{"expression":{"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2835,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"29926:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2838,"nodeType":"ExpressionStatement","src":"29926:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"29969:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2851,"nodeType":"IfStatement","src":"29965:66:11","trueBody":{"id":2850,"nodeType":"Block","src":"29987:44:11","statements":[{"expression":{"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2846,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"30005:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2849,"nodeType":"ExpressionStatement","src":"30005:11:11"}]}}]},{"expression":{"id":2853,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"30057:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2734,"id":2854,"nodeType":"Return","src":"30050:13:11"}]},"documentation":{"id":2728,"nodeType":"StructuredDocumentation","src":"29029:120:11","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2856,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:11","nodeType":"FunctionDefinition","parameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"value","nameLocation":"29177:5:11","nodeType":"VariableDeclaration","scope":2856,"src":"29169:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2729,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:11"},"returnParameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2856,"src":"29207:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2732,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:11"},"scope":3024,"src":"29154:916:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2889,"nodeType":"Block","src":"30305:177:11","statements":[{"id":2888,"nodeType":"UncheckedBlock","src":"30315:161:11","statements":[{"assignments":[2868],"declarations":[{"constant":false,"id":2868,"mutability":"mutable","name":"result","nameLocation":"30347:6:11","nodeType":"VariableDeclaration","scope":2888,"src":"30339:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2867,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2872,"initialValue":{"arguments":[{"id":2870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"30362:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2869,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2856,2890],"referencedDeclaration":2856,"src":"30356:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2873,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"30389:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2877,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"30431:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"}],"id":2876,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"30414:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1415_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2880,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"30450:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"30459:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2874,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"30398:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"30398:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2866,"id":2887,"nodeType":"Return","src":"30382:83:11"}]}]},"documentation":{"id":2857,"nodeType":"StructuredDocumentation","src":"30076:143:11","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2890,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:11","nodeType":"FunctionDefinition","parameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2859,"mutability":"mutable","name":"value","nameLocation":"30247:5:11","nodeType":"VariableDeclaration","scope":2890,"src":"30239:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2858,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2862,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:11","nodeType":"VariableDeclaration","scope":2890,"src":"30254:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"},"typeName":{"id":2861,"nodeType":"UserDefinedTypeName","pathNode":{"id":2860,"name":"Rounding","nameLocations":["30254:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1415,"src":"30254:8:11"},"referencedDeclaration":1415,"src":"30254:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:11"},"returnParameters":{"id":2866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2890,"src":"30296:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2864,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:11"},"scope":3024,"src":"30224:258:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2966,"nodeType":"Block","src":"30800:675:11","statements":[{"expression":{"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2898,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"30882:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2901,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"30902:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:11","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2899,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"30886:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"30886:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":2905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:11","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2908,"nodeType":"ExpressionStatement","src":"30882:64:11"},{"expression":{"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2909,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"31022:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2912,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"31044:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2913,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"31049:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2915,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:11","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2910,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"31027:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"31027:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:11","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2922,"nodeType":"ExpressionStatement","src":"31022:56:11"},{"expression":{"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2923,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"31153:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2926,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"31175:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2927,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"31180:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2929,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":2930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:11","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2924,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"31158:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"31158:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:11","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2936,"nodeType":"ExpressionStatement","src":"31153:48:11"},{"expression":{"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2937,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"31276:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2940,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"31298:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2941,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"31303:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2943,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:11","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2938,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"31281:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"31281:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2950,"nodeType":"ExpressionStatement","src":"31276:44:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2951,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"31426:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2954,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2957,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"31453:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2958,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"31458:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2960,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2955,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"31436:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"31436:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2897,"id":2965,"nodeType":"Return","src":"31418:50:11"}]},"documentation":{"id":2891,"nodeType":"StructuredDocumentation","src":"30488:246:11","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2967,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:11","nodeType":"FunctionDefinition","parameters":{"id":2894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2893,"mutability":"mutable","name":"x","nameLocation":"30763:1:11","nodeType":"VariableDeclaration","scope":2967,"src":"30755:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2892,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:11"},"returnParameters":{"id":2897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2896,"mutability":"mutable","name":"r","nameLocation":"30797:1:11","nodeType":"VariableDeclaration","scope":2967,"src":"30789:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2895,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:11"},"scope":3024,"src":"30739:736:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3003,"nodeType":"Block","src":"31712:184:11","statements":[{"id":3002,"nodeType":"UncheckedBlock","src":"31722:168:11","statements":[{"assignments":[2979],"declarations":[{"constant":false,"id":2979,"mutability":"mutable","name":"result","nameLocation":"31754:6:11","nodeType":"VariableDeclaration","scope":3002,"src":"31746:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2978,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2983,"initialValue":{"arguments":[{"id":2981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"31770:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2980,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2967,3004],"referencedDeclaration":2967,"src":"31763:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2984,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"31797:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2988,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"31839:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"}],"id":2987,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"31822:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1415_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2991,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"31858:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2994,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"31873:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2985,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"31806:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4789_$","typeString":"type(library SafeCast)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"31806:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2977,"id":3001,"nodeType":"Return","src":"31790:89:11"}]}]},"documentation":{"id":2968,"nodeType":"StructuredDocumentation","src":"31481:144:11","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3004,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:11","nodeType":"FunctionDefinition","parameters":{"id":2974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"value","nameLocation":"31654:5:11","nodeType":"VariableDeclaration","scope":3004,"src":"31646:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2969,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2973,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:11","nodeType":"VariableDeclaration","scope":3004,"src":"31661:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"},"typeName":{"id":2972,"nodeType":"UserDefinedTypeName","pathNode":{"id":2971,"name":"Rounding","nameLocations":["31661:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1415,"src":"31661:8:11"},"referencedDeclaration":1415,"src":"31661:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:11"},"returnParameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3004,"src":"31703:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:11"},"scope":3024,"src":"31630:266:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3022,"nodeType":"Block","src":"32094:48:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3015,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"32117:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"}],"id":3014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3013,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:11","typeDescriptions":{}}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3012,"id":3021,"nodeType":"Return","src":"32104:31:11"}]},"documentation":{"id":3005,"nodeType":"StructuredDocumentation","src":"31902:113:11","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3023,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:11","nodeType":"FunctionDefinition","parameters":{"id":3009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3008,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:11","nodeType":"VariableDeclaration","scope":3023,"src":"32046:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"},"typeName":{"id":3007,"nodeType":"UserDefinedTypeName","pathNode":{"id":3006,"name":"Rounding","nameLocations":["32046:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1415,"src":"32046:8:11"},"referencedDeclaration":1415,"src":"32046:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1415","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:11"},"returnParameters":{"id":3012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3023,"src":"32088:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3010,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:11"},"scope":3024,"src":"32020:122:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3025,"src":"281:31863:11","usedErrors":[],"usedEvents":[]}],"src":"103:32042:11"},"id":11},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[4789]},"id":4790,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3026,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":3027,"nodeType":"StructuredDocumentation","src":"218:550:12","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":4789,"linearizedBaseContracts":[4789],"name":"SafeCast","nameLocation":"777:8:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3028,"nodeType":"StructuredDocumentation","src":"792:68:12","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":3034,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:12","nodeType":"ErrorDefinition","parameters":{"id":3033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"bits","nameLocation":"908:4:12","nodeType":"VariableDeclaration","scope":3034,"src":"902:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3029,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3032,"mutability":"mutable","name":"value","nameLocation":"922:5:12","nodeType":"VariableDeclaration","scope":3034,"src":"914:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3031,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:12"},"src":"865:64:12"},{"documentation":{"id":3035,"nodeType":"StructuredDocumentation","src":"935:75:12","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":3039,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:12","nodeType":"ErrorDefinition","parameters":{"id":3038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3037,"mutability":"mutable","name":"value","nameLocation":"1056:5:12","nodeType":"VariableDeclaration","scope":3039,"src":"1049:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3036,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:12"},"src":"1015:48:12"},{"documentation":{"id":3040,"nodeType":"StructuredDocumentation","src":"1069:67:12","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":3046,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:12","nodeType":"ErrorDefinition","parameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"bits","nameLocation":"1183:4:12","nodeType":"VariableDeclaration","scope":3046,"src":"1177:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3041,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3044,"mutability":"mutable","name":"value","nameLocation":"1196:5:12","nodeType":"VariableDeclaration","scope":3046,"src":"1189:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3043,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:12"},"src":"1141:62:12"},{"documentation":{"id":3047,"nodeType":"StructuredDocumentation","src":"1209:75:12","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":3051,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:12","nodeType":"ErrorDefinition","parameters":{"id":3050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3049,"mutability":"mutable","name":"value","nameLocation":"1331:5:12","nodeType":"VariableDeclaration","scope":3051,"src":"1323:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:12"},"src":"1289:49:12"},{"body":{"id":3078,"nodeType":"Block","src":"1695:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"1709:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3061,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":3060,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":3064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:12","memberName":"max","nodeType":"MemberAccess","src":"1717:17:12","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3072,"nodeType":"IfStatement","src":"1705:105:12","trueBody":{"id":3071,"nodeType":"Block","src":"1736:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:12","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":3068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"1793:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3066,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"1757:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3070,"nodeType":"RevertStatement","src":"1750:49:12"}]}},{"expression":{"arguments":[{"id":3075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"1834:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3073,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:12","typeDescriptions":{}}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":3058,"id":3077,"nodeType":"Return","src":"1819:21:12"}]},"documentation":{"id":3052,"nodeType":"StructuredDocumentation","src":"1344:280:12","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":3079,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:12","nodeType":"FunctionDefinition","parameters":{"id":3055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3054,"mutability":"mutable","name":"value","nameLocation":"1656:5:12","nodeType":"VariableDeclaration","scope":3079,"src":"1648:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3053,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:12"},"returnParameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3079,"src":"1686:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":3056,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:12","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:12"},"scope":4789,"src":"1629:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3106,"nodeType":"Block","src":"2204:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"2218:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3089,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":3088,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:12","memberName":"max","nodeType":"MemberAccess","src":"2226:17:12","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3100,"nodeType":"IfStatement","src":"2214:105:12","trueBody":{"id":3099,"nodeType":"Block","src":"2245:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":3095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:12","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":3096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"2302:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3094,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"2266:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3098,"nodeType":"RevertStatement","src":"2259:49:12"}]}},{"expression":{"arguments":[{"id":3103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"2343:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3101,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:12","typeDescriptions":{}}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":3086,"id":3105,"nodeType":"Return","src":"2328:21:12"}]},"documentation":{"id":3080,"nodeType":"StructuredDocumentation","src":"1853:280:12","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":3107,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:12","nodeType":"FunctionDefinition","parameters":{"id":3083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3082,"mutability":"mutable","name":"value","nameLocation":"2165:5:12","nodeType":"VariableDeclaration","scope":3107,"src":"2157:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3081,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:12"},"returnParameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3107,"src":"2195:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":3084,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:12","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:12"},"scope":4789,"src":"2138:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3134,"nodeType":"Block","src":"2713:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"2727:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3117,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":3116,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":3120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:12","memberName":"max","nodeType":"MemberAccess","src":"2735:17:12","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3128,"nodeType":"IfStatement","src":"2723:105:12","trueBody":{"id":3127,"nodeType":"Block","src":"2754:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:12","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":3124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"2811:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3122,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"2775:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3126,"nodeType":"RevertStatement","src":"2768:49:12"}]}},{"expression":{"arguments":[{"id":3131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"2852:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3129,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:12","typeDescriptions":{}}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":3114,"id":3133,"nodeType":"Return","src":"2837:21:12"}]},"documentation":{"id":3108,"nodeType":"StructuredDocumentation","src":"2362:280:12","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":3135,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:12","nodeType":"FunctionDefinition","parameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"value","nameLocation":"2674:5:12","nodeType":"VariableDeclaration","scope":3135,"src":"2666:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3109,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:12"},"returnParameters":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3135,"src":"2704:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":3112,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:12","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:12"},"scope":4789,"src":"2647:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3162,"nodeType":"Block","src":"3222:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"3236:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3145,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":3144,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:12","memberName":"max","nodeType":"MemberAccess","src":"3244:17:12","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3156,"nodeType":"IfStatement","src":"3232:105:12","trueBody":{"id":3155,"nodeType":"Block","src":"3263:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:12","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":3152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"3320:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3150,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"3284:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3154,"nodeType":"RevertStatement","src":"3277:49:12"}]}},{"expression":{"arguments":[{"id":3159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"3361:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3157,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:12","typeDescriptions":{}}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3142,"id":3161,"nodeType":"Return","src":"3346:21:12"}]},"documentation":{"id":3136,"nodeType":"StructuredDocumentation","src":"2871:280:12","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":3163,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:12","nodeType":"FunctionDefinition","parameters":{"id":3139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3138,"mutability":"mutable","name":"value","nameLocation":"3183:5:12","nodeType":"VariableDeclaration","scope":3163,"src":"3175:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3137,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:12"},"returnParameters":{"id":3142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3163,"src":"3213:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3140,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:12","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:12"},"scope":4789,"src":"3156:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3190,"nodeType":"Block","src":"3731:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"3745:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3173,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":3172,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:12","memberName":"max","nodeType":"MemberAccess","src":"3753:17:12","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3184,"nodeType":"IfStatement","src":"3741:105:12","trueBody":{"id":3183,"nodeType":"Block","src":"3772:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:12","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":3180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"3829:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3178,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"3793:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3182,"nodeType":"RevertStatement","src":"3786:49:12"}]}},{"expression":{"arguments":[{"id":3187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"3870:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3185,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:12","typeDescriptions":{}}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":3170,"id":3189,"nodeType":"Return","src":"3855:21:12"}]},"documentation":{"id":3164,"nodeType":"StructuredDocumentation","src":"3380:280:12","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":3191,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:12","nodeType":"FunctionDefinition","parameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"value","nameLocation":"3692:5:12","nodeType":"VariableDeclaration","scope":3191,"src":"3684:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:12"},"returnParameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3191,"src":"3722:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":3168,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:12","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:12"},"scope":4789,"src":"3665:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3218,"nodeType":"Block","src":"4240:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"4254:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3201,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":3200,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:12","memberName":"max","nodeType":"MemberAccess","src":"4262:17:12","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3212,"nodeType":"IfStatement","src":"4250:105:12","trueBody":{"id":3211,"nodeType":"Block","src":"4281:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":3207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:12","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":3208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"4338:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3206,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"4302:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3210,"nodeType":"RevertStatement","src":"4295:49:12"}]}},{"expression":{"arguments":[{"id":3215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"4379:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3213,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:12","typeDescriptions":{}}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":3198,"id":3217,"nodeType":"Return","src":"4364:21:12"}]},"documentation":{"id":3192,"nodeType":"StructuredDocumentation","src":"3889:280:12","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":3219,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:12","nodeType":"FunctionDefinition","parameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"value","nameLocation":"4201:5:12","nodeType":"VariableDeclaration","scope":3219,"src":"4193:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3193,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:12"},"returnParameters":{"id":3198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3219,"src":"4231:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":3196,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:12","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:12"},"scope":4789,"src":"4174:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3246,"nodeType":"Block","src":"4749:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"4763:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3229,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":3228,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:12","memberName":"max","nodeType":"MemberAccess","src":"4771:17:12","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3240,"nodeType":"IfStatement","src":"4759:105:12","trueBody":{"id":3239,"nodeType":"Block","src":"4790:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":3235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:12","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":3236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"4847:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3234,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"4811:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3238,"nodeType":"RevertStatement","src":"4804:49:12"}]}},{"expression":{"arguments":[{"id":3243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"4888:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3241,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:12","typeDescriptions":{}}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":3226,"id":3245,"nodeType":"Return","src":"4873:21:12"}]},"documentation":{"id":3220,"nodeType":"StructuredDocumentation","src":"4398:280:12","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":3247,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:12","nodeType":"FunctionDefinition","parameters":{"id":3223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3222,"mutability":"mutable","name":"value","nameLocation":"4710:5:12","nodeType":"VariableDeclaration","scope":3247,"src":"4702:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3221,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:12"},"returnParameters":{"id":3226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3247,"src":"4740:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":3224,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:12","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:12"},"scope":4789,"src":"4683:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3274,"nodeType":"Block","src":"5258:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"5272:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3257,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":3256,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:12","memberName":"max","nodeType":"MemberAccess","src":"5280:17:12","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3268,"nodeType":"IfStatement","src":"5268:105:12","trueBody":{"id":3267,"nodeType":"Block","src":"5299:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":3263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:12","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":3264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"5356:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3262,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"5320:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3266,"nodeType":"RevertStatement","src":"5313:49:12"}]}},{"expression":{"arguments":[{"id":3271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"5397:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3269,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:12","typeDescriptions":{}}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":3254,"id":3273,"nodeType":"Return","src":"5382:21:12"}]},"documentation":{"id":3248,"nodeType":"StructuredDocumentation","src":"4907:280:12","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":3275,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:12","nodeType":"FunctionDefinition","parameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"value","nameLocation":"5219:5:12","nodeType":"VariableDeclaration","scope":3275,"src":"5211:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3249,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:12"},"returnParameters":{"id":3254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3275,"src":"5249:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3252,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:12","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:12"},"scope":4789,"src":"5192:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3302,"nodeType":"Block","src":"5767:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"5781:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3285,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":3284,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":3288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:12","memberName":"max","nodeType":"MemberAccess","src":"5789:17:12","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3296,"nodeType":"IfStatement","src":"5777:105:12","trueBody":{"id":3295,"nodeType":"Block","src":"5808:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":3291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:12","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":3292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"5865:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3290,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"5829:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3294,"nodeType":"RevertStatement","src":"5822:49:12"}]}},{"expression":{"arguments":[{"id":3299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"5906:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3297,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:12","typeDescriptions":{}}},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":3282,"id":3301,"nodeType":"Return","src":"5891:21:12"}]},"documentation":{"id":3276,"nodeType":"StructuredDocumentation","src":"5416:280:12","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":3303,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:12","nodeType":"FunctionDefinition","parameters":{"id":3279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3278,"mutability":"mutable","name":"value","nameLocation":"5728:5:12","nodeType":"VariableDeclaration","scope":3303,"src":"5720:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3277,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:12"},"returnParameters":{"id":3282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3303,"src":"5758:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":3280,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:12","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:12"},"scope":4789,"src":"5701:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3330,"nodeType":"Block","src":"6276:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"6290:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3313,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":3312,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:12","memberName":"max","nodeType":"MemberAccess","src":"6298:17:12","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3324,"nodeType":"IfStatement","src":"6286:105:12","trueBody":{"id":3323,"nodeType":"Block","src":"6317:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":3319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:12","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":3320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"6374:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3318,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"6338:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3322,"nodeType":"RevertStatement","src":"6331:49:12"}]}},{"expression":{"arguments":[{"id":3327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"6415:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3325,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:12","typeDescriptions":{}}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":3310,"id":3329,"nodeType":"Return","src":"6400:21:12"}]},"documentation":{"id":3304,"nodeType":"StructuredDocumentation","src":"5925:280:12","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":3331,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:12","nodeType":"FunctionDefinition","parameters":{"id":3307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3306,"mutability":"mutable","name":"value","nameLocation":"6237:5:12","nodeType":"VariableDeclaration","scope":3331,"src":"6229:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3305,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:12"},"returnParameters":{"id":3310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3331,"src":"6267:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":3308,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:12","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:12"},"scope":4789,"src":"6210:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3358,"nodeType":"Block","src":"6785:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"6799:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3341,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":3340,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":3344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:12","memberName":"max","nodeType":"MemberAccess","src":"6807:17:12","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3352,"nodeType":"IfStatement","src":"6795:105:12","trueBody":{"id":3351,"nodeType":"Block","src":"6826:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:12","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":3348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"6883:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3346,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"6847:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3350,"nodeType":"RevertStatement","src":"6840:49:12"}]}},{"expression":{"arguments":[{"id":3355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"6924:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3353,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:12","typeDescriptions":{}}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":3338,"id":3357,"nodeType":"Return","src":"6909:21:12"}]},"documentation":{"id":3332,"nodeType":"StructuredDocumentation","src":"6434:280:12","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":3359,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:12","nodeType":"FunctionDefinition","parameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3334,"mutability":"mutable","name":"value","nameLocation":"6746:5:12","nodeType":"VariableDeclaration","scope":3359,"src":"6738:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3333,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:12"},"returnParameters":{"id":3338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3359,"src":"6776:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":3336,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:12","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:12"},"scope":4789,"src":"6719:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3386,"nodeType":"Block","src":"7294:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"7308:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3369,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":3368,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":3372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:12","memberName":"max","nodeType":"MemberAccess","src":"7316:17:12","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3380,"nodeType":"IfStatement","src":"7304:105:12","trueBody":{"id":3379,"nodeType":"Block","src":"7335:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":3375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:12","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":3376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"7392:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3374,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"7356:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3378,"nodeType":"RevertStatement","src":"7349:49:12"}]}},{"expression":{"arguments":[{"id":3383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"7433:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3381,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:12","typeDescriptions":{}}},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":3366,"id":3385,"nodeType":"Return","src":"7418:21:12"}]},"documentation":{"id":3360,"nodeType":"StructuredDocumentation","src":"6943:280:12","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":3387,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:12","nodeType":"FunctionDefinition","parameters":{"id":3363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3362,"mutability":"mutable","name":"value","nameLocation":"7255:5:12","nodeType":"VariableDeclaration","scope":3387,"src":"7247:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3361,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:12"},"returnParameters":{"id":3366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3387,"src":"7285:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3364,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:12","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:12"},"scope":4789,"src":"7228:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3414,"nodeType":"Block","src":"7803:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"7817:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3397,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":3396,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":3400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:12","memberName":"max","nodeType":"MemberAccess","src":"7825:17:12","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3408,"nodeType":"IfStatement","src":"7813:105:12","trueBody":{"id":3407,"nodeType":"Block","src":"7844:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:12","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":3404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"7901:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3402,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"7865:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3406,"nodeType":"RevertStatement","src":"7858:49:12"}]}},{"expression":{"arguments":[{"id":3411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"7942:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3409,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:12","typeDescriptions":{}}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":3394,"id":3413,"nodeType":"Return","src":"7927:21:12"}]},"documentation":{"id":3388,"nodeType":"StructuredDocumentation","src":"7452:280:12","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":3415,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:12","nodeType":"FunctionDefinition","parameters":{"id":3391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3390,"mutability":"mutable","name":"value","nameLocation":"7764:5:12","nodeType":"VariableDeclaration","scope":3415,"src":"7756:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3389,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:12"},"returnParameters":{"id":3394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3415,"src":"7794:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":3392,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:12","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:12"},"scope":4789,"src":"7737:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3442,"nodeType":"Block","src":"8312:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"8326:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3425,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":3424,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:12","memberName":"max","nodeType":"MemberAccess","src":"8334:17:12","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3436,"nodeType":"IfStatement","src":"8322:105:12","trueBody":{"id":3435,"nodeType":"Block","src":"8353:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:12","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":3432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"8410:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3430,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"8374:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3434,"nodeType":"RevertStatement","src":"8367:49:12"}]}},{"expression":{"arguments":[{"id":3439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"8451:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3437,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:12","typeDescriptions":{}}},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":3422,"id":3441,"nodeType":"Return","src":"8436:21:12"}]},"documentation":{"id":3416,"nodeType":"StructuredDocumentation","src":"7961:280:12","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":3443,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:12","nodeType":"FunctionDefinition","parameters":{"id":3419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3418,"mutability":"mutable","name":"value","nameLocation":"8273:5:12","nodeType":"VariableDeclaration","scope":3443,"src":"8265:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3417,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:12"},"returnParameters":{"id":3422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3443,"src":"8303:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":3420,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:12","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:12"},"scope":4789,"src":"8246:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3470,"nodeType":"Block","src":"8821:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"8835:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3453,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":3452,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":3456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:12","memberName":"max","nodeType":"MemberAccess","src":"8843:17:12","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3464,"nodeType":"IfStatement","src":"8831:105:12","trueBody":{"id":3463,"nodeType":"Block","src":"8862:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:12","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":3460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"8919:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3458,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"8883:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3462,"nodeType":"RevertStatement","src":"8876:49:12"}]}},{"expression":{"arguments":[{"id":3467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"8960:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3465,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:12","typeDescriptions":{}}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":3450,"id":3469,"nodeType":"Return","src":"8945:21:12"}]},"documentation":{"id":3444,"nodeType":"StructuredDocumentation","src":"8470:280:12","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":3471,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:12","nodeType":"FunctionDefinition","parameters":{"id":3447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3446,"mutability":"mutable","name":"value","nameLocation":"8782:5:12","nodeType":"VariableDeclaration","scope":3471,"src":"8774:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3445,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:12"},"returnParameters":{"id":3450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3471,"src":"8812:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":3448,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:12","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:12"},"scope":4789,"src":"8755:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3498,"nodeType":"Block","src":"9330:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"9344:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3481,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":3480,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:12","memberName":"max","nodeType":"MemberAccess","src":"9352:17:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3492,"nodeType":"IfStatement","src":"9340:105:12","trueBody":{"id":3491,"nodeType":"Block","src":"9371:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":3487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":3488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"9428:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3486,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"9392:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3490,"nodeType":"RevertStatement","src":"9385:49:12"}]}},{"expression":{"arguments":[{"id":3495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"9469:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3493,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:12","typeDescriptions":{}}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":3478,"id":3497,"nodeType":"Return","src":"9454:21:12"}]},"documentation":{"id":3472,"nodeType":"StructuredDocumentation","src":"8979:280:12","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":3499,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:12","nodeType":"FunctionDefinition","parameters":{"id":3475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3474,"mutability":"mutable","name":"value","nameLocation":"9291:5:12","nodeType":"VariableDeclaration","scope":3499,"src":"9283:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3473,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:12"},"returnParameters":{"id":3478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3499,"src":"9321:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3476,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:12"},"scope":4789,"src":"9264:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3526,"nodeType":"Block","src":"9839:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"9853:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3509,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":3508,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:12","memberName":"max","nodeType":"MemberAccess","src":"9861:17:12","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3520,"nodeType":"IfStatement","src":"9849:105:12","trueBody":{"id":3519,"nodeType":"Block","src":"9880:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:12","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":3516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"9937:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3514,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"9901:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3518,"nodeType":"RevertStatement","src":"9894:49:12"}]}},{"expression":{"arguments":[{"id":3523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"9978:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3521,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:12","typeDescriptions":{}}},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":3506,"id":3525,"nodeType":"Return","src":"9963:21:12"}]},"documentation":{"id":3500,"nodeType":"StructuredDocumentation","src":"9488:280:12","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":3527,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:12","nodeType":"FunctionDefinition","parameters":{"id":3503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3502,"mutability":"mutable","name":"value","nameLocation":"9800:5:12","nodeType":"VariableDeclaration","scope":3527,"src":"9792:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3501,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:12"},"returnParameters":{"id":3506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3527,"src":"9830:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":3504,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:12","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:12"},"scope":4789,"src":"9773:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3554,"nodeType":"Block","src":"10348:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"10362:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3537,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":3536,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:12","memberName":"max","nodeType":"MemberAccess","src":"10370:17:12","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3548,"nodeType":"IfStatement","src":"10358:105:12","trueBody":{"id":3547,"nodeType":"Block","src":"10389:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":3543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:12","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":3544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"10446:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3542,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"10410:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3546,"nodeType":"RevertStatement","src":"10403:49:12"}]}},{"expression":{"arguments":[{"id":3551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"10487:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3549,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:12","typeDescriptions":{}}},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":3534,"id":3553,"nodeType":"Return","src":"10472:21:12"}]},"documentation":{"id":3528,"nodeType":"StructuredDocumentation","src":"9997:280:12","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":3555,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:12","nodeType":"FunctionDefinition","parameters":{"id":3531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"value","nameLocation":"10309:5:12","nodeType":"VariableDeclaration","scope":3555,"src":"10301:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3529,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:12"},"returnParameters":{"id":3534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3555,"src":"10339:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3532,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:12","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:12"},"scope":4789,"src":"10282:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3582,"nodeType":"Block","src":"10857:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"10871:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3565,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":3564,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":3568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:12","memberName":"max","nodeType":"MemberAccess","src":"10879:17:12","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3576,"nodeType":"IfStatement","src":"10867:105:12","trueBody":{"id":3575,"nodeType":"Block","src":"10898:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":3571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:12","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":3572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"10955:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3570,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"10919:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3574,"nodeType":"RevertStatement","src":"10912:49:12"}]}},{"expression":{"arguments":[{"id":3579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"10996:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3577,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:12","typeDescriptions":{}}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":3562,"id":3581,"nodeType":"Return","src":"10981:21:12"}]},"documentation":{"id":3556,"nodeType":"StructuredDocumentation","src":"10506:280:12","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":3583,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:12","nodeType":"FunctionDefinition","parameters":{"id":3559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3558,"mutability":"mutable","name":"value","nameLocation":"10818:5:12","nodeType":"VariableDeclaration","scope":3583,"src":"10810:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3557,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:12"},"returnParameters":{"id":3562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3583,"src":"10848:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":3560,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:12","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:12"},"scope":4789,"src":"10791:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3610,"nodeType":"Block","src":"11360:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"11374:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3593,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":3592,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:12","memberName":"max","nodeType":"MemberAccess","src":"11382:16:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3604,"nodeType":"IfStatement","src":"11370:103:12","trueBody":{"id":3603,"nodeType":"Block","src":"11400:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":3599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:12","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":3600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"11456:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3598,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"11421:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3602,"nodeType":"RevertStatement","src":"11414:48:12"}]}},{"expression":{"arguments":[{"id":3607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"11496:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3605,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:12","typeDescriptions":{}}},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":3590,"id":3609,"nodeType":"Return","src":"11482:20:12"}]},"documentation":{"id":3584,"nodeType":"StructuredDocumentation","src":"11015:276:12","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":3611,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:12","nodeType":"FunctionDefinition","parameters":{"id":3587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"value","nameLocation":"11322:5:12","nodeType":"VariableDeclaration","scope":3611,"src":"11314:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3585,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:12"},"returnParameters":{"id":3590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3611,"src":"11352:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3588,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:12"},"scope":4789,"src":"11296:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3638,"nodeType":"Block","src":"11860:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"11874:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3621,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":3620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":3624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:12","memberName":"max","nodeType":"MemberAccess","src":"11882:16:12","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3632,"nodeType":"IfStatement","src":"11870:103:12","trueBody":{"id":3631,"nodeType":"Block","src":"11900:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":3627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:12","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":3628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"11956:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3626,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"11921:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3630,"nodeType":"RevertStatement","src":"11914:48:12"}]}},{"expression":{"arguments":[{"id":3635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"11996:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3633,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:12","typeDescriptions":{}}},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":3618,"id":3637,"nodeType":"Return","src":"11982:20:12"}]},"documentation":{"id":3612,"nodeType":"StructuredDocumentation","src":"11515:276:12","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":3639,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:12","nodeType":"FunctionDefinition","parameters":{"id":3615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3614,"mutability":"mutable","name":"value","nameLocation":"11822:5:12","nodeType":"VariableDeclaration","scope":3639,"src":"11814:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3613,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:12"},"returnParameters":{"id":3618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3639,"src":"11852:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":3616,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:12","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:12"},"scope":4789,"src":"11796:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3666,"nodeType":"Block","src":"12360:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"12374:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3649,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":3648,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":3652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:12","memberName":"max","nodeType":"MemberAccess","src":"12382:16:12","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3660,"nodeType":"IfStatement","src":"12370:103:12","trueBody":{"id":3659,"nodeType":"Block","src":"12400:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":3655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:12","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":3656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"12456:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3654,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"12421:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3658,"nodeType":"RevertStatement","src":"12414:48:12"}]}},{"expression":{"arguments":[{"id":3663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"12496:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3661,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:12","typeDescriptions":{}}},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":3646,"id":3665,"nodeType":"Return","src":"12482:20:12"}]},"documentation":{"id":3640,"nodeType":"StructuredDocumentation","src":"12015:276:12","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":3667,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:12","nodeType":"FunctionDefinition","parameters":{"id":3643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3642,"mutability":"mutable","name":"value","nameLocation":"12322:5:12","nodeType":"VariableDeclaration","scope":3667,"src":"12314:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3641,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:12"},"returnParameters":{"id":3646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3667,"src":"12352:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3644,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:12","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:12"},"scope":4789,"src":"12296:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3694,"nodeType":"Block","src":"12860:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"12874:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3677,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":3676,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":3680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:12","memberName":"max","nodeType":"MemberAccess","src":"12882:16:12","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3688,"nodeType":"IfStatement","src":"12870:103:12","trueBody":{"id":3687,"nodeType":"Block","src":"12900:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":3683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:12","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":3684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"12956:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3682,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"12921:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3686,"nodeType":"RevertStatement","src":"12914:48:12"}]}},{"expression":{"arguments":[{"id":3691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"12996:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3689,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:12","typeDescriptions":{}}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":3674,"id":3693,"nodeType":"Return","src":"12982:20:12"}]},"documentation":{"id":3668,"nodeType":"StructuredDocumentation","src":"12515:276:12","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":3695,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:12","nodeType":"FunctionDefinition","parameters":{"id":3671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3670,"mutability":"mutable","name":"value","nameLocation":"12822:5:12","nodeType":"VariableDeclaration","scope":3695,"src":"12814:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3669,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:12"},"returnParameters":{"id":3674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3695,"src":"12852:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":3672,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:12","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:12"},"scope":4789,"src":"12796:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3722,"nodeType":"Block","src":"13360:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"13374:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3705,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":3704,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":3708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:12","memberName":"max","nodeType":"MemberAccess","src":"13382:16:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3716,"nodeType":"IfStatement","src":"13370:103:12","trueBody":{"id":3715,"nodeType":"Block","src":"13400:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":3712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"13456:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3710,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"13421:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3714,"nodeType":"RevertStatement","src":"13414:48:12"}]}},{"expression":{"arguments":[{"id":3719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"13496:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3717,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:12","typeDescriptions":{}}},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":3702,"id":3721,"nodeType":"Return","src":"13482:20:12"}]},"documentation":{"id":3696,"nodeType":"StructuredDocumentation","src":"13015:276:12","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":3723,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:12","nodeType":"FunctionDefinition","parameters":{"id":3699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3698,"mutability":"mutable","name":"value","nameLocation":"13322:5:12","nodeType":"VariableDeclaration","scope":3723,"src":"13314:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3697,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:12"},"returnParameters":{"id":3702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3723,"src":"13352:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3700,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:12"},"scope":4789,"src":"13296:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3750,"nodeType":"Block","src":"13860:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"13874:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3733,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":3732,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":3736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:12","memberName":"max","nodeType":"MemberAccess","src":"13882:16:12","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3744,"nodeType":"IfStatement","src":"13870:103:12","trueBody":{"id":3743,"nodeType":"Block","src":"13900:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:12","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":3740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"13956:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3738,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"13921:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3742,"nodeType":"RevertStatement","src":"13914:48:12"}]}},{"expression":{"arguments":[{"id":3747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"13996:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3745,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:12","typeDescriptions":{}}},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":3730,"id":3749,"nodeType":"Return","src":"13982:20:12"}]},"documentation":{"id":3724,"nodeType":"StructuredDocumentation","src":"13515:276:12","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":3751,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:12","nodeType":"FunctionDefinition","parameters":{"id":3727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3726,"mutability":"mutable","name":"value","nameLocation":"13822:5:12","nodeType":"VariableDeclaration","scope":3751,"src":"13814:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3725,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:12"},"returnParameters":{"id":3730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3751,"src":"13852:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":3728,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:12","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:12"},"scope":4789,"src":"13796:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3778,"nodeType":"Block","src":"14360:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"14374:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3761,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":3760,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":3764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:12","memberName":"max","nodeType":"MemberAccess","src":"14382:16:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3772,"nodeType":"IfStatement","src":"14370:103:12","trueBody":{"id":3771,"nodeType":"Block","src":"14400:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":3767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:12","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":3768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"14456:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3766,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"14421:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3770,"nodeType":"RevertStatement","src":"14414:48:12"}]}},{"expression":{"arguments":[{"id":3775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"14496:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3773,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:12","typeDescriptions":{}}},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":3758,"id":3777,"nodeType":"Return","src":"14482:20:12"}]},"documentation":{"id":3752,"nodeType":"StructuredDocumentation","src":"14015:276:12","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":3779,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:12","nodeType":"FunctionDefinition","parameters":{"id":3755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3754,"mutability":"mutable","name":"value","nameLocation":"14322:5:12","nodeType":"VariableDeclaration","scope":3779,"src":"14314:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3753,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:12"},"returnParameters":{"id":3758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3779,"src":"14352:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3756,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:12"},"scope":4789,"src":"14296:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3806,"nodeType":"Block","src":"14860:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"14874:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":3789,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":3788,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":3792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:12","memberName":"max","nodeType":"MemberAccess","src":"14882:16:12","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3800,"nodeType":"IfStatement","src":"14870:103:12","trueBody":{"id":3799,"nodeType":"Block","src":"14900:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":3795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:12","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":3796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"14956:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3794,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"14921:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3798,"nodeType":"RevertStatement","src":"14914:48:12"}]}},{"expression":{"arguments":[{"id":3803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"14996:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":3801,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:12","typeDescriptions":{}}},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":3786,"id":3805,"nodeType":"Return","src":"14982:20:12"}]},"documentation":{"id":3780,"nodeType":"StructuredDocumentation","src":"14515:276:12","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":3807,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:12","nodeType":"FunctionDefinition","parameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3782,"mutability":"mutable","name":"value","nameLocation":"14822:5:12","nodeType":"VariableDeclaration","scope":3807,"src":"14814:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3781,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:12"},"returnParameters":{"id":3786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3807,"src":"14852:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3784,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:12","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:12"},"scope":4789,"src":"14796:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3834,"nodeType":"Block","src":"15360:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"15374:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3817,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":3816,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:12","memberName":"max","nodeType":"MemberAccess","src":"15382:16:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3828,"nodeType":"IfStatement","src":"15370:103:12","trueBody":{"id":3827,"nodeType":"Block","src":"15400:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":3823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":3824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"15456:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3822,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"15421:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3826,"nodeType":"RevertStatement","src":"15414:48:12"}]}},{"expression":{"arguments":[{"id":3831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"15496:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3829,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:12","typeDescriptions":{}}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3814,"id":3833,"nodeType":"Return","src":"15482:20:12"}]},"documentation":{"id":3808,"nodeType":"StructuredDocumentation","src":"15015:276:12","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":3835,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:12","nodeType":"FunctionDefinition","parameters":{"id":3811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3810,"mutability":"mutable","name":"value","nameLocation":"15322:5:12","nodeType":"VariableDeclaration","scope":3835,"src":"15314:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3809,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:12"},"returnParameters":{"id":3814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3835,"src":"15352:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3812,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:12"},"scope":4789,"src":"15296:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3862,"nodeType":"Block","src":"15860:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"15874:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":3845,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":3844,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":3848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:12","memberName":"max","nodeType":"MemberAccess","src":"15882:16:12","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3856,"nodeType":"IfStatement","src":"15870:103:12","trueBody":{"id":3855,"nodeType":"Block","src":"15900:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":3851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:12","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":3852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"15956:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3850,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"15921:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3854,"nodeType":"RevertStatement","src":"15914:48:12"}]}},{"expression":{"arguments":[{"id":3859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"15996:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":3857,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:12","typeDescriptions":{}}},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":3842,"id":3861,"nodeType":"Return","src":"15982:20:12"}]},"documentation":{"id":3836,"nodeType":"StructuredDocumentation","src":"15515:276:12","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":3863,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:12","nodeType":"FunctionDefinition","parameters":{"id":3839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3838,"mutability":"mutable","name":"value","nameLocation":"15822:5:12","nodeType":"VariableDeclaration","scope":3863,"src":"15814:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3837,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:12"},"returnParameters":{"id":3842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3863,"src":"15852:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3840,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:12","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:12"},"scope":4789,"src":"15796:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3890,"nodeType":"Block","src":"16360:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"16374:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3873,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":3872,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":3876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:12","memberName":"max","nodeType":"MemberAccess","src":"16382:16:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3884,"nodeType":"IfStatement","src":"16370:103:12","trueBody":{"id":3883,"nodeType":"Block","src":"16400:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":3880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"16456:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3878,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"16421:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3882,"nodeType":"RevertStatement","src":"16414:48:12"}]}},{"expression":{"arguments":[{"id":3887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"16496:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3885,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:12","typeDescriptions":{}}},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":3870,"id":3889,"nodeType":"Return","src":"16482:20:12"}]},"documentation":{"id":3864,"nodeType":"StructuredDocumentation","src":"16015:276:12","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":3891,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:12","nodeType":"FunctionDefinition","parameters":{"id":3867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3866,"mutability":"mutable","name":"value","nameLocation":"16322:5:12","nodeType":"VariableDeclaration","scope":3891,"src":"16314:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3865,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:12"},"returnParameters":{"id":3870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3891,"src":"16352:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3868,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:12"},"scope":4789,"src":"16296:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3918,"nodeType":"Block","src":"16854:146:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"16868:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3901,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3900,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:12","memberName":"max","nodeType":"MemberAccess","src":"16876:15:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3912,"nodeType":"IfStatement","src":"16864:101:12","trueBody":{"id":3911,"nodeType":"Block","src":"16893:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":3907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":3908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"16948:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3906,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"16914:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3910,"nodeType":"RevertStatement","src":"16907:47:12"}]}},{"expression":{"arguments":[{"id":3915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"16987:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3913,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:12","typeDescriptions":{}}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3898,"id":3917,"nodeType":"Return","src":"16974:19:12"}]},"documentation":{"id":3892,"nodeType":"StructuredDocumentation","src":"16515:272:12","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":3919,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:12","nodeType":"FunctionDefinition","parameters":{"id":3895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3894,"mutability":"mutable","name":"value","nameLocation":"16817:5:12","nodeType":"VariableDeclaration","scope":3919,"src":"16809:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3893,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:12"},"returnParameters":{"id":3898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3919,"src":"16847:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3896,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:12"},"scope":4789,"src":"16792:208:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3941,"nodeType":"Block","src":"17236:128:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"17250:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3935,"nodeType":"IfStatement","src":"17246:81:12","trueBody":{"id":3934,"nodeType":"Block","src":"17261:66:12","statements":[{"errorCall":{"arguments":[{"id":3931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"17310:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3930,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"17282:27:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3933,"nodeType":"RevertStatement","src":"17275:41:12"}]}},{"expression":{"arguments":[{"id":3938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"17351:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3936,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:12","typeDescriptions":{}}},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3926,"id":3940,"nodeType":"Return","src":"17336:21:12"}]},"documentation":{"id":3920,"nodeType":"StructuredDocumentation","src":"17006:160:12","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":3942,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:12","nodeType":"FunctionDefinition","parameters":{"id":3923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3922,"mutability":"mutable","name":"value","nameLocation":"17197:5:12","nodeType":"VariableDeclaration","scope":3942,"src":"17190:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3921,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:12"},"returnParameters":{"id":3926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3942,"src":"17227:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3924,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:12"},"scope":4789,"src":"17171:193:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3967,"nodeType":"Block","src":"17761:150:12","statements":[{"expression":{"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3950,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"17771:10:12","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"17791:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":3951,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:12","typeDescriptions":{}}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:12","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":3956,"nodeType":"ExpressionStatement","src":"17771:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3957,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"17811:10:12","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"17825:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3966,"nodeType":"IfStatement","src":"17807:98:12","trueBody":{"id":3965,"nodeType":"Block","src":"17832:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":3961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:12","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":3962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"17888:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3960,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"17853:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3964,"nodeType":"RevertStatement","src":"17846:48:12"}]}}]},"documentation":{"id":3943,"nodeType":"StructuredDocumentation","src":"17370:312:12","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":3968,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:12","nodeType":"FunctionDefinition","parameters":{"id":3946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3945,"mutability":"mutable","name":"value","nameLocation":"17712:5:12","nodeType":"VariableDeclaration","scope":3968,"src":"17705:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3944,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:12"},"returnParameters":{"id":3949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3948,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:12","nodeType":"VariableDeclaration","scope":3968,"src":"17742:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":3947,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:12","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:12"},"scope":4789,"src":"17687:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3993,"nodeType":"Block","src":"18308:150:12","statements":[{"expression":{"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3976,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"18318:10:12","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"18338:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":3977,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:12","typeDescriptions":{}}},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:12","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":3982,"nodeType":"ExpressionStatement","src":"18318:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3983,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"18358:10:12","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"18372:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3992,"nodeType":"IfStatement","src":"18354:98:12","trueBody":{"id":3991,"nodeType":"Block","src":"18379:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:12","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":3988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"18435:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3986,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"18400:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3990,"nodeType":"RevertStatement","src":"18393:48:12"}]}}]},"documentation":{"id":3969,"nodeType":"StructuredDocumentation","src":"17917:312:12","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":3994,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:12","nodeType":"FunctionDefinition","parameters":{"id":3972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3971,"mutability":"mutable","name":"value","nameLocation":"18259:5:12","nodeType":"VariableDeclaration","scope":3994,"src":"18252:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3970,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:12"},"returnParameters":{"id":3975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3974,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:12","nodeType":"VariableDeclaration","scope":3994,"src":"18289:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":3973,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:12","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:12"},"scope":4789,"src":"18234:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4019,"nodeType":"Block","src":"18855:150:12","statements":[{"expression":{"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4002,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"18865:10:12","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"18885:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":4003,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:12","typeDescriptions":{}}},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:12","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":4008,"nodeType":"ExpressionStatement","src":"18865:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4009,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"18905:10:12","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"18919:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4018,"nodeType":"IfStatement","src":"18901:98:12","trueBody":{"id":4017,"nodeType":"Block","src":"18926:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:12","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"18982:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4012,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"18947:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4016,"nodeType":"RevertStatement","src":"18940:48:12"}]}}]},"documentation":{"id":3995,"nodeType":"StructuredDocumentation","src":"18464:312:12","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4020,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:12","nodeType":"FunctionDefinition","parameters":{"id":3998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3997,"mutability":"mutable","name":"value","nameLocation":"18806:5:12","nodeType":"VariableDeclaration","scope":4020,"src":"18799:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3996,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:12"},"returnParameters":{"id":4001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4000,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:12","nodeType":"VariableDeclaration","scope":4020,"src":"18836:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":3999,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:12","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:12"},"scope":4789,"src":"18781:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4045,"nodeType":"Block","src":"19402:150:12","statements":[{"expression":{"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4028,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"19412:10:12","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"19432:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":4029,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:12","typeDescriptions":{}}},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:12","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":4034,"nodeType":"ExpressionStatement","src":"19412:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4035,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"19452:10:12","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"19466:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4044,"nodeType":"IfStatement","src":"19448:98:12","trueBody":{"id":4043,"nodeType":"Block","src":"19473:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:12","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"19529:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4038,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"19494:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4042,"nodeType":"RevertStatement","src":"19487:48:12"}]}}]},"documentation":{"id":4021,"nodeType":"StructuredDocumentation","src":"19011:312:12","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4046,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:12","nodeType":"FunctionDefinition","parameters":{"id":4024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4023,"mutability":"mutable","name":"value","nameLocation":"19353:5:12","nodeType":"VariableDeclaration","scope":4046,"src":"19346:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4022,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:12"},"returnParameters":{"id":4027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4026,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:12","nodeType":"VariableDeclaration","scope":4046,"src":"19383:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":4025,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:12","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:12"},"scope":4789,"src":"19328:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4071,"nodeType":"Block","src":"19949:150:12","statements":[{"expression":{"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4054,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"19959:10:12","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"19979:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":4055,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:12","typeDescriptions":{}}},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:12","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":4060,"nodeType":"ExpressionStatement","src":"19959:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4061,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"19999:10:12","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"20013:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4070,"nodeType":"IfStatement","src":"19995:98:12","trueBody":{"id":4069,"nodeType":"Block","src":"20020:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:12","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"20076:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4064,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"20041:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4068,"nodeType":"RevertStatement","src":"20034:48:12"}]}}]},"documentation":{"id":4047,"nodeType":"StructuredDocumentation","src":"19558:312:12","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4072,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:12","nodeType":"FunctionDefinition","parameters":{"id":4050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4049,"mutability":"mutable","name":"value","nameLocation":"19900:5:12","nodeType":"VariableDeclaration","scope":4072,"src":"19893:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4048,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:12"},"returnParameters":{"id":4053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4052,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:12","nodeType":"VariableDeclaration","scope":4072,"src":"19930:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":4051,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:12","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:12"},"scope":4789,"src":"19875:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4097,"nodeType":"Block","src":"20496:150:12","statements":[{"expression":{"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4080,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"20506:10:12","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"20526:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":4081,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:12","typeDescriptions":{}}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:12","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":4086,"nodeType":"ExpressionStatement","src":"20506:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4087,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"20546:10:12","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"20560:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4096,"nodeType":"IfStatement","src":"20542:98:12","trueBody":{"id":4095,"nodeType":"Block","src":"20567:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:12","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"20623:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4090,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"20588:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4094,"nodeType":"RevertStatement","src":"20581:48:12"}]}}]},"documentation":{"id":4073,"nodeType":"StructuredDocumentation","src":"20105:312:12","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4098,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:12","nodeType":"FunctionDefinition","parameters":{"id":4076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4075,"mutability":"mutable","name":"value","nameLocation":"20447:5:12","nodeType":"VariableDeclaration","scope":4098,"src":"20440:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4074,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:12"},"returnParameters":{"id":4079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4078,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:12","nodeType":"VariableDeclaration","scope":4098,"src":"20477:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":4077,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:12","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:12"},"scope":4789,"src":"20422:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4123,"nodeType":"Block","src":"21043:150:12","statements":[{"expression":{"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4106,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4104,"src":"21053:10:12","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"21073:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":4107,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:12","typeDescriptions":{}}},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:12","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":4112,"nodeType":"ExpressionStatement","src":"21053:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4113,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4104,"src":"21093:10:12","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"21107:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4122,"nodeType":"IfStatement","src":"21089:98:12","trueBody":{"id":4121,"nodeType":"Block","src":"21114:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:12","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"21170:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4116,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"21135:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4120,"nodeType":"RevertStatement","src":"21128:48:12"}]}}]},"documentation":{"id":4099,"nodeType":"StructuredDocumentation","src":"20652:312:12","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4124,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:12","nodeType":"FunctionDefinition","parameters":{"id":4102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4101,"mutability":"mutable","name":"value","nameLocation":"20994:5:12","nodeType":"VariableDeclaration","scope":4124,"src":"20987:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4100,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:12"},"returnParameters":{"id":4105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4104,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:12","nodeType":"VariableDeclaration","scope":4124,"src":"21024:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":4103,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:12","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:12"},"scope":4789,"src":"20969:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4149,"nodeType":"Block","src":"21590:150:12","statements":[{"expression":{"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4132,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"21600:10:12","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"21620:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":4133,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:12","typeDescriptions":{}}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:12","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":4138,"nodeType":"ExpressionStatement","src":"21600:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4139,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"21640:10:12","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"21654:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4148,"nodeType":"IfStatement","src":"21636:98:12","trueBody":{"id":4147,"nodeType":"Block","src":"21661:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:12","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"21717:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4142,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"21682:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4146,"nodeType":"RevertStatement","src":"21675:48:12"}]}}]},"documentation":{"id":4125,"nodeType":"StructuredDocumentation","src":"21199:312:12","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4150,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:12","nodeType":"FunctionDefinition","parameters":{"id":4128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4127,"mutability":"mutable","name":"value","nameLocation":"21541:5:12","nodeType":"VariableDeclaration","scope":4150,"src":"21534:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4126,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:12"},"returnParameters":{"id":4131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4130,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:12","nodeType":"VariableDeclaration","scope":4150,"src":"21571:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":4129,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:12","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:12"},"scope":4789,"src":"21516:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4175,"nodeType":"Block","src":"22137:150:12","statements":[{"expression":{"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4158,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"22147:10:12","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"22167:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":4159,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:12","typeDescriptions":{}}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:12","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":4164,"nodeType":"ExpressionStatement","src":"22147:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4165,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"22187:10:12","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"22201:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4174,"nodeType":"IfStatement","src":"22183:98:12","trueBody":{"id":4173,"nodeType":"Block","src":"22208:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:12","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"22264:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4168,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"22229:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4172,"nodeType":"RevertStatement","src":"22222:48:12"}]}}]},"documentation":{"id":4151,"nodeType":"StructuredDocumentation","src":"21746:312:12","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4176,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:12","nodeType":"FunctionDefinition","parameters":{"id":4154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4153,"mutability":"mutable","name":"value","nameLocation":"22088:5:12","nodeType":"VariableDeclaration","scope":4176,"src":"22081:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4152,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:12"},"returnParameters":{"id":4157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4156,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:12","nodeType":"VariableDeclaration","scope":4176,"src":"22118:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":4155,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:12","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:12"},"scope":4789,"src":"22063:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4201,"nodeType":"Block","src":"22684:150:12","statements":[{"expression":{"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4184,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"22694:10:12","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"22714:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":4185,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:12","typeDescriptions":{}}},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:12","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":4190,"nodeType":"ExpressionStatement","src":"22694:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4191,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"22734:10:12","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"22748:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4200,"nodeType":"IfStatement","src":"22730:98:12","trueBody":{"id":4199,"nodeType":"Block","src":"22755:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:12","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"22811:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4194,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"22776:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4198,"nodeType":"RevertStatement","src":"22769:48:12"}]}}]},"documentation":{"id":4177,"nodeType":"StructuredDocumentation","src":"22293:312:12","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4202,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:12","nodeType":"FunctionDefinition","parameters":{"id":4180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4179,"mutability":"mutable","name":"value","nameLocation":"22635:5:12","nodeType":"VariableDeclaration","scope":4202,"src":"22628:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4178,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:12"},"returnParameters":{"id":4183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4182,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:12","nodeType":"VariableDeclaration","scope":4202,"src":"22665:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":4181,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:12","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:12"},"scope":4789,"src":"22610:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4227,"nodeType":"Block","src":"23231:150:12","statements":[{"expression":{"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4210,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"23241:10:12","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"23261:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":4211,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:12","typeDescriptions":{}}},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:12","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":4216,"nodeType":"ExpressionStatement","src":"23241:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4217,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"23281:10:12","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"23295:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4226,"nodeType":"IfStatement","src":"23277:98:12","trueBody":{"id":4225,"nodeType":"Block","src":"23302:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:12","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"23358:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4220,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"23323:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4224,"nodeType":"RevertStatement","src":"23316:48:12"}]}}]},"documentation":{"id":4203,"nodeType":"StructuredDocumentation","src":"22840:312:12","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4228,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:12","nodeType":"FunctionDefinition","parameters":{"id":4206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4205,"mutability":"mutable","name":"value","nameLocation":"23182:5:12","nodeType":"VariableDeclaration","scope":4228,"src":"23175:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4204,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:12"},"returnParameters":{"id":4209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4208,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:12","nodeType":"VariableDeclaration","scope":4228,"src":"23212:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":4207,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:12","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:12"},"scope":4789,"src":"23157:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4253,"nodeType":"Block","src":"23778:150:12","statements":[{"expression":{"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4236,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"23788:10:12","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"23808:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":4237,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:12","typeDescriptions":{}}},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:12","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":4242,"nodeType":"ExpressionStatement","src":"23788:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4243,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"23828:10:12","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"23842:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4252,"nodeType":"IfStatement","src":"23824:98:12","trueBody":{"id":4251,"nodeType":"Block","src":"23849:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:12","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"23905:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4246,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"23870:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4250,"nodeType":"RevertStatement","src":"23863:48:12"}]}}]},"documentation":{"id":4229,"nodeType":"StructuredDocumentation","src":"23387:312:12","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4254,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:12","nodeType":"FunctionDefinition","parameters":{"id":4232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4231,"mutability":"mutable","name":"value","nameLocation":"23729:5:12","nodeType":"VariableDeclaration","scope":4254,"src":"23722:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4230,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:12"},"returnParameters":{"id":4235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4234,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:12","nodeType":"VariableDeclaration","scope":4254,"src":"23759:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":4233,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:12","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:12"},"scope":4789,"src":"23704:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4279,"nodeType":"Block","src":"24325:150:12","statements":[{"expression":{"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4262,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"24335:10:12","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"24355:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":4263,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:12","typeDescriptions":{}}},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:12","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":4268,"nodeType":"ExpressionStatement","src":"24335:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4269,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"24375:10:12","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"24389:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4278,"nodeType":"IfStatement","src":"24371:98:12","trueBody":{"id":4277,"nodeType":"Block","src":"24396:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:12","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"24452:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4272,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"24417:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4276,"nodeType":"RevertStatement","src":"24410:48:12"}]}}]},"documentation":{"id":4255,"nodeType":"StructuredDocumentation","src":"23934:312:12","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4280,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:12","nodeType":"FunctionDefinition","parameters":{"id":4258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4257,"mutability":"mutable","name":"value","nameLocation":"24276:5:12","nodeType":"VariableDeclaration","scope":4280,"src":"24269:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4256,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:12"},"returnParameters":{"id":4261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4260,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:12","nodeType":"VariableDeclaration","scope":4280,"src":"24306:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":4259,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:12","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:12"},"scope":4789,"src":"24251:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4305,"nodeType":"Block","src":"24872:150:12","statements":[{"expression":{"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4288,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"24882:10:12","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"24902:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":4289,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:12","typeDescriptions":{}}},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:12","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":4294,"nodeType":"ExpressionStatement","src":"24882:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4295,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"24922:10:12","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"24936:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4304,"nodeType":"IfStatement","src":"24918:98:12","trueBody":{"id":4303,"nodeType":"Block","src":"24943:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:12","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"24999:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4298,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"24964:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4302,"nodeType":"RevertStatement","src":"24957:48:12"}]}}]},"documentation":{"id":4281,"nodeType":"StructuredDocumentation","src":"24481:312:12","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4306,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:12","nodeType":"FunctionDefinition","parameters":{"id":4284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4283,"mutability":"mutable","name":"value","nameLocation":"24823:5:12","nodeType":"VariableDeclaration","scope":4306,"src":"24816:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4282,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:12"},"returnParameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4286,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:12","nodeType":"VariableDeclaration","scope":4306,"src":"24853:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":4285,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:12","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:12"},"scope":4789,"src":"24798:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4331,"nodeType":"Block","src":"25419:150:12","statements":[{"expression":{"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4314,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"25429:10:12","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"25449:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":4315,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:12","typeDescriptions":{}}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:12","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":4320,"nodeType":"ExpressionStatement","src":"25429:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4321,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"25469:10:12","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"25483:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4330,"nodeType":"IfStatement","src":"25465:98:12","trueBody":{"id":4329,"nodeType":"Block","src":"25490:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:12","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"25546:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4324,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"25511:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4328,"nodeType":"RevertStatement","src":"25504:48:12"}]}}]},"documentation":{"id":4307,"nodeType":"StructuredDocumentation","src":"25028:312:12","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4332,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:12","nodeType":"FunctionDefinition","parameters":{"id":4310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4309,"mutability":"mutable","name":"value","nameLocation":"25370:5:12","nodeType":"VariableDeclaration","scope":4332,"src":"25363:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4308,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:12"},"returnParameters":{"id":4313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4312,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:12","nodeType":"VariableDeclaration","scope":4332,"src":"25400:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":4311,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:12","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:12"},"scope":4789,"src":"25345:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4357,"nodeType":"Block","src":"25966:150:12","statements":[{"expression":{"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4340,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"25976:10:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"25996:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":4341,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:12","typeDescriptions":{}}},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":4346,"nodeType":"ExpressionStatement","src":"25976:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4347,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"26016:10:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"26030:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4356,"nodeType":"IfStatement","src":"26012:98:12","trueBody":{"id":4355,"nodeType":"Block","src":"26037:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"26093:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4350,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"26058:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4354,"nodeType":"RevertStatement","src":"26051:48:12"}]}}]},"documentation":{"id":4333,"nodeType":"StructuredDocumentation","src":"25575:312:12","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4358,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:12","nodeType":"FunctionDefinition","parameters":{"id":4336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4335,"mutability":"mutable","name":"value","nameLocation":"25917:5:12","nodeType":"VariableDeclaration","scope":4358,"src":"25910:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4334,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:12"},"returnParameters":{"id":4339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4338,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:12","nodeType":"VariableDeclaration","scope":4358,"src":"25947:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":4337,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:12"},"scope":4789,"src":"25892:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4383,"nodeType":"Block","src":"26513:150:12","statements":[{"expression":{"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4366,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"26523:10:12","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"26543:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":4367,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:12","typeDescriptions":{}}},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:12","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":4372,"nodeType":"ExpressionStatement","src":"26523:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4373,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"26563:10:12","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"26577:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4382,"nodeType":"IfStatement","src":"26559:98:12","trueBody":{"id":4381,"nodeType":"Block","src":"26584:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:12","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"26640:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4376,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"26605:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4380,"nodeType":"RevertStatement","src":"26598:48:12"}]}}]},"documentation":{"id":4359,"nodeType":"StructuredDocumentation","src":"26122:312:12","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4384,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:12","nodeType":"FunctionDefinition","parameters":{"id":4362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4361,"mutability":"mutable","name":"value","nameLocation":"26464:5:12","nodeType":"VariableDeclaration","scope":4384,"src":"26457:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4360,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:12"},"returnParameters":{"id":4365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4364,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:12","nodeType":"VariableDeclaration","scope":4384,"src":"26494:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":4363,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:12","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:12"},"scope":4789,"src":"26439:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4409,"nodeType":"Block","src":"27060:150:12","statements":[{"expression":{"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4392,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"27070:10:12","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"27090:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":4393,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:12","typeDescriptions":{}}},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:12","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":4398,"nodeType":"ExpressionStatement","src":"27070:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4399,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"27110:10:12","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"27124:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4408,"nodeType":"IfStatement","src":"27106:98:12","trueBody":{"id":4407,"nodeType":"Block","src":"27131:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:12","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"27187:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4402,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"27152:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4406,"nodeType":"RevertStatement","src":"27145:48:12"}]}}]},"documentation":{"id":4385,"nodeType":"StructuredDocumentation","src":"26669:312:12","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4410,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:12","nodeType":"FunctionDefinition","parameters":{"id":4388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4387,"mutability":"mutable","name":"value","nameLocation":"27011:5:12","nodeType":"VariableDeclaration","scope":4410,"src":"27004:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4386,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:12"},"returnParameters":{"id":4391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4390,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:12","nodeType":"VariableDeclaration","scope":4410,"src":"27041:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":4389,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:12","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:12"},"scope":4789,"src":"26986:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4435,"nodeType":"Block","src":"27607:150:12","statements":[{"expression":{"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4418,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"27617:10:12","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"27637:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":4419,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:12","typeDescriptions":{}}},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:12","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":4424,"nodeType":"ExpressionStatement","src":"27617:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4425,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"27657:10:12","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"27671:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4434,"nodeType":"IfStatement","src":"27653:98:12","trueBody":{"id":4433,"nodeType":"Block","src":"27678:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:12","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"27734:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4428,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"27699:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4432,"nodeType":"RevertStatement","src":"27692:48:12"}]}}]},"documentation":{"id":4411,"nodeType":"StructuredDocumentation","src":"27216:312:12","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4436,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:12","nodeType":"FunctionDefinition","parameters":{"id":4414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4413,"mutability":"mutable","name":"value","nameLocation":"27558:5:12","nodeType":"VariableDeclaration","scope":4436,"src":"27551:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4412,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:12"},"returnParameters":{"id":4417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4416,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:12","nodeType":"VariableDeclaration","scope":4436,"src":"27588:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":4415,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:12","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:12"},"scope":4789,"src":"27533:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4461,"nodeType":"Block","src":"28147:148:12","statements":[{"expression":{"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4444,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"28157:10:12","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"28176:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":4445,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:12","typeDescriptions":{}}},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:12","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":4450,"nodeType":"ExpressionStatement","src":"28157:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4451,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"28196:10:12","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"28210:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4460,"nodeType":"IfStatement","src":"28192:97:12","trueBody":{"id":4459,"nodeType":"Block","src":"28217:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:12","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"28272:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4454,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"28238:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4458,"nodeType":"RevertStatement","src":"28231:47:12"}]}}]},"documentation":{"id":4437,"nodeType":"StructuredDocumentation","src":"27763:307:12","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4462,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:12","nodeType":"FunctionDefinition","parameters":{"id":4440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4439,"mutability":"mutable","name":"value","nameLocation":"28099:5:12","nodeType":"VariableDeclaration","scope":4462,"src":"28092:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4438,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:12"},"returnParameters":{"id":4443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4442,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:12","nodeType":"VariableDeclaration","scope":4462,"src":"28129:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":4441,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:12","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:12"},"scope":4789,"src":"28075:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4487,"nodeType":"Block","src":"28685:148:12","statements":[{"expression":{"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4470,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4468,"src":"28695:10:12","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"28714:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":4471,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:12","typeDescriptions":{}}},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:12","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":4476,"nodeType":"ExpressionStatement","src":"28695:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4477,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4468,"src":"28734:10:12","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"28748:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4486,"nodeType":"IfStatement","src":"28730:97:12","trueBody":{"id":4485,"nodeType":"Block","src":"28755:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:12","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"28810:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4480,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"28776:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4484,"nodeType":"RevertStatement","src":"28769:47:12"}]}}]},"documentation":{"id":4463,"nodeType":"StructuredDocumentation","src":"28301:307:12","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4488,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:12","nodeType":"FunctionDefinition","parameters":{"id":4466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4465,"mutability":"mutable","name":"value","nameLocation":"28637:5:12","nodeType":"VariableDeclaration","scope":4488,"src":"28630:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4464,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:12"},"returnParameters":{"id":4469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4468,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:12","nodeType":"VariableDeclaration","scope":4488,"src":"28667:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":4467,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:12","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:12"},"scope":4789,"src":"28613:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4513,"nodeType":"Block","src":"29223:148:12","statements":[{"expression":{"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4496,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"29233:10:12","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"29252:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":4497,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:12","typeDescriptions":{}}},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:12","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":4502,"nodeType":"ExpressionStatement","src":"29233:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4503,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"29272:10:12","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"29286:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4512,"nodeType":"IfStatement","src":"29268:97:12","trueBody":{"id":4511,"nodeType":"Block","src":"29293:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:12","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"29348:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4506,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"29314:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4510,"nodeType":"RevertStatement","src":"29307:47:12"}]}}]},"documentation":{"id":4489,"nodeType":"StructuredDocumentation","src":"28839:307:12","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4514,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:12","nodeType":"FunctionDefinition","parameters":{"id":4492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4491,"mutability":"mutable","name":"value","nameLocation":"29175:5:12","nodeType":"VariableDeclaration","scope":4514,"src":"29168:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4490,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:12"},"returnParameters":{"id":4495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4494,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:12","nodeType":"VariableDeclaration","scope":4514,"src":"29205:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":4493,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:12","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:12"},"scope":4789,"src":"29151:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4539,"nodeType":"Block","src":"29761:148:12","statements":[{"expression":{"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4522,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"29771:10:12","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"29790:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":4523,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:12","typeDescriptions":{}}},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:12","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":4528,"nodeType":"ExpressionStatement","src":"29771:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4529,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"29810:10:12","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"29824:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4538,"nodeType":"IfStatement","src":"29806:97:12","trueBody":{"id":4537,"nodeType":"Block","src":"29831:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:12","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"29886:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4532,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"29852:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4536,"nodeType":"RevertStatement","src":"29845:47:12"}]}}]},"documentation":{"id":4515,"nodeType":"StructuredDocumentation","src":"29377:307:12","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4540,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:12","nodeType":"FunctionDefinition","parameters":{"id":4518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4517,"mutability":"mutable","name":"value","nameLocation":"29713:5:12","nodeType":"VariableDeclaration","scope":4540,"src":"29706:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4516,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:12"},"returnParameters":{"id":4521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4520,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:12","nodeType":"VariableDeclaration","scope":4540,"src":"29743:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":4519,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:12","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:12"},"scope":4789,"src":"29689:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4565,"nodeType":"Block","src":"30299:148:12","statements":[{"expression":{"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4548,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"30309:10:12","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"30328:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":4549,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:12","typeDescriptions":{}}},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:12","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":4554,"nodeType":"ExpressionStatement","src":"30309:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4555,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"30348:10:12","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"30362:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4564,"nodeType":"IfStatement","src":"30344:97:12","trueBody":{"id":4563,"nodeType":"Block","src":"30369:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"30424:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4558,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"30390:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4562,"nodeType":"RevertStatement","src":"30383:47:12"}]}}]},"documentation":{"id":4541,"nodeType":"StructuredDocumentation","src":"29915:307:12","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4566,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:12","nodeType":"FunctionDefinition","parameters":{"id":4544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4543,"mutability":"mutable","name":"value","nameLocation":"30251:5:12","nodeType":"VariableDeclaration","scope":4566,"src":"30244:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4542,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:12"},"returnParameters":{"id":4547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4546,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:12","nodeType":"VariableDeclaration","scope":4566,"src":"30281:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4545,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:12","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:12"},"scope":4789,"src":"30227:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4591,"nodeType":"Block","src":"30837:148:12","statements":[{"expression":{"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4574,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"30847:10:12","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4569,"src":"30866:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":4575,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:12","typeDescriptions":{}}},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:12","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":4580,"nodeType":"ExpressionStatement","src":"30847:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4581,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"30886:10:12","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4569,"src":"30900:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4590,"nodeType":"IfStatement","src":"30882:97:12","trueBody":{"id":4589,"nodeType":"Block","src":"30907:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:12","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4569,"src":"30962:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4584,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"30928:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4588,"nodeType":"RevertStatement","src":"30921:47:12"}]}}]},"documentation":{"id":4567,"nodeType":"StructuredDocumentation","src":"30453:307:12","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4592,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:12","nodeType":"FunctionDefinition","parameters":{"id":4570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4569,"mutability":"mutable","name":"value","nameLocation":"30789:5:12","nodeType":"VariableDeclaration","scope":4592,"src":"30782:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4568,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:12"},"returnParameters":{"id":4573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4572,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:12","nodeType":"VariableDeclaration","scope":4592,"src":"30819:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":4571,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:12","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:12"},"scope":4789,"src":"30765:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4617,"nodeType":"Block","src":"31375:148:12","statements":[{"expression":{"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4600,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"31385:10:12","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"31404:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":4601,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:12","typeDescriptions":{}}},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:12","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":4606,"nodeType":"ExpressionStatement","src":"31385:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4607,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"31424:10:12","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"31438:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4616,"nodeType":"IfStatement","src":"31420:97:12","trueBody":{"id":4615,"nodeType":"Block","src":"31445:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:12","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"31500:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4610,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"31466:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4614,"nodeType":"RevertStatement","src":"31459:47:12"}]}}]},"documentation":{"id":4593,"nodeType":"StructuredDocumentation","src":"30991:307:12","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4618,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:12","nodeType":"FunctionDefinition","parameters":{"id":4596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4595,"mutability":"mutable","name":"value","nameLocation":"31327:5:12","nodeType":"VariableDeclaration","scope":4618,"src":"31320:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4594,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:12"},"returnParameters":{"id":4599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4598,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:12","nodeType":"VariableDeclaration","scope":4618,"src":"31357:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":4597,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:12","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:12"},"scope":4789,"src":"31303:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4643,"nodeType":"Block","src":"31913:148:12","statements":[{"expression":{"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4626,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"31923:10:12","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"31942:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":4627,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:12","typeDescriptions":{}}},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:12","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":4632,"nodeType":"ExpressionStatement","src":"31923:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4633,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"31962:10:12","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"31976:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4642,"nodeType":"IfStatement","src":"31958:97:12","trueBody":{"id":4641,"nodeType":"Block","src":"31983:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:12","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"32038:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4636,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"32004:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4640,"nodeType":"RevertStatement","src":"31997:47:12"}]}}]},"documentation":{"id":4619,"nodeType":"StructuredDocumentation","src":"31529:307:12","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4644,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:12","nodeType":"FunctionDefinition","parameters":{"id":4622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4621,"mutability":"mutable","name":"value","nameLocation":"31865:5:12","nodeType":"VariableDeclaration","scope":4644,"src":"31858:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4620,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:12"},"returnParameters":{"id":4625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4624,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:12","nodeType":"VariableDeclaration","scope":4644,"src":"31895:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":4623,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:12","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:12"},"scope":4789,"src":"31841:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4669,"nodeType":"Block","src":"32451:148:12","statements":[{"expression":{"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4652,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"32461:10:12","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"32480:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4653,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:12","typeDescriptions":{}}},"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:12","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4658,"nodeType":"ExpressionStatement","src":"32461:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4659,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"32500:10:12","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"32514:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4668,"nodeType":"IfStatement","src":"32496:97:12","trueBody":{"id":4667,"nodeType":"Block","src":"32521:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"32576:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4662,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"32542:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4666,"nodeType":"RevertStatement","src":"32535:47:12"}]}}]},"documentation":{"id":4645,"nodeType":"StructuredDocumentation","src":"32067:307:12","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4670,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:12","nodeType":"FunctionDefinition","parameters":{"id":4648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4647,"mutability":"mutable","name":"value","nameLocation":"32403:5:12","nodeType":"VariableDeclaration","scope":4670,"src":"32396:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4646,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:12"},"returnParameters":{"id":4651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4650,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:12","nodeType":"VariableDeclaration","scope":4670,"src":"32433:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":4649,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:12","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:12"},"scope":4789,"src":"32379:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4695,"nodeType":"Block","src":"32989:148:12","statements":[{"expression":{"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4678,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"32999:10:12","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"33018:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":4679,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:12","typeDescriptions":{}}},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:12","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":4684,"nodeType":"ExpressionStatement","src":"32999:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4685,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"33038:10:12","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"33052:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4694,"nodeType":"IfStatement","src":"33034:97:12","trueBody":{"id":4693,"nodeType":"Block","src":"33059:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:12","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"33114:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4688,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"33080:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4692,"nodeType":"RevertStatement","src":"33073:47:12"}]}}]},"documentation":{"id":4671,"nodeType":"StructuredDocumentation","src":"32605:307:12","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4696,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:12","nodeType":"FunctionDefinition","parameters":{"id":4674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4673,"mutability":"mutable","name":"value","nameLocation":"32941:5:12","nodeType":"VariableDeclaration","scope":4696,"src":"32934:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4672,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:12"},"returnParameters":{"id":4677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4676,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:12","nodeType":"VariableDeclaration","scope":4696,"src":"32971:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4675,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:12","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:12"},"scope":4789,"src":"32917:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4721,"nodeType":"Block","src":"33527:148:12","statements":[{"expression":{"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4704,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"33537:10:12","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"33556:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":4705,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:12","typeDescriptions":{}}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:12","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":4710,"nodeType":"ExpressionStatement","src":"33537:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4711,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"33576:10:12","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"33590:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4720,"nodeType":"IfStatement","src":"33572:97:12","trueBody":{"id":4719,"nodeType":"Block","src":"33597:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"33652:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4714,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"33618:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4718,"nodeType":"RevertStatement","src":"33611:47:12"}]}}]},"documentation":{"id":4697,"nodeType":"StructuredDocumentation","src":"33143:307:12","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4722,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:12","nodeType":"FunctionDefinition","parameters":{"id":4700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4699,"mutability":"mutable","name":"value","nameLocation":"33479:5:12","nodeType":"VariableDeclaration","scope":4722,"src":"33472:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4698,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:12"},"returnParameters":{"id":4703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4702,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:12","nodeType":"VariableDeclaration","scope":4722,"src":"33509:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":4701,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:12","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:12"},"scope":4789,"src":"33455:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4747,"nodeType":"Block","src":"34058:146:12","statements":[{"expression":{"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4730,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"34068:10:12","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"34086:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":4731,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:12","typeDescriptions":{}}},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:12","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":4736,"nodeType":"ExpressionStatement","src":"34068:24:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4737,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"34106:10:12","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"34120:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4746,"nodeType":"IfStatement","src":"34102:96:12","trueBody":{"id":4745,"nodeType":"Block","src":"34127:71:12","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"34181:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4740,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"34148:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4744,"nodeType":"RevertStatement","src":"34141:46:12"}]}}]},"documentation":{"id":4723,"nodeType":"StructuredDocumentation","src":"33681:302:12","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4748,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:12","nodeType":"FunctionDefinition","parameters":{"id":4726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4725,"mutability":"mutable","name":"value","nameLocation":"34011:5:12","nodeType":"VariableDeclaration","scope":4748,"src":"34004:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4724,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:12"},"returnParameters":{"id":4729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4728,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:12","nodeType":"VariableDeclaration","scope":4748,"src":"34041:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":4727,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:12","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:12"},"scope":4789,"src":"33988:216:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4777,"nodeType":"Block","src":"34444:250:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"34557:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":4761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4760,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4759,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:12","memberName":"max","nodeType":"MemberAccess","src":"34573:16:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4757,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:12","typeDescriptions":{}}},"id":4764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4771,"nodeType":"IfStatement","src":"34553:105:12","trueBody":{"id":4770,"nodeType":"Block","src":"34592:66:12","statements":[{"errorCall":{"arguments":[{"id":4767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"34641:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4766,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"34613:27:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4769,"nodeType":"RevertStatement","src":"34606:41:12"}]}},{"expression":{"arguments":[{"id":4774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"34681:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4772,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:12","typeDescriptions":{}}},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4755,"id":4776,"nodeType":"Return","src":"34667:20:12"}]},"documentation":{"id":4749,"nodeType":"StructuredDocumentation","src":"34210:165:12","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":4778,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:12","nodeType":"FunctionDefinition","parameters":{"id":4752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4751,"mutability":"mutable","name":"value","nameLocation":"34406:5:12","nodeType":"VariableDeclaration","scope":4778,"src":"34398:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4750,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:12"},"returnParameters":{"id":4755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4778,"src":"34436:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4753,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:12"},"scope":4789,"src":"34380:314:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4787,"nodeType":"Block","src":"34853:87:12","statements":[{"AST":{"nativeSrc":"34888:46:12","nodeType":"YulBlock","src":"34888:46:12","statements":[{"nativeSrc":"34902:22:12","nodeType":"YulAssignment","src":"34902:22:12","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:12","nodeType":"YulIdentifier","src":"34921:1:12"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:12","nodeType":"YulIdentifier","src":"34914:6:12"},"nativeSrc":"34914:9:12","nodeType":"YulFunctionCall","src":"34914:9:12"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:12","nodeType":"YulIdentifier","src":"34907:6:12"},"nativeSrc":"34907:17:12","nodeType":"YulFunctionCall","src":"34907:17:12"},"variableNames":[{"name":"u","nativeSrc":"34902:1:12","nodeType":"YulIdentifier","src":"34902:1:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4781,"isOffset":false,"isSlot":false,"src":"34921:1:12","valueSize":1},{"declaration":4784,"isOffset":false,"isSlot":false,"src":"34902:1:12","valueSize":1}],"flags":["memory-safe"],"id":4786,"nodeType":"InlineAssembly","src":"34863:71:12"}]},"documentation":{"id":4779,"nodeType":"StructuredDocumentation","src":"34700:90:12","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":4788,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:12","nodeType":"FunctionDefinition","parameters":{"id":4782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4781,"mutability":"mutable","name":"b","nameLocation":"34816:1:12","nodeType":"VariableDeclaration","scope":4788,"src":"34811:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4780,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:12"},"returnParameters":{"id":4785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4784,"mutability":"mutable","name":"u","nameLocation":"34850:1:12","nodeType":"VariableDeclaration","scope":4788,"src":"34842:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4783,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:12"},"scope":4789,"src":"34795:145:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4790,"src":"769:34173:12","usedErrors":[3034,3039,3046,3051],"usedEvents":[]}],"src":"192:34751:12"},"id":12},"contracts/MockERC20.sol":{"ast":{"absolutePath":"contracts/MockERC20.sol","exportedSymbols":{"Context":[1339],"ERC20":[741],"IERC20":[819],"IERC20Errors":[131],"IERC20Metadata":[845],"MockERC20":[4815]},"id":4816,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4791,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":4792,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4816,"sourceUnit":742,"src":"57:55:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4793,"name":"ERC20","nameLocations":["136:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":741,"src":"136:5:13"},"id":4794,"nodeType":"InheritanceSpecifier","src":"136:5:13"}],"canonicalName":"MockERC20","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4815,"linearizedBaseContracts":[4815,741,131,845,819,1339],"name":"MockERC20","nameLocation":"123:9:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":4813,"nodeType":"Block","src":"245:49:13","statements":[{"expression":{"arguments":[{"expression":{"id":4808,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"261:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"265:6:13","memberName":"sender","nodeType":"MemberAccess","src":"261:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4810,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"273:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4807,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"255:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"255:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4812,"nodeType":"ExpressionStatement","src":"255:32:13"}]},"id":4814,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4803,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"231:4:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4804,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"237:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":4805,"kind":"baseConstructorSpecifier","modifierName":{"id":4802,"name":"ERC20","nameLocations":["225:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":741,"src":"225:5:13"},"nodeType":"ModifierInvocation","src":"225:19:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4796,"mutability":"mutable","name":"name","nameLocation":"174:4:13","nodeType":"VariableDeclaration","scope":4814,"src":"160:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4795,"name":"string","nodeType":"ElementaryTypeName","src":"160:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4798,"mutability":"mutable","name":"symbol","nameLocation":"194:6:13","nodeType":"VariableDeclaration","scope":4814,"src":"180:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4797,"name":"string","nodeType":"ElementaryTypeName","src":"180:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4800,"mutability":"mutable","name":"initialSupply","nameLocation":"210:13:13","nodeType":"VariableDeclaration","scope":4814,"src":"202:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4799,"name":"uint256","nodeType":"ElementaryTypeName","src":"202:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"159:65:13"},"returnParameters":{"id":4806,"nodeType":"ParameterList","parameters":[],"src":"245:0:13"},"scope":4815,"src":"148:146:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":4816,"src":"114:182:13","usedErrors":[101,106,111,120,125,130],"usedEvents":[753,762]}],"src":"32:265:13"},"id":13},"contracts/SimpleSwap.sol":{"ast":{"absolutePath":"contracts/SimpleSwap.sol","exportedSymbols":{"Context":[1339],"ERC20":[741],"IERC1363":[81],"IERC20":[819],"IERC20Errors":[131],"IERC20Metadata":[845],"Math":[3024],"Panic":[1391],"SafeCast":[4789],"SafeERC20":[1309],"SimpleSwap":[5490]},"id":5491,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4817,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4818,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5491,"sourceUnit":820,"src":"57:56:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":4819,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5491,"sourceUnit":742,"src":"114:55:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":4820,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5491,"sourceUnit":1310,"src":"170:65:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":4821,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5491,"sourceUnit":3025,"src":"236:53:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4823,"name":"ERC20","nameLocations":["427:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":741,"src":"427:5:14"},"id":4824,"nodeType":"InheritanceSpecifier","src":"427:5:14"}],"canonicalName":"SimpleSwap","contractDependencies":[],"contractKind":"contract","documentation":{"id":4822,"nodeType":"StructuredDocumentation","src":"291:113:14","text":"@title SimpleSwap\n @dev Inherits ERC20 to represent LP tokens. Tokens are set at first addLiquidity call."},"fullyImplemented":true,"id":5490,"linearizedBaseContracts":[5490,741,131,845,819,1339],"name":"SimpleSwap","nameLocation":"413:10:14","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4828,"libraryName":{"id":4825,"name":"SafeERC20","nameLocations":["445:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":1309,"src":"445:9:14"},"nodeType":"UsingForDirective","src":"439:27:14","typeName":{"id":4827,"nodeType":"UserDefinedTypeName","pathNode":{"id":4826,"name":"IERC20","nameLocations":["459:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"459:6:14"},"referencedDeclaration":819,"src":"459:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}}},{"constant":false,"documentation":{"id":4829,"nodeType":"StructuredDocumentation","src":"472:61:14","text":"@notice Token A address (set at first liquidity addition)"},"functionSelector":"50430ce4","id":4831,"mutability":"mutable","name":"tokenAAddres","nameLocation":"553:12:14","nodeType":"VariableDeclaration","scope":5490,"src":"538:27:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4830,"name":"address","nodeType":"ElementaryTypeName","src":"538:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":4832,"nodeType":"StructuredDocumentation","src":"571:61:14","text":"@notice Token B address (set at first liquidity addition)"},"functionSelector":"eed86c96","id":4834,"mutability":"mutable","name":"tokenBAddres","nameLocation":"652:12:14","nodeType":"VariableDeclaration","scope":5490,"src":"637:27:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4833,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":4835,"nodeType":"StructuredDocumentation","src":"671:38:14","text":"@notice Current reserve of token A"},"functionSelector":"dc5fa6c5","id":4837,"mutability":"mutable","name":"reserveA","nameLocation":"729:8:14","nodeType":"VariableDeclaration","scope":5490,"src":"714:23:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4836,"name":"uint256","nodeType":"ElementaryTypeName","src":"714:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":4838,"nodeType":"StructuredDocumentation","src":"743:38:14","text":"@notice Current reserve of token B"},"functionSelector":"19e36f3b","id":4840,"mutability":"mutable","name":"reserveB","nameLocation":"801:8:14","nodeType":"VariableDeclaration","scope":5490,"src":"786:23:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4839,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":4848,"nodeType":"Block","src":"910:2:14","statements":[]},"documentation":{"id":4841,"nodeType":"StructuredDocumentation","src":"816:50:14","text":"@dev Initializes LP token with name and symbol"},"id":4849,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4c4951554944495459","id":4844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"891:11:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_86cf169ddb9f19bc57304a958748511e956d0b9255fb5895294f9c4ae5b00d58","typeString":"literal_string \"LIQUIDITY\""},"value":"LIQUIDITY"},{"hexValue":"4c50","id":4845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"904:4:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9c21acbd49d77f161dc74d87db3b4adb975d116ec37505d4dd76e89d2844ede3","typeString":"literal_string \"LP\""},"value":"LP"}],"id":4846,"kind":"baseConstructorSpecifier","modifierName":{"id":4843,"name":"ERC20","nameLocations":["885:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":741,"src":"885:5:14"},"nodeType":"ModifierInvocation","src":"885:24:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4842,"nodeType":"ParameterList","parameters":[],"src":"882:2:14"},"returnParameters":{"id":4847,"nodeType":"ParameterList","parameters":[],"src":"910:0:14"},"scope":5490,"src":"871:41:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5080,"nodeType":"Block","src":"1922:1639:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4876,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1940:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1946:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"1940:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4878,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"1959:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1940:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45787069726564","id":4880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1969:9:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13","typeString":"literal_string \"Expired\""},"value":"Expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13","typeString":"literal_string \"Expired\""}],"id":4875,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1932:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4882,"nodeType":"ExpressionStatement","src":"1932:47:14"},{"assignments":[4884],"declarations":[{"constant":false,"id":4884,"mutability":"mutable","name":"_tokenAAddres","nameLocation":"1998:13:14","nodeType":"VariableDeclaration","scope":5080,"src":"1990:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4883,"name":"address","nodeType":"ElementaryTypeName","src":"1990:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4886,"initialValue":{"id":4885,"name":"tokenAAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"2014:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1990:36:14"},{"assignments":[4888],"declarations":[{"constant":false,"id":4888,"mutability":"mutable","name":"_tokenBAddres","nameLocation":"2044:13:14","nodeType":"VariableDeclaration","scope":5080,"src":"2036:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4887,"name":"address","nodeType":"ElementaryTypeName","src":"2036:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4890,"initialValue":{"id":4889,"name":"tokenBAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"2060:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2036:36:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4891,"name":"_tokenAAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"2087:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2112:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2104:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4892,"name":"address","nodeType":"ElementaryTypeName","src":"2104:7:14","typeDescriptions":{}}},"id":4895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2104:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2087:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4897,"name":"_tokenBAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"2118:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2143:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4898,"name":"address","nodeType":"ElementaryTypeName","src":"2135:7:14","typeDescriptions":{}}},"id":4901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2118:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2087:58:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4949,"nodeType":"Block","src":"2367:226:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4929,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"2407:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4930,"name":"_tokenAAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"2417:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2407:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4932,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"2434:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4933,"name":"_tokenBAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"2444:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2434:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2407:50:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4936,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2406:52:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4937,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"2479:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4938,"name":"_tokenBAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"2489:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2479:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4940,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"2506:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4941,"name":"_tokenAAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"2516:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2506:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2479:50:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2478:52:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2406:124:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e2070616972","id":4946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2548:20:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a0f3a6fe4f2b4139e5c19fc0123996c3c606f417a7c4425be97431d9fd20ea0","typeString":"literal_string \"Invalid token pair\""},"value":"Invalid token pair"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a0f3a6fe4f2b4139e5c19fc0123996c3c606f417a7c4425be97431d9fd20ea0","typeString":"literal_string \"Invalid token pair\""}],"id":4928,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2381:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2381:201:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4948,"nodeType":"ExpressionStatement","src":"2381:201:14"}]},"id":4950,"nodeType":"IfStatement","src":"2083:510:14","trueBody":{"id":4927,"nodeType":"Block","src":"2147:214:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4905,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"2169:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4906,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"2179:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e73206d75737420646966666572","id":4908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2187:20:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_aec8de1944c8062853ad7bacb3b254b77bce1c5962bbfbeea01dd017ed24051b","typeString":"literal_string \"Tokens must differ\""},"value":"Tokens must differ"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aec8de1944c8062853ad7bacb3b254b77bce1c5962bbfbeea01dd017ed24051b","typeString":"literal_string \"Tokens must differ\""}],"id":4904,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2161:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4910,"nodeType":"ExpressionStatement","src":"2161:47:14"},{"expression":{"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4911,"name":"tokenAAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"2222:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4912,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"2237:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2222:21:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4914,"nodeType":"ExpressionStatement","src":"2222:21:14"},{"expression":{"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4915,"name":"tokenBAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"2257:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4916,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"2272:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2257:21:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4918,"nodeType":"ExpressionStatement","src":"2257:21:14"},{"expression":{"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4919,"name":"_tokenAAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"2292:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4920,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"2308:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2292:22:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4922,"nodeType":"ExpressionStatement","src":"2292:22:14"},{"expression":{"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4923,"name":"_tokenBAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"2328:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4924,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"2344:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2328:22:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4926,"nodeType":"ExpressionStatement","src":"2328:22:14"}]}},{"assignments":[4952],"declarations":[{"constant":false,"id":4952,"mutability":"mutable","name":"_reserveA","nameLocation":"2611:9:14","nodeType":"VariableDeclaration","scope":5080,"src":"2603:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4951,"name":"uint256","nodeType":"ElementaryTypeName","src":"2603:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4954,"initialValue":{"id":4953,"name":"reserveA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"2623:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2603:28:14"},{"assignments":[4956],"declarations":[{"constant":false,"id":4956,"mutability":"mutable","name":"_reserveB","nameLocation":"2649:9:14","nodeType":"VariableDeclaration","scope":5080,"src":"2641:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4955,"name":"uint256","nodeType":"ElementaryTypeName","src":"2641:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4958,"initialValue":{"id":4957,"name":"reserveB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"2661:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2641:28:14"},{"assignments":[4960],"declarations":[{"constant":false,"id":4960,"mutability":"mutable","name":"_totalSupply","nameLocation":"2687:12:14","nodeType":"VariableDeclaration","scope":5080,"src":"2679:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4959,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4963,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4961,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"2702:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2679:36:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4964,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"2730:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2746:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2730:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5014,"nodeType":"Block","src":"2896:230:14","statements":[{"expression":{"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4985,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"2910:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4986,"name":"amountADesired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"2920:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4988,"nodeType":"ExpressionStatement","src":"2910:24:14"},{"expression":{"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4989,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"2948:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4990,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"2959:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4991,"name":"_reserveB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"2969:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2959:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2958:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4994,"name":"_reserveA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"2982:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2958:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2948:43:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4997,"nodeType":"ExpressionStatement","src":"2948:43:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4999,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"3013:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5000,"name":"amountBDesired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"3024:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3013:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6f206d7563682042","id":5002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3040:12:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_26f0a2045ce22408683f49e1a133e0a75f723f441317abcc52f73491714cf56c","typeString":"literal_string \"Too much B\""},"value":"Too much B"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26f0a2045ce22408683f49e1a133e0a75f723f441317abcc52f73491714cf56c","typeString":"literal_string \"Too much B\""}],"id":4998,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3005:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3005:48:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5004,"nodeType":"ExpressionStatement","src":"3005:48:14"},{"expression":{"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5005,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"3067:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5006,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"3080:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5007,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"3090:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3080:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5009,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3079:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5010,"name":"_reserveA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"3106:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3079:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3067:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5013,"nodeType":"ExpressionStatement","src":"3067:48:14"}]},"id":5015,"nodeType":"IfStatement","src":"2726:400:14","trueBody":{"id":4984,"nodeType":"Block","src":"2749:141:14","statements":[{"expression":{"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4967,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"2763:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4968,"name":"amountADesired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"2773:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2763:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4970,"nodeType":"ExpressionStatement","src":"2763:24:14"},{"expression":{"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4971,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"2801:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4972,"name":"amountBDesired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"2811:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2801:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4974,"nodeType":"ExpressionStatement","src":"2801:24:14"},{"expression":{"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4975,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"2839:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4978,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"2861:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4979,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"2871:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2861:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4976,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"2851:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3024_$","typeString":"type(library Math)"}},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2856:4:14","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":2568,"src":"2851:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2851:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:40:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4983,"nodeType":"ExpressionStatement","src":"2839:40:14"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5017,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"3144:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5018,"name":"amountAMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"3155:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3144:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c6f772041","id":5020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3167:7:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_69902dfe75c7b10b3f4c7f15ab3035e10d37d1252e7958f42e3561a4fdcf702e","typeString":"literal_string \"Low A\""},"value":"Low A"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_69902dfe75c7b10b3f4c7f15ab3035e10d37d1252e7958f42e3561a4fdcf702e","typeString":"literal_string \"Low A\""}],"id":5016,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3136:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3136:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5022,"nodeType":"ExpressionStatement","src":"3136:39:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5024,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"3193:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5025,"name":"amountBMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"3204:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3193:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c6f772042","id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3216:7:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b4680a6e5dbafb04d954c8f10ca3a3eab0f67bdabfcc85b02337522a3853c7a","typeString":"literal_string \"Low B\""},"value":"Low B"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9b4680a6e5dbafb04d954c8f10ca3a3eab0f67bdabfcc85b02337522a3853c7a","typeString":"literal_string \"Low B\""}],"id":5023,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3185:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3185:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5029,"nodeType":"ExpressionStatement","src":"3185:39:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5031,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"3242:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3254:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3242:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a65726f206c6971756964697479","id":5034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3257:16:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_b92817ebaa76de1bc1b1ef78878a5feea9c14a36ac8f9eae26db98a6f7f9807c","typeString":"literal_string \"Zero liquidity\""},"value":"Zero liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b92817ebaa76de1bc1b1ef78878a5feea9c14a36ac8f9eae26db98a6f7f9807c","typeString":"literal_string \"Zero liquidity\""}],"id":5030,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3234:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3234:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5036,"nodeType":"ExpressionStatement","src":"3234:40:14"},{"expression":{"arguments":[{"expression":{"id":5041,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3324:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3328:6:14","memberName":"sender","nodeType":"MemberAccess","src":"3324:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5045,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3344:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleSwap_$5490","typeString":"contract SimpleSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleSwap_$5490","typeString":"contract SimpleSwap"}],"id":5044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3336:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5043,"name":"address","nodeType":"ElementaryTypeName","src":"3336:7:14","typeDescriptions":{}}},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3336:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5047,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"3351:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5038,"name":"_tokenAAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"3292:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5037,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"3285:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$819_$","typeString":"type(contract IERC20)"}},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3285:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3307:16:14","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":917,"src":"3285:38:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$819_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3285:74:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5049,"nodeType":"ExpressionStatement","src":"3285:74:14"},{"expression":{"arguments":[{"expression":{"id":5054,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3408:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3412:6:14","memberName":"sender","nodeType":"MemberAccess","src":"3408:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5058,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3428:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleSwap_$5490","typeString":"contract SimpleSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleSwap_$5490","typeString":"contract SimpleSwap"}],"id":5057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3420:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5056,"name":"address","nodeType":"ElementaryTypeName","src":"3420:7:14","typeDescriptions":{}}},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3420:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5060,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"3435:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5051,"name":"_tokenBAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"3376:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5050,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"3369:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$819_$","typeString":"type(contract IERC20)"}},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3369:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3391:16:14","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":917,"src":"3369:38:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$819_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3369:74:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5062,"nodeType":"ExpressionStatement","src":"3369:74:14"},{"expression":{"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5063,"name":"reserveA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"3454:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5064,"name":"_reserveA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"3465:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5065,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"3477:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3465:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3454:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5068,"nodeType":"ExpressionStatement","src":"3454:30:14"},{"expression":{"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5069,"name":"reserveB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"3494:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5070,"name":"_reserveB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"3505:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5071,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"3517:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3505:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3494:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5074,"nodeType":"ExpressionStatement","src":"3494:30:14"},{"expression":{"arguments":[{"id":5076,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"3540:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5077,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"3544:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5075,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"3534:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5079,"nodeType":"ExpressionStatement","src":"3534:20:14"}]},"documentation":{"id":4850,"nodeType":"StructuredDocumentation","src":"918:686:14","text":"@notice Adds liquidity to the pool and mints LP tokens\n @param tokenA Address of token A\n @param tokenB Address of token B\n @param amountADesired Desired amount of token A to deposit\n @param amountBDesired Desired amount of token B to deposit\n @param amountAMin Minimum acceptable amount of token A\n @param amountBMin Minimum acceptable amount of token B\n @param to Address receiving LP tokens\n @param deadline Timestamp after which transaction is invalid\n @return amountA Actual amount of token A deposited\n @return amountB Actual amount of token B deposited\n @return liquidity Amount of LP tokens minted"},"functionSelector":"e8e33700","id":5081,"implemented":true,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"1618:12:14","nodeType":"FunctionDefinition","parameters":{"id":4867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4852,"mutability":"mutable","name":"tokenA","nameLocation":"1648:6:14","nodeType":"VariableDeclaration","scope":5081,"src":"1640:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4851,"name":"address","nodeType":"ElementaryTypeName","src":"1640:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4854,"mutability":"mutable","name":"tokenB","nameLocation":"1672:6:14","nodeType":"VariableDeclaration","scope":5081,"src":"1664:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4853,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4856,"mutability":"mutable","name":"amountADesired","nameLocation":"1696:14:14","nodeType":"VariableDeclaration","scope":5081,"src":"1688:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4855,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4858,"mutability":"mutable","name":"amountBDesired","nameLocation":"1728:14:14","nodeType":"VariableDeclaration","scope":5081,"src":"1720:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4857,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4860,"mutability":"mutable","name":"amountAMin","nameLocation":"1760:10:14","nodeType":"VariableDeclaration","scope":5081,"src":"1752:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4859,"name":"uint256","nodeType":"ElementaryTypeName","src":"1752:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4862,"mutability":"mutable","name":"amountBMin","nameLocation":"1788:10:14","nodeType":"VariableDeclaration","scope":5081,"src":"1780:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1780:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4864,"mutability":"mutable","name":"to","nameLocation":"1816:2:14","nodeType":"VariableDeclaration","scope":5081,"src":"1808:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4863,"name":"address","nodeType":"ElementaryTypeName","src":"1808:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4866,"mutability":"mutable","name":"deadline","nameLocation":"1836:8:14","nodeType":"VariableDeclaration","scope":5081,"src":"1828:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4865,"name":"uint256","nodeType":"ElementaryTypeName","src":"1828:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1630:220:14"},"returnParameters":{"id":4874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4869,"mutability":"mutable","name":"amountA","nameLocation":"1877:7:14","nodeType":"VariableDeclaration","scope":5081,"src":"1869:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4868,"name":"uint256","nodeType":"ElementaryTypeName","src":"1869:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4871,"mutability":"mutable","name":"amountB","nameLocation":"1894:7:14","nodeType":"VariableDeclaration","scope":5081,"src":"1886:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4870,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4873,"mutability":"mutable","name":"liquidity","nameLocation":"1911:9:14","nodeType":"VariableDeclaration","scope":5081,"src":"1903:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4872,"name":"uint256","nodeType":"ElementaryTypeName","src":"1903:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1868:53:14"},"scope":5490,"src":"1609:1952:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5229,"nodeType":"Block","src":"4371:998:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5104,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4389:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4395:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"4389:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5106,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5096,"src":"4408:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4389:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45787069726564","id":5108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4418:9:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13","typeString":"literal_string \"Expired\""},"value":"Expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13","typeString":"literal_string \"Expired\""}],"id":5103,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4381:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4381:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5110,"nodeType":"ExpressionStatement","src":"4381:47:14"},{"assignments":[5112],"declarations":[{"constant":false,"id":5112,"mutability":"mutable","name":"_tokenAAddres","nameLocation":"4447:13:14","nodeType":"VariableDeclaration","scope":5229,"src":"4439:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5111,"name":"address","nodeType":"ElementaryTypeName","src":"4439:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5114,"initialValue":{"id":5113,"name":"tokenAAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"4463:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4439:36:14"},{"assignments":[5116],"declarations":[{"constant":false,"id":5116,"mutability":"mutable","name":"_tokenBAddres","nameLocation":"4493:13:14","nodeType":"VariableDeclaration","scope":5229,"src":"4485:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5115,"name":"address","nodeType":"ElementaryTypeName","src":"4485:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5118,"initialValue":{"id":5117,"name":"tokenBAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"4509:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4485:36:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5120,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"4554:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5121,"name":"_tokenAAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"4564:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4554:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5123,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"4581:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5124,"name":"_tokenBAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"4591:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4581:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4554:50:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5127,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4553:52:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5128,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"4622:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5129,"name":"_tokenBAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"4632:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4622:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5131,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"4649:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5132,"name":"_tokenAAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"4659:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4649:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4622:50:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5135,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4621:52:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4553:120:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e2070616972","id":5137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4687:20:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a0f3a6fe4f2b4139e5c19fc0123996c3c606f417a7c4425be97431d9fd20ea0","typeString":"literal_string \"Invalid token pair\""},"value":"Invalid token pair"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a0f3a6fe4f2b4139e5c19fc0123996c3c606f417a7c4425be97431d9fd20ea0","typeString":"literal_string \"Invalid token pair\""}],"id":5119,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4532:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:185:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5139,"nodeType":"ExpressionStatement","src":"4532:185:14"},{"assignments":[5141],"declarations":[{"constant":false,"id":5141,"mutability":"mutable","name":"_reserveA","nameLocation":"4736:9:14","nodeType":"VariableDeclaration","scope":5229,"src":"4728:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5140,"name":"uint256","nodeType":"ElementaryTypeName","src":"4728:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5143,"initialValue":{"id":5142,"name":"reserveA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"4748:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4728:28:14"},{"assignments":[5145],"declarations":[{"constant":false,"id":5145,"mutability":"mutable","name":"_reserveB","nameLocation":"4774:9:14","nodeType":"VariableDeclaration","scope":5229,"src":"4766:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5144,"name":"uint256","nodeType":"ElementaryTypeName","src":"4766:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5147,"initialValue":{"id":5146,"name":"reserveB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"4786:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4766:28:14"},{"assignments":[5149],"declarations":[{"constant":false,"id":5149,"mutability":"mutable","name":"_totalSupply","nameLocation":"4812:12:14","nodeType":"VariableDeclaration","scope":5229,"src":"4804:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5148,"name":"uint256","nodeType":"ElementaryTypeName","src":"4804:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5152,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":5150,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"4827:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4827:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4804:36:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":5155,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4869:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4873:6:14","memberName":"sender","nodeType":"MemberAccess","src":"4869:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5154,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"4859:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4859:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5158,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"4884:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4859:34:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f756768204c50","id":5160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4895:15:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_a93d804a59195ce513d1e630391944a5504763fe44cb40791850992ca75b1c1d","typeString":"literal_string \"Not enough LP\""},"value":"Not enough LP"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a93d804a59195ce513d1e630391944a5504763fe44cb40791850992ca75b1c1d","typeString":"literal_string \"Not enough LP\""}],"id":5153,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4851:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4851:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5162,"nodeType":"ExpressionStatement","src":"4851:60:14"},{"expression":{"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5163,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"4922:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5164,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"4933:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5165,"name":"_reserveA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"4945:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4933:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4932:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5168,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"4958:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4932:38:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4922:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5171,"nodeType":"ExpressionStatement","src":"4922:48:14"},{"expression":{"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5172,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"4980:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5173,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"4991:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5174,"name":"_reserveB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"5003:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4991:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5176,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4990:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5177,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"5016:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4990:38:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4980:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5180,"nodeType":"ExpressionStatement","src":"4980:48:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5182,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"5047:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5183,"name":"amountAMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"5058:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5047:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c6f772041","id":5185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5070:7:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_69902dfe75c7b10b3f4c7f15ab3035e10d37d1252e7958f42e3561a4fdcf702e","typeString":"literal_string \"Low A\""},"value":"Low A"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_69902dfe75c7b10b3f4c7f15ab3035e10d37d1252e7958f42e3561a4fdcf702e","typeString":"literal_string \"Low A\""}],"id":5181,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5039:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5039:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5187,"nodeType":"ExpressionStatement","src":"5039:39:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5189,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"5096:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5190,"name":"amountBMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"5107:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5096:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c6f772042","id":5192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5119:7:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b4680a6e5dbafb04d954c8f10ca3a3eab0f67bdabfcc85b02337522a3853c7a","typeString":"literal_string \"Low B\""},"value":"Low B"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9b4680a6e5dbafb04d954c8f10ca3a3eab0f67bdabfcc85b02337522a3853c7a","typeString":"literal_string \"Low B\""}],"id":5188,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5088:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5088:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5194,"nodeType":"ExpressionStatement","src":"5088:39:14"},{"expression":{"arguments":[{"expression":{"id":5196,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5144:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5148:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5144:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5198,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"5156:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5195,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"5138:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5200,"nodeType":"ExpressionStatement","src":"5138:28:14"},{"expression":{"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5201,"name":"reserveA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"5177:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5202,"name":"_reserveA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"5188:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5203,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"5200:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5188:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5177:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5206,"nodeType":"ExpressionStatement","src":"5177:30:14"},{"expression":{"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5207,"name":"reserveB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"5217:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5208,"name":"_reserveB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"5228:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5209,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"5240:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5228:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5217:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5212,"nodeType":"ExpressionStatement","src":"5217:30:14"},{"expression":{"arguments":[{"id":5217,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"5293:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5218,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"5297:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5214,"name":"_tokenAAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"5265:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5213,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"5258:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$819_$","typeString":"type(contract IERC20)"}},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5258:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5280:12:14","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":890,"src":"5258:34:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$819_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5258:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5220,"nodeType":"ExpressionStatement","src":"5258:47:14"},{"expression":{"arguments":[{"id":5225,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"5350:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5226,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"5354:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5222,"name":"_tokenBAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"5322:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5221,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"5315:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$819_$","typeString":"type(contract IERC20)"}},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5315:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"id":5224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5337:12:14","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":890,"src":"5315:34:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$819_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5315:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5228,"nodeType":"ExpressionStatement","src":"5315:47:14"}]},"documentation":{"id":5082,"nodeType":"StructuredDocumentation","src":"3567:539:14","text":"@notice Removes liquidity and burns LP tokens\n @param tokenA Address of token A\n @param tokenB Address of token B\n @param liquidity Amount of LP tokens to burn\n @param amountAMin Minimum amount of token A to receive\n @param amountBMin Minimum amount of token B to receive\n @param to Address receiving the underlying tokens\n @param deadline Timestamp after which transaction is invalid\n @return amountA Amount of token A returned\n @return amountB Amount of token B returned"},"functionSelector":"baa2abde","id":5230,"implemented":true,"kind":"function","modifiers":[],"name":"removeLiquidity","nameLocation":"4120:15:14","nodeType":"FunctionDefinition","parameters":{"id":5097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5084,"mutability":"mutable","name":"tokenA","nameLocation":"4153:6:14","nodeType":"VariableDeclaration","scope":5230,"src":"4145:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5083,"name":"address","nodeType":"ElementaryTypeName","src":"4145:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5086,"mutability":"mutable","name":"tokenB","nameLocation":"4177:6:14","nodeType":"VariableDeclaration","scope":5230,"src":"4169:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5085,"name":"address","nodeType":"ElementaryTypeName","src":"4169:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5088,"mutability":"mutable","name":"liquidity","nameLocation":"4201:9:14","nodeType":"VariableDeclaration","scope":5230,"src":"4193:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5087,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5090,"mutability":"mutable","name":"amountAMin","nameLocation":"4228:10:14","nodeType":"VariableDeclaration","scope":5230,"src":"4220:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5089,"name":"uint256","nodeType":"ElementaryTypeName","src":"4220:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5092,"mutability":"mutable","name":"amountBMin","nameLocation":"4256:10:14","nodeType":"VariableDeclaration","scope":5230,"src":"4248:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5091,"name":"uint256","nodeType":"ElementaryTypeName","src":"4248:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5094,"mutability":"mutable","name":"to","nameLocation":"4284:2:14","nodeType":"VariableDeclaration","scope":5230,"src":"4276:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5093,"name":"address","nodeType":"ElementaryTypeName","src":"4276:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5096,"mutability":"mutable","name":"deadline","nameLocation":"4304:8:14","nodeType":"VariableDeclaration","scope":5230,"src":"4296:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5095,"name":"uint256","nodeType":"ElementaryTypeName","src":"4296:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4135:183:14"},"returnParameters":{"id":5102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5099,"mutability":"mutable","name":"amountA","nameLocation":"4345:7:14","nodeType":"VariableDeclaration","scope":5230,"src":"4337:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5098,"name":"uint256","nodeType":"ElementaryTypeName","src":"4337:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5101,"mutability":"mutable","name":"amountB","nameLocation":"4362:7:14","nodeType":"VariableDeclaration","scope":5230,"src":"4354:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5100,"name":"uint256","nodeType":"ElementaryTypeName","src":"4354:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4336:34:14"},"scope":5490,"src":"4111:1258:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5379,"nodeType":"Block","src":"5939:1110:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5246,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5957:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5963:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"5957:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5248,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"5976:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5957:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45787069726564","id":5250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5986:9:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13","typeString":"literal_string \"Expired\""},"value":"Expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13","typeString":"literal_string \"Expired\""}],"id":5245,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5949:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5949:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5252,"nodeType":"ExpressionStatement","src":"5949:47:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5254,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"6014:4:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6019:6:14","memberName":"length","nodeType":"MemberAccess","src":"6014:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":5256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6029:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6014:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920322d746f6b656e207377617073","id":5258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6032:20:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_8dbe54bde5d74da7b886f685b9256abb22ad8758ccefb76323dd451857c1a8e0","typeString":"literal_string \"Only 2-token swaps\""},"value":"Only 2-token swaps"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8dbe54bde5d74da7b886f685b9256abb22ad8758ccefb76323dd451857c1a8e0","typeString":"literal_string \"Only 2-token swaps\""}],"id":5253,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6006:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6006:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5260,"nodeType":"ExpressionStatement","src":"6006:47:14"},{"assignments":[5262],"declarations":[{"constant":false,"id":5262,"mutability":"mutable","name":"tokenIn","nameLocation":"6072:7:14","nodeType":"VariableDeclaration","scope":5379,"src":"6064:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5261,"name":"address","nodeType":"ElementaryTypeName","src":"6064:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5266,"initialValue":{"baseExpression":{"id":5263,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"6082:4:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5265,"indexExpression":{"hexValue":"30","id":5264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6087:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6082:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6064:25:14"},{"assignments":[5268],"declarations":[{"constant":false,"id":5268,"mutability":"mutable","name":"tokenOut","nameLocation":"6107:8:14","nodeType":"VariableDeclaration","scope":5379,"src":"6099:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5267,"name":"address","nodeType":"ElementaryTypeName","src":"6099:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5272,"initialValue":{"baseExpression":{"id":5269,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"6118:4:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5271,"indexExpression":{"hexValue":"31","id":5270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6123:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6118:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6099:26:14"},{"assignments":[5274],"declarations":[{"constant":false,"id":5274,"mutability":"mutable","name":"_tokenAAddres","nameLocation":"6144:13:14","nodeType":"VariableDeclaration","scope":5379,"src":"6136:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5273,"name":"address","nodeType":"ElementaryTypeName","src":"6136:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5276,"initialValue":{"id":5275,"name":"tokenAAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"6160:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6136:36:14"},{"assignments":[5278],"declarations":[{"constant":false,"id":5278,"mutability":"mutable","name":"_tokenBAddres","nameLocation":"6190:13:14","nodeType":"VariableDeclaration","scope":5379,"src":"6182:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5277,"name":"address","nodeType":"ElementaryTypeName","src":"6182:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5280,"initialValue":{"id":5279,"name":"tokenBAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"6206:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6182:36:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5282,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"6251:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5283,"name":"_tokenAAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"6262:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6251:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5285,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"6279:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5286,"name":"_tokenBAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"6291:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6279:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6251:53:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5289,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6250:55:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5290,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"6322:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5291,"name":"_tokenBAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"6333:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6322:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5293,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"6350:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5294,"name":"_tokenAAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"6362:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6350:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6322:53:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5297,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6321:55:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6250:126:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420737761702070617468","id":5299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6390:19:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9c0f63e8972d14555ea708444bdb7eac702c84db57e478aac11f5f962855928a","typeString":"literal_string \"Invalid swap path\""},"value":"Invalid swap path"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9c0f63e8972d14555ea708444bdb7eac702c84db57e478aac11f5f962855928a","typeString":"literal_string \"Invalid swap path\""}],"id":5281,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6229:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6229:190:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5301,"nodeType":"ExpressionStatement","src":"6229:190:14"},{"assignments":[5303,5305],"declarations":[{"constant":false,"id":5303,"mutability":"mutable","name":"reserveIn","nameLocation":"6439:9:14","nodeType":"VariableDeclaration","scope":5379,"src":"6431:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5302,"name":"uint256","nodeType":"ElementaryTypeName","src":"6431:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5305,"mutability":"mutable","name":"reserveOut","nameLocation":"6458:10:14","nodeType":"VariableDeclaration","scope":5379,"src":"6450:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5304,"name":"uint256","nodeType":"ElementaryTypeName","src":"6450:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5316,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5306,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"6472:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5307,"name":"_tokenAAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"6483:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6472:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":5312,"name":"reserveB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"6547:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5313,"name":"reserveA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"6557:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5314,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6546:20:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6472:94:14","trueExpression":{"components":[{"id":5309,"name":"reserveA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"6512:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5310,"name":"reserveB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"6522:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5311,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6511:20:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"6430:136:14"},{"expression":{"arguments":[{"expression":{"id":5321,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6610:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6614:6:14","memberName":"sender","nodeType":"MemberAccess","src":"6610:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5325,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6630:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleSwap_$5490","typeString":"contract SimpleSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleSwap_$5490","typeString":"contract SimpleSwap"}],"id":5324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6622:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5323,"name":"address","nodeType":"ElementaryTypeName","src":"6622:7:14","typeDescriptions":{}}},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6622:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5327,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"6637:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5318,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"6584:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5317,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"6577:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$819_$","typeString":"type(contract IERC20)"}},"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6577:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6593:16:14","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":917,"src":"6577:32:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$819_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6577:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5329,"nodeType":"ExpressionStatement","src":"6577:69:14"},{"assignments":[5331],"declarations":[{"constant":false,"id":5331,"mutability":"mutable","name":"amountOut","nameLocation":"6665:9:14","nodeType":"VariableDeclaration","scope":5379,"src":"6657:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5330,"name":"uint256","nodeType":"ElementaryTypeName","src":"6657:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5341,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5332,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"6678:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5333,"name":"reserveOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"6689:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6678:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6677:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5336,"name":"reserveIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"6704:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5337,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"6716:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6704:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5339,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6703:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6677:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6657:68:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5343,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"6743:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5344,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5235,"src":"6756:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6743:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536c697070616765","id":5346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6770:10:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114","typeString":"literal_string \"Slippage\""},"value":"Slippage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114","typeString":"literal_string \"Slippage\""}],"id":5342,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6735:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6735:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5348,"nodeType":"ExpressionStatement","src":"6735:46:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5349,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"6796:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5350,"name":"_tokenAAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"6807:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6796:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5369,"nodeType":"Block","src":"6908:80:14","statements":[{"expression":{"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5361,"name":"reserveB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"6922:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5362,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"6934:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6922:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5364,"nodeType":"ExpressionStatement","src":"6922:20:14"},{"expression":{"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5365,"name":"reserveA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"6956:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5366,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"6968:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6956:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5368,"nodeType":"ExpressionStatement","src":"6956:21:14"}]},"id":5370,"nodeType":"IfStatement","src":"6792:196:14","trueBody":{"id":5360,"nodeType":"Block","src":"6822:80:14","statements":[{"expression":{"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5352,"name":"reserveA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"6836:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5353,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"6848:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6836:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5355,"nodeType":"ExpressionStatement","src":"6836:20:14"},{"expression":{"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5356,"name":"reserveB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"6870:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5357,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"6882:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6870:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5359,"nodeType":"ExpressionStatement","src":"6870:21:14"}]}},{"expression":{"arguments":[{"id":5375,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"7028:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5376,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"7032:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5372,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"7005:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5371,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"6998:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$819_$","typeString":"type(contract IERC20)"}},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6998:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$819","typeString":"contract IERC20"}},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7015:12:14","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":890,"src":"6998:29:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$819_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6998:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5378,"nodeType":"ExpressionStatement","src":"6998:44:14"}]},"documentation":{"id":5231,"nodeType":"StructuredDocumentation","src":"5375:375:14","text":"@notice Swaps an exact amount of input tokens for output tokens\n @param amountIn Amount of input token to send\n @param amountOutMin Minimum acceptable amount of output token\n @param path Array with [tokenIn, tokenOut] addresses\n @param to Address to receive the output token\n @param deadline Timestamp after which transaction is invalid"},"functionSelector":"38ed1739","id":5380,"implemented":true,"kind":"function","modifiers":[],"name":"swapExactTokensForTokens","nameLocation":"5764:24:14","nodeType":"FunctionDefinition","parameters":{"id":5243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5233,"mutability":"mutable","name":"amountIn","nameLocation":"5806:8:14","nodeType":"VariableDeclaration","scope":5380,"src":"5798:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5232,"name":"uint256","nodeType":"ElementaryTypeName","src":"5798:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5235,"mutability":"mutable","name":"amountOutMin","nameLocation":"5832:12:14","nodeType":"VariableDeclaration","scope":5380,"src":"5824:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5234,"name":"uint256","nodeType":"ElementaryTypeName","src":"5824:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5238,"mutability":"mutable","name":"path","nameLocation":"5873:4:14","nodeType":"VariableDeclaration","scope":5380,"src":"5854:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5236,"name":"address","nodeType":"ElementaryTypeName","src":"5854:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5237,"nodeType":"ArrayTypeName","src":"5854:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5240,"mutability":"mutable","name":"to","nameLocation":"5895:2:14","nodeType":"VariableDeclaration","scope":5380,"src":"5887:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5239,"name":"address","nodeType":"ElementaryTypeName","src":"5887:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5242,"mutability":"mutable","name":"deadline","nameLocation":"5915:8:14","nodeType":"VariableDeclaration","scope":5380,"src":"5907:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5241,"name":"uint256","nodeType":"ElementaryTypeName","src":"5907:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5788:141:14"},"returnParameters":{"id":5244,"nodeType":"ParameterList","parameters":[],"src":"5939:0:14"},"scope":5490,"src":"5755:1294:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5447,"nodeType":"Block","src":"7331:486:14","statements":[{"assignments":[5391],"declarations":[{"constant":false,"id":5391,"mutability":"mutable","name":"_tokenAAddres","nameLocation":"7349:13:14","nodeType":"VariableDeclaration","scope":5447,"src":"7341:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5390,"name":"address","nodeType":"ElementaryTypeName","src":"7341:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5393,"initialValue":{"id":5392,"name":"tokenAAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"7365:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7341:36:14"},{"assignments":[5395],"declarations":[{"constant":false,"id":5395,"mutability":"mutable","name":"_tokenBAddres","nameLocation":"7395:13:14","nodeType":"VariableDeclaration","scope":5447,"src":"7387:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5394,"name":"address","nodeType":"ElementaryTypeName","src":"7387:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5397,"initialValue":{"id":5396,"name":"tokenBAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"7411:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7387:36:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5399,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"7456:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5400,"name":"_tokenAAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"7466:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7456:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5402,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"7483:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5403,"name":"_tokenBAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5395,"src":"7493:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7483:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7456:50:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5406,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7455:52:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5407,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"7524:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5408,"name":"_tokenBAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5395,"src":"7534:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7524:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5410,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"7551:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5411,"name":"_tokenAAddres","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"7561:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7551:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7524:50:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7523:52:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7455:120:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e2070616972","id":5416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7589:20:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a0f3a6fe4f2b4139e5c19fc0123996c3c606f417a7c4425be97431d9fd20ea0","typeString":"literal_string \"Invalid token pair\""},"value":"Invalid token pair"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a0f3a6fe4f2b4139e5c19fc0123996c3c606f417a7c4425be97431d9fd20ea0","typeString":"literal_string \"Invalid token pair\""}],"id":5398,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7434:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7434:185:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5418,"nodeType":"ExpressionStatement","src":"7434:185:14"},{"assignments":[5420],"declarations":[{"constant":false,"id":5420,"mutability":"mutable","name":"_reserveA","nameLocation":"7638:9:14","nodeType":"VariableDeclaration","scope":5447,"src":"7630:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5419,"name":"uint256","nodeType":"ElementaryTypeName","src":"7630:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5422,"initialValue":{"id":5421,"name":"reserveA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"7650:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7630:28:14"},{"assignments":[5424],"declarations":[{"constant":false,"id":5424,"mutability":"mutable","name":"_reserveB","nameLocation":"7676:9:14","nodeType":"VariableDeclaration","scope":5447,"src":"7668:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5423,"name":"uint256","nodeType":"ElementaryTypeName","src":"7668:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5426,"initialValue":{"id":5425,"name":"reserveB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"7688:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7668:28:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5428,"name":"_reserveA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"7715:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7727:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7715:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5431,"name":"_reserveB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"7732:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7744:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7732:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7715:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f207265736572766573","id":5435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7747:13:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766","typeString":"literal_string \"No reserves\""},"value":"No reserves"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766","typeString":"literal_string \"No reserves\""}],"id":5427,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7707:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7707:54:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5437,"nodeType":"ExpressionStatement","src":"7707:54:14"},{"expression":{"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5438,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"7772:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5439,"name":"_reserveB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"7781:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":5440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7793:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"7781:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5442,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7780:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5443,"name":"_reserveA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"7801:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7780:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7772:38:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5446,"nodeType":"ExpressionStatement","src":"7772:38:14"}]},"documentation":{"id":5381,"nodeType":"StructuredDocumentation","src":"7055:183:14","text":"@notice Returns the price of tokenA in terms of tokenB\n @param tokenA Address\n @param tokenB Address\n @return price Price with 18 decimals (tokenB per tokenA)"},"functionSelector":"ac41865a","id":5448,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"7252:8:14","nodeType":"FunctionDefinition","parameters":{"id":5386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5383,"mutability":"mutable","name":"tokenA","nameLocation":"7269:6:14","nodeType":"VariableDeclaration","scope":5448,"src":"7261:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5382,"name":"address","nodeType":"ElementaryTypeName","src":"7261:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5385,"mutability":"mutable","name":"tokenB","nameLocation":"7285:6:14","nodeType":"VariableDeclaration","scope":5448,"src":"7277:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5384,"name":"address","nodeType":"ElementaryTypeName","src":"7277:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7260:32:14"},"returnParameters":{"id":5389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5388,"mutability":"mutable","name":"price","nameLocation":"7324:5:14","nodeType":"VariableDeclaration","scope":5448,"src":"7316:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5387,"name":"uint256","nodeType":"ElementaryTypeName","src":"7316:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7315:15:14"},"scope":5490,"src":"7243:574:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5488,"nodeType":"Block","src":"8212:186:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5461,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"8230:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8241:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8230:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a65726f20696e707574","id":5464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8244:12:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_dc186d373dd540cb9fb96bc11c9900e230b3d537c77cb1630f42b8b4fd4a54f4","typeString":"literal_string \"Zero input\""},"value":"Zero input"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dc186d373dd540cb9fb96bc11c9900e230b3d537c77cb1630f42b8b4fd4a54f4","typeString":"literal_string \"Zero input\""}],"id":5460,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8222:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8222:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5466,"nodeType":"ExpressionStatement","src":"8222:35:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5468,"name":"reserveIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5453,"src":"8275:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8287:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8275:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5471,"name":"reserveOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"8292:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8305:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8292:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8275:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456d707479207265736572766573","id":5475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8308:16:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_971080a6c04a1c3be1ce1e8552e0d8e01640a734e3641d0b551c42f40a93241a","typeString":"literal_string \"Empty reserves\""},"value":"Empty reserves"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_971080a6c04a1c3be1ce1e8552e0d8e01640a734e3641d0b551c42f40a93241a","typeString":"literal_string \"Empty reserves\""}],"id":5467,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8267:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8267:58:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5477,"nodeType":"ExpressionStatement","src":"8267:58:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5478,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"8344:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5479,"name":"reserveOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"8355:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8344:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8343:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5482,"name":"reserveIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5453,"src":"8370:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5483,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"8382:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8370:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8369:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8343:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5459,"id":5487,"nodeType":"Return","src":"8336:55:14"}]},"documentation":{"id":5449,"nodeType":"StructuredDocumentation","src":"7823:245:14","text":"@notice Computes output amount for a given input and reserves\n @param amountIn Amount of input token\n @param reserveIn Reserve of input token\n @param reserveOut Reserve of output token\n @return Output token amount"},"functionSelector":"054d50d4","id":5489,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"8082:12:14","nodeType":"FunctionDefinition","parameters":{"id":5456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5451,"mutability":"mutable","name":"amountIn","nameLocation":"8103:8:14","nodeType":"VariableDeclaration","scope":5489,"src":"8095:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5450,"name":"uint256","nodeType":"ElementaryTypeName","src":"8095:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5453,"mutability":"mutable","name":"reserveIn","nameLocation":"8121:9:14","nodeType":"VariableDeclaration","scope":5489,"src":"8113:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5452,"name":"uint256","nodeType":"ElementaryTypeName","src":"8113:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5455,"mutability":"mutable","name":"reserveOut","nameLocation":"8140:10:14","nodeType":"VariableDeclaration","scope":5489,"src":"8132:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5454,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8094:57:14"},"returnParameters":{"id":5459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5489,"src":"8199:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5457,"name":"uint256","nodeType":"ElementaryTypeName","src":"8199:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8198:9:14"},"scope":5490,"src":"8073:325:14","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":5491,"src":"404:7996:14","usedErrors":[101,106,111,120,125,130,857],"usedEvents":[753,762]}],"src":"32:8368:14"},"id":14}},"contracts":{"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122021d82994344a725674ffbd18bfdbf3408286b4c70160438f71557a49498ed9a764736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0xD8 0x29 SWAP5 CALLVALUE BLOBBASEFEE PUSH19 0x5674FFBD18BFDBF3408286B4C70160438F7155 PUSH27 0x49498ED9A764736F6C634300081C00330000000000000000000000 ","sourceMap":"698:9376:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122021d82994344a725674ffbd18bfdbf3408286b4c70160438f71557a49498ed9a764736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0xD8 0x29 SWAP5 CALLVALUE BLOBBASEFEE PUSH19 0x5674FFBD18BFDBF3408286B4C70160438F7155 PUSH27 0x49498ED9A764736F6C634300081C00330000000000000000000000 ","sourceMap":"698:9376:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201619ae7223aa01bdc7afa5042f76fccaa3f5955b0138f23cbc3d1bec23770a5f64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND NOT 0xAE PUSH19 0x23AA01BDC7AFA5042F76FCCAA3F5955B0138F2 EXTCODECOPY 0xBC RETURNDATASIZE SHL 0xEC 0x23 PUSH24 0xA5F64736F6C634300081C00330000000000000000000000 ","sourceMap":"281:31863:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201619ae7223aa01bdc7afa5042f76fccaa3f5955b0138f23cbc3d1bec23770a5f64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND NOT 0xAE PUSH19 0x23AA01BDC7AFA5042F76FCCAA3F5955B0138F2 EXTCODECOPY 0xBC RETURNDATASIZE SHL 0xEC 0x23 PUSH24 0xA5F64736F6C634300081C00330000000000000000000000 ","sourceMap":"281:31863:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"contracts/MockERC20.sol":{"MockERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"initialSupply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_278":{"entryPoint":null,"id":278,"parameterSlots":2,"returnSlots":0},"@_4814":{"entryPoint":null,"id":4814,"parameterSlots":3,"returnSlots":0},"@_mint_581":{"entryPoint":110,"id":581,"parameterSlots":2,"returnSlots":0},"@_update_548":{"entryPoint":246,"id":548,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1056,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1122,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1201,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory":{"entryPoint":1222,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2156,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2297,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2171,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":2312,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2367,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":938,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":795,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":965,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1468,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1361,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2245,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1755,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2138,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2106,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1168,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1720,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1610,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1896,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1014,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1489,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1419,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1868,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":889,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1600,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1838,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2198,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1372,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":842,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1644,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":815,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":820,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":810,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":805,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":825,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1505,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1825,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1696,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1518,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1654,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1178,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1691,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:10778:15","nodeType":"YulBlock","src":"0:10778:15","statements":[{"body":{"nativeSrc":"47:35:15","nodeType":"YulBlock","src":"47:35:15","statements":[{"nativeSrc":"57:19:15","nodeType":"YulAssignment","src":"57:19:15","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:15","nodeType":"YulLiteral","src":"73:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:15","nodeType":"YulIdentifier","src":"67:5:15"},"nativeSrc":"67:9:15","nodeType":"YulFunctionCall","src":"67:9:15"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:15","nodeType":"YulIdentifier","src":"57:6:15"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:15","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:15","nodeType":"YulTypedName","src":"40:6:15","type":""}],"src":"7:75:15"},{"body":{"nativeSrc":"177:28:15","nodeType":"YulBlock","src":"177:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:15","nodeType":"YulLiteral","src":"194:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:15","nodeType":"YulLiteral","src":"197:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:15","nodeType":"YulIdentifier","src":"187:6:15"},"nativeSrc":"187:12:15","nodeType":"YulFunctionCall","src":"187:12:15"},"nativeSrc":"187:12:15","nodeType":"YulExpressionStatement","src":"187:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:15","nodeType":"YulFunctionDefinition","src":"88:117:15"},{"body":{"nativeSrc":"300:28:15","nodeType":"YulBlock","src":"300:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:15","nodeType":"YulLiteral","src":"317:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:15","nodeType":"YulLiteral","src":"320:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:15","nodeType":"YulIdentifier","src":"310:6:15"},"nativeSrc":"310:12:15","nodeType":"YulFunctionCall","src":"310:12:15"},"nativeSrc":"310:12:15","nodeType":"YulExpressionStatement","src":"310:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:15","nodeType":"YulFunctionDefinition","src":"211:117:15"},{"body":{"nativeSrc":"423:28:15","nodeType":"YulBlock","src":"423:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"440:1:15","nodeType":"YulLiteral","src":"440:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"443:1:15","nodeType":"YulLiteral","src":"443:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"433:6:15","nodeType":"YulIdentifier","src":"433:6:15"},"nativeSrc":"433:12:15","nodeType":"YulFunctionCall","src":"433:12:15"},"nativeSrc":"433:12:15","nodeType":"YulExpressionStatement","src":"433:12:15"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"334:117:15","nodeType":"YulFunctionDefinition","src":"334:117:15"},{"body":{"nativeSrc":"546:28:15","nodeType":"YulBlock","src":"546:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"563:1:15","nodeType":"YulLiteral","src":"563:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"566:1:15","nodeType":"YulLiteral","src":"566:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"556:6:15","nodeType":"YulIdentifier","src":"556:6:15"},"nativeSrc":"556:12:15","nodeType":"YulFunctionCall","src":"556:12:15"},"nativeSrc":"556:12:15","nodeType":"YulExpressionStatement","src":"556:12:15"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"457:117:15","nodeType":"YulFunctionDefinition","src":"457:117:15"},{"body":{"nativeSrc":"628:54:15","nodeType":"YulBlock","src":"628:54:15","statements":[{"nativeSrc":"638:38:15","nodeType":"YulAssignment","src":"638:38:15","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"656:5:15","nodeType":"YulIdentifier","src":"656:5:15"},{"kind":"number","nativeSrc":"663:2:15","nodeType":"YulLiteral","src":"663:2:15","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"652:3:15","nodeType":"YulIdentifier","src":"652:3:15"},"nativeSrc":"652:14:15","nodeType":"YulFunctionCall","src":"652:14:15"},{"arguments":[{"kind":"number","nativeSrc":"672:2:15","nodeType":"YulLiteral","src":"672:2:15","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"668:3:15","nodeType":"YulIdentifier","src":"668:3:15"},"nativeSrc":"668:7:15","nodeType":"YulFunctionCall","src":"668:7:15"}],"functionName":{"name":"and","nativeSrc":"648:3:15","nodeType":"YulIdentifier","src":"648:3:15"},"nativeSrc":"648:28:15","nodeType":"YulFunctionCall","src":"648:28:15"},"variableNames":[{"name":"result","nativeSrc":"638:6:15","nodeType":"YulIdentifier","src":"638:6:15"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"580:102:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"611:5:15","nodeType":"YulTypedName","src":"611:5:15","type":""}],"returnVariables":[{"name":"result","nativeSrc":"621:6:15","nodeType":"YulTypedName","src":"621:6:15","type":""}],"src":"580:102:15"},{"body":{"nativeSrc":"716:152:15","nodeType":"YulBlock","src":"716:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"733:1:15","nodeType":"YulLiteral","src":"733:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"736:77:15","nodeType":"YulLiteral","src":"736:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"726:6:15","nodeType":"YulIdentifier","src":"726:6:15"},"nativeSrc":"726:88:15","nodeType":"YulFunctionCall","src":"726:88:15"},"nativeSrc":"726:88:15","nodeType":"YulExpressionStatement","src":"726:88:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"830:1:15","nodeType":"YulLiteral","src":"830:1:15","type":"","value":"4"},{"kind":"number","nativeSrc":"833:4:15","nodeType":"YulLiteral","src":"833:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"823:6:15","nodeType":"YulIdentifier","src":"823:6:15"},"nativeSrc":"823:15:15","nodeType":"YulFunctionCall","src":"823:15:15"},"nativeSrc":"823:15:15","nodeType":"YulExpressionStatement","src":"823:15:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"854:1:15","nodeType":"YulLiteral","src":"854:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"857:4:15","nodeType":"YulLiteral","src":"857:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"847:6:15","nodeType":"YulIdentifier","src":"847:6:15"},"nativeSrc":"847:15:15","nodeType":"YulFunctionCall","src":"847:15:15"},"nativeSrc":"847:15:15","nodeType":"YulExpressionStatement","src":"847:15:15"}]},"name":"panic_error_0x41","nativeSrc":"688:180:15","nodeType":"YulFunctionDefinition","src":"688:180:15"},{"body":{"nativeSrc":"917:238:15","nodeType":"YulBlock","src":"917:238:15","statements":[{"nativeSrc":"927:58:15","nodeType":"YulVariableDeclaration","src":"927:58:15","value":{"arguments":[{"name":"memPtr","nativeSrc":"949:6:15","nodeType":"YulIdentifier","src":"949:6:15"},{"arguments":[{"name":"size","nativeSrc":"979:4:15","nodeType":"YulIdentifier","src":"979:4:15"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"957:21:15","nodeType":"YulIdentifier","src":"957:21:15"},"nativeSrc":"957:27:15","nodeType":"YulFunctionCall","src":"957:27:15"}],"functionName":{"name":"add","nativeSrc":"945:3:15","nodeType":"YulIdentifier","src":"945:3:15"},"nativeSrc":"945:40:15","nodeType":"YulFunctionCall","src":"945:40:15"},"variables":[{"name":"newFreePtr","nativeSrc":"931:10:15","nodeType":"YulTypedName","src":"931:10:15","type":""}]},{"body":{"nativeSrc":"1096:22:15","nodeType":"YulBlock","src":"1096:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1098:16:15","nodeType":"YulIdentifier","src":"1098:16:15"},"nativeSrc":"1098:18:15","nodeType":"YulFunctionCall","src":"1098:18:15"},"nativeSrc":"1098:18:15","nodeType":"YulExpressionStatement","src":"1098:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1039:10:15","nodeType":"YulIdentifier","src":"1039:10:15"},{"kind":"number","nativeSrc":"1051:18:15","nodeType":"YulLiteral","src":"1051:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1036:2:15","nodeType":"YulIdentifier","src":"1036:2:15"},"nativeSrc":"1036:34:15","nodeType":"YulFunctionCall","src":"1036:34:15"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1075:10:15","nodeType":"YulIdentifier","src":"1075:10:15"},{"name":"memPtr","nativeSrc":"1087:6:15","nodeType":"YulIdentifier","src":"1087:6:15"}],"functionName":{"name":"lt","nativeSrc":"1072:2:15","nodeType":"YulIdentifier","src":"1072:2:15"},"nativeSrc":"1072:22:15","nodeType":"YulFunctionCall","src":"1072:22:15"}],"functionName":{"name":"or","nativeSrc":"1033:2:15","nodeType":"YulIdentifier","src":"1033:2:15"},"nativeSrc":"1033:62:15","nodeType":"YulFunctionCall","src":"1033:62:15"},"nativeSrc":"1030:88:15","nodeType":"YulIf","src":"1030:88:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1134:2:15","nodeType":"YulLiteral","src":"1134:2:15","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1138:10:15","nodeType":"YulIdentifier","src":"1138:10:15"}],"functionName":{"name":"mstore","nativeSrc":"1127:6:15","nodeType":"YulIdentifier","src":"1127:6:15"},"nativeSrc":"1127:22:15","nodeType":"YulFunctionCall","src":"1127:22:15"},"nativeSrc":"1127:22:15","nodeType":"YulExpressionStatement","src":"1127:22:15"}]},"name":"finalize_allocation","nativeSrc":"874:281:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"903:6:15","nodeType":"YulTypedName","src":"903:6:15","type":""},{"name":"size","nativeSrc":"911:4:15","nodeType":"YulTypedName","src":"911:4:15","type":""}],"src":"874:281:15"},{"body":{"nativeSrc":"1202:88:15","nodeType":"YulBlock","src":"1202:88:15","statements":[{"nativeSrc":"1212:30:15","nodeType":"YulAssignment","src":"1212:30:15","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"1222:18:15","nodeType":"YulIdentifier","src":"1222:18:15"},"nativeSrc":"1222:20:15","nodeType":"YulFunctionCall","src":"1222:20:15"},"variableNames":[{"name":"memPtr","nativeSrc":"1212:6:15","nodeType":"YulIdentifier","src":"1212:6:15"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1271:6:15","nodeType":"YulIdentifier","src":"1271:6:15"},{"name":"size","nativeSrc":"1279:4:15","nodeType":"YulIdentifier","src":"1279:4:15"}],"functionName":{"name":"finalize_allocation","nativeSrc":"1251:19:15","nodeType":"YulIdentifier","src":"1251:19:15"},"nativeSrc":"1251:33:15","nodeType":"YulFunctionCall","src":"1251:33:15"},"nativeSrc":"1251:33:15","nodeType":"YulExpressionStatement","src":"1251:33:15"}]},"name":"allocate_memory","nativeSrc":"1161:129:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"1186:4:15","nodeType":"YulTypedName","src":"1186:4:15","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"1195:6:15","nodeType":"YulTypedName","src":"1195:6:15","type":""}],"src":"1161:129:15"},{"body":{"nativeSrc":"1363:241:15","nodeType":"YulBlock","src":"1363:241:15","statements":[{"body":{"nativeSrc":"1468:22:15","nodeType":"YulBlock","src":"1468:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1470:16:15","nodeType":"YulIdentifier","src":"1470:16:15"},"nativeSrc":"1470:18:15","nodeType":"YulFunctionCall","src":"1470:18:15"},"nativeSrc":"1470:18:15","nodeType":"YulExpressionStatement","src":"1470:18:15"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1440:6:15","nodeType":"YulIdentifier","src":"1440:6:15"},{"kind":"number","nativeSrc":"1448:18:15","nodeType":"YulLiteral","src":"1448:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1437:2:15","nodeType":"YulIdentifier","src":"1437:2:15"},"nativeSrc":"1437:30:15","nodeType":"YulFunctionCall","src":"1437:30:15"},"nativeSrc":"1434:56:15","nodeType":"YulIf","src":"1434:56:15"},{"nativeSrc":"1500:37:15","nodeType":"YulAssignment","src":"1500:37:15","value":{"arguments":[{"name":"length","nativeSrc":"1530:6:15","nodeType":"YulIdentifier","src":"1530:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1508:21:15","nodeType":"YulIdentifier","src":"1508:21:15"},"nativeSrc":"1508:29:15","nodeType":"YulFunctionCall","src":"1508:29:15"},"variableNames":[{"name":"size","nativeSrc":"1500:4:15","nodeType":"YulIdentifier","src":"1500:4:15"}]},{"nativeSrc":"1574:23:15","nodeType":"YulAssignment","src":"1574:23:15","value":{"arguments":[{"name":"size","nativeSrc":"1586:4:15","nodeType":"YulIdentifier","src":"1586:4:15"},{"kind":"number","nativeSrc":"1592:4:15","nodeType":"YulLiteral","src":"1592:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1582:3:15","nodeType":"YulIdentifier","src":"1582:3:15"},"nativeSrc":"1582:15:15","nodeType":"YulFunctionCall","src":"1582:15:15"},"variableNames":[{"name":"size","nativeSrc":"1574:4:15","nodeType":"YulIdentifier","src":"1574:4:15"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1296:308:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"1347:6:15","nodeType":"YulTypedName","src":"1347:6:15","type":""}],"returnVariables":[{"name":"size","nativeSrc":"1358:4:15","nodeType":"YulTypedName","src":"1358:4:15","type":""}],"src":"1296:308:15"},{"body":{"nativeSrc":"1672:186:15","nodeType":"YulBlock","src":"1672:186:15","statements":[{"nativeSrc":"1683:10:15","nodeType":"YulVariableDeclaration","src":"1683:10:15","value":{"kind":"number","nativeSrc":"1692:1:15","nodeType":"YulLiteral","src":"1692:1:15","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1687:1:15","nodeType":"YulTypedName","src":"1687:1:15","type":""}]},{"body":{"nativeSrc":"1752:63:15","nodeType":"YulBlock","src":"1752:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1777:3:15","nodeType":"YulIdentifier","src":"1777:3:15"},{"name":"i","nativeSrc":"1782:1:15","nodeType":"YulIdentifier","src":"1782:1:15"}],"functionName":{"name":"add","nativeSrc":"1773:3:15","nodeType":"YulIdentifier","src":"1773:3:15"},"nativeSrc":"1773:11:15","nodeType":"YulFunctionCall","src":"1773:11:15"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1796:3:15","nodeType":"YulIdentifier","src":"1796:3:15"},{"name":"i","nativeSrc":"1801:1:15","nodeType":"YulIdentifier","src":"1801:1:15"}],"functionName":{"name":"add","nativeSrc":"1792:3:15","nodeType":"YulIdentifier","src":"1792:3:15"},"nativeSrc":"1792:11:15","nodeType":"YulFunctionCall","src":"1792:11:15"}],"functionName":{"name":"mload","nativeSrc":"1786:5:15","nodeType":"YulIdentifier","src":"1786:5:15"},"nativeSrc":"1786:18:15","nodeType":"YulFunctionCall","src":"1786:18:15"}],"functionName":{"name":"mstore","nativeSrc":"1766:6:15","nodeType":"YulIdentifier","src":"1766:6:15"},"nativeSrc":"1766:39:15","nodeType":"YulFunctionCall","src":"1766:39:15"},"nativeSrc":"1766:39:15","nodeType":"YulExpressionStatement","src":"1766:39:15"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1713:1:15","nodeType":"YulIdentifier","src":"1713:1:15"},{"name":"length","nativeSrc":"1716:6:15","nodeType":"YulIdentifier","src":"1716:6:15"}],"functionName":{"name":"lt","nativeSrc":"1710:2:15","nodeType":"YulIdentifier","src":"1710:2:15"},"nativeSrc":"1710:13:15","nodeType":"YulFunctionCall","src":"1710:13:15"},"nativeSrc":"1702:113:15","nodeType":"YulForLoop","post":{"nativeSrc":"1724:19:15","nodeType":"YulBlock","src":"1724:19:15","statements":[{"nativeSrc":"1726:15:15","nodeType":"YulAssignment","src":"1726:15:15","value":{"arguments":[{"name":"i","nativeSrc":"1735:1:15","nodeType":"YulIdentifier","src":"1735:1:15"},{"kind":"number","nativeSrc":"1738:2:15","nodeType":"YulLiteral","src":"1738:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1731:3:15","nodeType":"YulIdentifier","src":"1731:3:15"},"nativeSrc":"1731:10:15","nodeType":"YulFunctionCall","src":"1731:10:15"},"variableNames":[{"name":"i","nativeSrc":"1726:1:15","nodeType":"YulIdentifier","src":"1726:1:15"}]}]},"pre":{"nativeSrc":"1706:3:15","nodeType":"YulBlock","src":"1706:3:15","statements":[]},"src":"1702:113:15"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1835:3:15","nodeType":"YulIdentifier","src":"1835:3:15"},{"name":"length","nativeSrc":"1840:6:15","nodeType":"YulIdentifier","src":"1840:6:15"}],"functionName":{"name":"add","nativeSrc":"1831:3:15","nodeType":"YulIdentifier","src":"1831:3:15"},"nativeSrc":"1831:16:15","nodeType":"YulFunctionCall","src":"1831:16:15"},{"kind":"number","nativeSrc":"1849:1:15","nodeType":"YulLiteral","src":"1849:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"1824:6:15","nodeType":"YulIdentifier","src":"1824:6:15"},"nativeSrc":"1824:27:15","nodeType":"YulFunctionCall","src":"1824:27:15"},"nativeSrc":"1824:27:15","nodeType":"YulExpressionStatement","src":"1824:27:15"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1610:248:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1654:3:15","nodeType":"YulTypedName","src":"1654:3:15","type":""},{"name":"dst","nativeSrc":"1659:3:15","nodeType":"YulTypedName","src":"1659:3:15","type":""},{"name":"length","nativeSrc":"1664:6:15","nodeType":"YulTypedName","src":"1664:6:15","type":""}],"src":"1610:248:15"},{"body":{"nativeSrc":"1959:339:15","nodeType":"YulBlock","src":"1959:339:15","statements":[{"nativeSrc":"1969:75:15","nodeType":"YulAssignment","src":"1969:75:15","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2036:6:15","nodeType":"YulIdentifier","src":"2036:6:15"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1994:41:15","nodeType":"YulIdentifier","src":"1994:41:15"},"nativeSrc":"1994:49:15","nodeType":"YulFunctionCall","src":"1994:49:15"}],"functionName":{"name":"allocate_memory","nativeSrc":"1978:15:15","nodeType":"YulIdentifier","src":"1978:15:15"},"nativeSrc":"1978:66:15","nodeType":"YulFunctionCall","src":"1978:66:15"},"variableNames":[{"name":"array","nativeSrc":"1969:5:15","nodeType":"YulIdentifier","src":"1969:5:15"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2060:5:15","nodeType":"YulIdentifier","src":"2060:5:15"},{"name":"length","nativeSrc":"2067:6:15","nodeType":"YulIdentifier","src":"2067:6:15"}],"functionName":{"name":"mstore","nativeSrc":"2053:6:15","nodeType":"YulIdentifier","src":"2053:6:15"},"nativeSrc":"2053:21:15","nodeType":"YulFunctionCall","src":"2053:21:15"},"nativeSrc":"2053:21:15","nodeType":"YulExpressionStatement","src":"2053:21:15"},{"nativeSrc":"2083:27:15","nodeType":"YulVariableDeclaration","src":"2083:27:15","value":{"arguments":[{"name":"array","nativeSrc":"2098:5:15","nodeType":"YulIdentifier","src":"2098:5:15"},{"kind":"number","nativeSrc":"2105:4:15","nodeType":"YulLiteral","src":"2105:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2094:3:15","nodeType":"YulIdentifier","src":"2094:3:15"},"nativeSrc":"2094:16:15","nodeType":"YulFunctionCall","src":"2094:16:15"},"variables":[{"name":"dst","nativeSrc":"2087:3:15","nodeType":"YulTypedName","src":"2087:3:15","type":""}]},{"body":{"nativeSrc":"2148:83:15","nodeType":"YulBlock","src":"2148:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2150:77:15","nodeType":"YulIdentifier","src":"2150:77:15"},"nativeSrc":"2150:79:15","nodeType":"YulFunctionCall","src":"2150:79:15"},"nativeSrc":"2150:79:15","nodeType":"YulExpressionStatement","src":"2150:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2129:3:15","nodeType":"YulIdentifier","src":"2129:3:15"},{"name":"length","nativeSrc":"2134:6:15","nodeType":"YulIdentifier","src":"2134:6:15"}],"functionName":{"name":"add","nativeSrc":"2125:3:15","nodeType":"YulIdentifier","src":"2125:3:15"},"nativeSrc":"2125:16:15","nodeType":"YulFunctionCall","src":"2125:16:15"},{"name":"end","nativeSrc":"2143:3:15","nodeType":"YulIdentifier","src":"2143:3:15"}],"functionName":{"name":"gt","nativeSrc":"2122:2:15","nodeType":"YulIdentifier","src":"2122:2:15"},"nativeSrc":"2122:25:15","nodeType":"YulFunctionCall","src":"2122:25:15"},"nativeSrc":"2119:112:15","nodeType":"YulIf","src":"2119:112:15"},{"expression":{"arguments":[{"name":"src","nativeSrc":"2275:3:15","nodeType":"YulIdentifier","src":"2275:3:15"},{"name":"dst","nativeSrc":"2280:3:15","nodeType":"YulIdentifier","src":"2280:3:15"},{"name":"length","nativeSrc":"2285:6:15","nodeType":"YulIdentifier","src":"2285:6:15"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2240:34:15","nodeType":"YulIdentifier","src":"2240:34:15"},"nativeSrc":"2240:52:15","nodeType":"YulFunctionCall","src":"2240:52:15"},"nativeSrc":"2240:52:15","nodeType":"YulExpressionStatement","src":"2240:52:15"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"1864:434:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1932:3:15","nodeType":"YulTypedName","src":"1932:3:15","type":""},{"name":"length","nativeSrc":"1937:6:15","nodeType":"YulTypedName","src":"1937:6:15","type":""},{"name":"end","nativeSrc":"1945:3:15","nodeType":"YulTypedName","src":"1945:3:15","type":""}],"returnVariables":[{"name":"array","nativeSrc":"1953:5:15","nodeType":"YulTypedName","src":"1953:5:15","type":""}],"src":"1864:434:15"},{"body":{"nativeSrc":"2391:282:15","nodeType":"YulBlock","src":"2391:282:15","statements":[{"body":{"nativeSrc":"2440:83:15","nodeType":"YulBlock","src":"2440:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2442:77:15","nodeType":"YulIdentifier","src":"2442:77:15"},"nativeSrc":"2442:79:15","nodeType":"YulFunctionCall","src":"2442:79:15"},"nativeSrc":"2442:79:15","nodeType":"YulExpressionStatement","src":"2442:79:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2419:6:15","nodeType":"YulIdentifier","src":"2419:6:15"},{"kind":"number","nativeSrc":"2427:4:15","nodeType":"YulLiteral","src":"2427:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2415:3:15","nodeType":"YulIdentifier","src":"2415:3:15"},"nativeSrc":"2415:17:15","nodeType":"YulFunctionCall","src":"2415:17:15"},{"name":"end","nativeSrc":"2434:3:15","nodeType":"YulIdentifier","src":"2434:3:15"}],"functionName":{"name":"slt","nativeSrc":"2411:3:15","nodeType":"YulIdentifier","src":"2411:3:15"},"nativeSrc":"2411:27:15","nodeType":"YulFunctionCall","src":"2411:27:15"}],"functionName":{"name":"iszero","nativeSrc":"2404:6:15","nodeType":"YulIdentifier","src":"2404:6:15"},"nativeSrc":"2404:35:15","nodeType":"YulFunctionCall","src":"2404:35:15"},"nativeSrc":"2401:122:15","nodeType":"YulIf","src":"2401:122:15"},{"nativeSrc":"2532:27:15","nodeType":"YulVariableDeclaration","src":"2532:27:15","value":{"arguments":[{"name":"offset","nativeSrc":"2552:6:15","nodeType":"YulIdentifier","src":"2552:6:15"}],"functionName":{"name":"mload","nativeSrc":"2546:5:15","nodeType":"YulIdentifier","src":"2546:5:15"},"nativeSrc":"2546:13:15","nodeType":"YulFunctionCall","src":"2546:13:15"},"variables":[{"name":"length","nativeSrc":"2536:6:15","nodeType":"YulTypedName","src":"2536:6:15","type":""}]},{"nativeSrc":"2568:99:15","nodeType":"YulAssignment","src":"2568:99:15","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2640:6:15","nodeType":"YulIdentifier","src":"2640:6:15"},{"kind":"number","nativeSrc":"2648:4:15","nodeType":"YulLiteral","src":"2648:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2636:3:15","nodeType":"YulIdentifier","src":"2636:3:15"},"nativeSrc":"2636:17:15","nodeType":"YulFunctionCall","src":"2636:17:15"},{"name":"length","nativeSrc":"2655:6:15","nodeType":"YulIdentifier","src":"2655:6:15"},{"name":"end","nativeSrc":"2663:3:15","nodeType":"YulIdentifier","src":"2663:3:15"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"2577:58:15","nodeType":"YulIdentifier","src":"2577:58:15"},"nativeSrc":"2577:90:15","nodeType":"YulFunctionCall","src":"2577:90:15"},"variableNames":[{"name":"array","nativeSrc":"2568:5:15","nodeType":"YulIdentifier","src":"2568:5:15"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"2318:355:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2369:6:15","nodeType":"YulTypedName","src":"2369:6:15","type":""},{"name":"end","nativeSrc":"2377:3:15","nodeType":"YulTypedName","src":"2377:3:15","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2385:5:15","nodeType":"YulTypedName","src":"2385:5:15","type":""}],"src":"2318:355:15"},{"body":{"nativeSrc":"2724:32:15","nodeType":"YulBlock","src":"2724:32:15","statements":[{"nativeSrc":"2734:16:15","nodeType":"YulAssignment","src":"2734:16:15","value":{"name":"value","nativeSrc":"2745:5:15","nodeType":"YulIdentifier","src":"2745:5:15"},"variableNames":[{"name":"cleaned","nativeSrc":"2734:7:15","nodeType":"YulIdentifier","src":"2734:7:15"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2679:77:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2706:5:15","nodeType":"YulTypedName","src":"2706:5:15","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2716:7:15","nodeType":"YulTypedName","src":"2716:7:15","type":""}],"src":"2679:77:15"},{"body":{"nativeSrc":"2805:79:15","nodeType":"YulBlock","src":"2805:79:15","statements":[{"body":{"nativeSrc":"2862:16:15","nodeType":"YulBlock","src":"2862:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2871:1:15","nodeType":"YulLiteral","src":"2871:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"2874:1:15","nodeType":"YulLiteral","src":"2874:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2864:6:15","nodeType":"YulIdentifier","src":"2864:6:15"},"nativeSrc":"2864:12:15","nodeType":"YulFunctionCall","src":"2864:12:15"},"nativeSrc":"2864:12:15","nodeType":"YulExpressionStatement","src":"2864:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2828:5:15","nodeType":"YulIdentifier","src":"2828:5:15"},{"arguments":[{"name":"value","nativeSrc":"2853:5:15","nodeType":"YulIdentifier","src":"2853:5:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2835:17:15","nodeType":"YulIdentifier","src":"2835:17:15"},"nativeSrc":"2835:24:15","nodeType":"YulFunctionCall","src":"2835:24:15"}],"functionName":{"name":"eq","nativeSrc":"2825:2:15","nodeType":"YulIdentifier","src":"2825:2:15"},"nativeSrc":"2825:35:15","nodeType":"YulFunctionCall","src":"2825:35:15"}],"functionName":{"name":"iszero","nativeSrc":"2818:6:15","nodeType":"YulIdentifier","src":"2818:6:15"},"nativeSrc":"2818:43:15","nodeType":"YulFunctionCall","src":"2818:43:15"},"nativeSrc":"2815:63:15","nodeType":"YulIf","src":"2815:63:15"}]},"name":"validator_revert_t_uint256","nativeSrc":"2762:122:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2798:5:15","nodeType":"YulTypedName","src":"2798:5:15","type":""}],"src":"2762:122:15"},{"body":{"nativeSrc":"2953:80:15","nodeType":"YulBlock","src":"2953:80:15","statements":[{"nativeSrc":"2963:22:15","nodeType":"YulAssignment","src":"2963:22:15","value":{"arguments":[{"name":"offset","nativeSrc":"2978:6:15","nodeType":"YulIdentifier","src":"2978:6:15"}],"functionName":{"name":"mload","nativeSrc":"2972:5:15","nodeType":"YulIdentifier","src":"2972:5:15"},"nativeSrc":"2972:13:15","nodeType":"YulFunctionCall","src":"2972:13:15"},"variableNames":[{"name":"value","nativeSrc":"2963:5:15","nodeType":"YulIdentifier","src":"2963:5:15"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3021:5:15","nodeType":"YulIdentifier","src":"3021:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2994:26:15","nodeType":"YulIdentifier","src":"2994:26:15"},"nativeSrc":"2994:33:15","nodeType":"YulFunctionCall","src":"2994:33:15"},"nativeSrc":"2994:33:15","nodeType":"YulExpressionStatement","src":"2994:33:15"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"2890:143:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2931:6:15","nodeType":"YulTypedName","src":"2931:6:15","type":""},{"name":"end","nativeSrc":"2939:3:15","nodeType":"YulTypedName","src":"2939:3:15","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2947:5:15","nodeType":"YulTypedName","src":"2947:5:15","type":""}],"src":"2890:143:15"},{"body":{"nativeSrc":"3170:878:15","nodeType":"YulBlock","src":"3170:878:15","statements":[{"body":{"nativeSrc":"3216:83:15","nodeType":"YulBlock","src":"3216:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3218:77:15","nodeType":"YulIdentifier","src":"3218:77:15"},"nativeSrc":"3218:79:15","nodeType":"YulFunctionCall","src":"3218:79:15"},"nativeSrc":"3218:79:15","nodeType":"YulExpressionStatement","src":"3218:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3191:7:15","nodeType":"YulIdentifier","src":"3191:7:15"},{"name":"headStart","nativeSrc":"3200:9:15","nodeType":"YulIdentifier","src":"3200:9:15"}],"functionName":{"name":"sub","nativeSrc":"3187:3:15","nodeType":"YulIdentifier","src":"3187:3:15"},"nativeSrc":"3187:23:15","nodeType":"YulFunctionCall","src":"3187:23:15"},{"kind":"number","nativeSrc":"3212:2:15","nodeType":"YulLiteral","src":"3212:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3183:3:15","nodeType":"YulIdentifier","src":"3183:3:15"},"nativeSrc":"3183:32:15","nodeType":"YulFunctionCall","src":"3183:32:15"},"nativeSrc":"3180:119:15","nodeType":"YulIf","src":"3180:119:15"},{"nativeSrc":"3309:291:15","nodeType":"YulBlock","src":"3309:291:15","statements":[{"nativeSrc":"3324:38:15","nodeType":"YulVariableDeclaration","src":"3324:38:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3348:9:15","nodeType":"YulIdentifier","src":"3348:9:15"},{"kind":"number","nativeSrc":"3359:1:15","nodeType":"YulLiteral","src":"3359:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3344:3:15","nodeType":"YulIdentifier","src":"3344:3:15"},"nativeSrc":"3344:17:15","nodeType":"YulFunctionCall","src":"3344:17:15"}],"functionName":{"name":"mload","nativeSrc":"3338:5:15","nodeType":"YulIdentifier","src":"3338:5:15"},"nativeSrc":"3338:24:15","nodeType":"YulFunctionCall","src":"3338:24:15"},"variables":[{"name":"offset","nativeSrc":"3328:6:15","nodeType":"YulTypedName","src":"3328:6:15","type":""}]},{"body":{"nativeSrc":"3409:83:15","nodeType":"YulBlock","src":"3409:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3411:77:15","nodeType":"YulIdentifier","src":"3411:77:15"},"nativeSrc":"3411:79:15","nodeType":"YulFunctionCall","src":"3411:79:15"},"nativeSrc":"3411:79:15","nodeType":"YulExpressionStatement","src":"3411:79:15"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3381:6:15","nodeType":"YulIdentifier","src":"3381:6:15"},{"kind":"number","nativeSrc":"3389:18:15","nodeType":"YulLiteral","src":"3389:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3378:2:15","nodeType":"YulIdentifier","src":"3378:2:15"},"nativeSrc":"3378:30:15","nodeType":"YulFunctionCall","src":"3378:30:15"},"nativeSrc":"3375:117:15","nodeType":"YulIf","src":"3375:117:15"},{"nativeSrc":"3506:84:15","nodeType":"YulAssignment","src":"3506:84:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3562:9:15","nodeType":"YulIdentifier","src":"3562:9:15"},{"name":"offset","nativeSrc":"3573:6:15","nodeType":"YulIdentifier","src":"3573:6:15"}],"functionName":{"name":"add","nativeSrc":"3558:3:15","nodeType":"YulIdentifier","src":"3558:3:15"},"nativeSrc":"3558:22:15","nodeType":"YulFunctionCall","src":"3558:22:15"},{"name":"dataEnd","nativeSrc":"3582:7:15","nodeType":"YulIdentifier","src":"3582:7:15"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"3516:41:15","nodeType":"YulIdentifier","src":"3516:41:15"},"nativeSrc":"3516:74:15","nodeType":"YulFunctionCall","src":"3516:74:15"},"variableNames":[{"name":"value0","nativeSrc":"3506:6:15","nodeType":"YulIdentifier","src":"3506:6:15"}]}]},{"nativeSrc":"3610:292:15","nodeType":"YulBlock","src":"3610:292:15","statements":[{"nativeSrc":"3625:39:15","nodeType":"YulVariableDeclaration","src":"3625:39:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3649:9:15","nodeType":"YulIdentifier","src":"3649:9:15"},{"kind":"number","nativeSrc":"3660:2:15","nodeType":"YulLiteral","src":"3660:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3645:3:15","nodeType":"YulIdentifier","src":"3645:3:15"},"nativeSrc":"3645:18:15","nodeType":"YulFunctionCall","src":"3645:18:15"}],"functionName":{"name":"mload","nativeSrc":"3639:5:15","nodeType":"YulIdentifier","src":"3639:5:15"},"nativeSrc":"3639:25:15","nodeType":"YulFunctionCall","src":"3639:25:15"},"variables":[{"name":"offset","nativeSrc":"3629:6:15","nodeType":"YulTypedName","src":"3629:6:15","type":""}]},{"body":{"nativeSrc":"3711:83:15","nodeType":"YulBlock","src":"3711:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3713:77:15","nodeType":"YulIdentifier","src":"3713:77:15"},"nativeSrc":"3713:79:15","nodeType":"YulFunctionCall","src":"3713:79:15"},"nativeSrc":"3713:79:15","nodeType":"YulExpressionStatement","src":"3713:79:15"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3683:6:15","nodeType":"YulIdentifier","src":"3683:6:15"},{"kind":"number","nativeSrc":"3691:18:15","nodeType":"YulLiteral","src":"3691:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3680:2:15","nodeType":"YulIdentifier","src":"3680:2:15"},"nativeSrc":"3680:30:15","nodeType":"YulFunctionCall","src":"3680:30:15"},"nativeSrc":"3677:117:15","nodeType":"YulIf","src":"3677:117:15"},{"nativeSrc":"3808:84:15","nodeType":"YulAssignment","src":"3808:84:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3864:9:15","nodeType":"YulIdentifier","src":"3864:9:15"},{"name":"offset","nativeSrc":"3875:6:15","nodeType":"YulIdentifier","src":"3875:6:15"}],"functionName":{"name":"add","nativeSrc":"3860:3:15","nodeType":"YulIdentifier","src":"3860:3:15"},"nativeSrc":"3860:22:15","nodeType":"YulFunctionCall","src":"3860:22:15"},{"name":"dataEnd","nativeSrc":"3884:7:15","nodeType":"YulIdentifier","src":"3884:7:15"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"3818:41:15","nodeType":"YulIdentifier","src":"3818:41:15"},"nativeSrc":"3818:74:15","nodeType":"YulFunctionCall","src":"3818:74:15"},"variableNames":[{"name":"value1","nativeSrc":"3808:6:15","nodeType":"YulIdentifier","src":"3808:6:15"}]}]},{"nativeSrc":"3912:129:15","nodeType":"YulBlock","src":"3912:129:15","statements":[{"nativeSrc":"3927:16:15","nodeType":"YulVariableDeclaration","src":"3927:16:15","value":{"kind":"number","nativeSrc":"3941:2:15","nodeType":"YulLiteral","src":"3941:2:15","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"3931:6:15","nodeType":"YulTypedName","src":"3931:6:15","type":""}]},{"nativeSrc":"3957:74:15","nodeType":"YulAssignment","src":"3957:74:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4003:9:15","nodeType":"YulIdentifier","src":"4003:9:15"},{"name":"offset","nativeSrc":"4014:6:15","nodeType":"YulIdentifier","src":"4014:6:15"}],"functionName":{"name":"add","nativeSrc":"3999:3:15","nodeType":"YulIdentifier","src":"3999:3:15"},"nativeSrc":"3999:22:15","nodeType":"YulFunctionCall","src":"3999:22:15"},{"name":"dataEnd","nativeSrc":"4023:7:15","nodeType":"YulIdentifier","src":"4023:7:15"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"3967:31:15","nodeType":"YulIdentifier","src":"3967:31:15"},"nativeSrc":"3967:64:15","nodeType":"YulFunctionCall","src":"3967:64:15"},"variableNames":[{"name":"value2","nativeSrc":"3957:6:15","nodeType":"YulIdentifier","src":"3957:6:15"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory","nativeSrc":"3039:1009:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3124:9:15","nodeType":"YulTypedName","src":"3124:9:15","type":""},{"name":"dataEnd","nativeSrc":"3135:7:15","nodeType":"YulTypedName","src":"3135:7:15","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3147:6:15","nodeType":"YulTypedName","src":"3147:6:15","type":""},{"name":"value1","nativeSrc":"3155:6:15","nodeType":"YulTypedName","src":"3155:6:15","type":""},{"name":"value2","nativeSrc":"3163:6:15","nodeType":"YulTypedName","src":"3163:6:15","type":""}],"src":"3039:1009:15"},{"body":{"nativeSrc":"4113:40:15","nodeType":"YulBlock","src":"4113:40:15","statements":[{"nativeSrc":"4124:22:15","nodeType":"YulAssignment","src":"4124:22:15","value":{"arguments":[{"name":"value","nativeSrc":"4140:5:15","nodeType":"YulIdentifier","src":"4140:5:15"}],"functionName":{"name":"mload","nativeSrc":"4134:5:15","nodeType":"YulIdentifier","src":"4134:5:15"},"nativeSrc":"4134:12:15","nodeType":"YulFunctionCall","src":"4134:12:15"},"variableNames":[{"name":"length","nativeSrc":"4124:6:15","nodeType":"YulIdentifier","src":"4124:6:15"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"4054:99:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4096:5:15","nodeType":"YulTypedName","src":"4096:5:15","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4106:6:15","nodeType":"YulTypedName","src":"4106:6:15","type":""}],"src":"4054:99:15"},{"body":{"nativeSrc":"4187:152:15","nodeType":"YulBlock","src":"4187:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4204:1:15","nodeType":"YulLiteral","src":"4204:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"4207:77:15","nodeType":"YulLiteral","src":"4207:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"4197:6:15","nodeType":"YulIdentifier","src":"4197:6:15"},"nativeSrc":"4197:88:15","nodeType":"YulFunctionCall","src":"4197:88:15"},"nativeSrc":"4197:88:15","nodeType":"YulExpressionStatement","src":"4197:88:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4301:1:15","nodeType":"YulLiteral","src":"4301:1:15","type":"","value":"4"},{"kind":"number","nativeSrc":"4304:4:15","nodeType":"YulLiteral","src":"4304:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"4294:6:15","nodeType":"YulIdentifier","src":"4294:6:15"},"nativeSrc":"4294:15:15","nodeType":"YulFunctionCall","src":"4294:15:15"},"nativeSrc":"4294:15:15","nodeType":"YulExpressionStatement","src":"4294:15:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4325:1:15","nodeType":"YulLiteral","src":"4325:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"4328:4:15","nodeType":"YulLiteral","src":"4328:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4318:6:15","nodeType":"YulIdentifier","src":"4318:6:15"},"nativeSrc":"4318:15:15","nodeType":"YulFunctionCall","src":"4318:15:15"},"nativeSrc":"4318:15:15","nodeType":"YulExpressionStatement","src":"4318:15:15"}]},"name":"panic_error_0x22","nativeSrc":"4159:180:15","nodeType":"YulFunctionDefinition","src":"4159:180:15"},{"body":{"nativeSrc":"4396:269:15","nodeType":"YulBlock","src":"4396:269:15","statements":[{"nativeSrc":"4406:22:15","nodeType":"YulAssignment","src":"4406:22:15","value":{"arguments":[{"name":"data","nativeSrc":"4420:4:15","nodeType":"YulIdentifier","src":"4420:4:15"},{"kind":"number","nativeSrc":"4426:1:15","nodeType":"YulLiteral","src":"4426:1:15","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"4416:3:15","nodeType":"YulIdentifier","src":"4416:3:15"},"nativeSrc":"4416:12:15","nodeType":"YulFunctionCall","src":"4416:12:15"},"variableNames":[{"name":"length","nativeSrc":"4406:6:15","nodeType":"YulIdentifier","src":"4406:6:15"}]},{"nativeSrc":"4437:38:15","nodeType":"YulVariableDeclaration","src":"4437:38:15","value":{"arguments":[{"name":"data","nativeSrc":"4467:4:15","nodeType":"YulIdentifier","src":"4467:4:15"},{"kind":"number","nativeSrc":"4473:1:15","nodeType":"YulLiteral","src":"4473:1:15","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"4463:3:15","nodeType":"YulIdentifier","src":"4463:3:15"},"nativeSrc":"4463:12:15","nodeType":"YulFunctionCall","src":"4463:12:15"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"4441:18:15","nodeType":"YulTypedName","src":"4441:18:15","type":""}]},{"body":{"nativeSrc":"4514:51:15","nodeType":"YulBlock","src":"4514:51:15","statements":[{"nativeSrc":"4528:27:15","nodeType":"YulAssignment","src":"4528:27:15","value":{"arguments":[{"name":"length","nativeSrc":"4542:6:15","nodeType":"YulIdentifier","src":"4542:6:15"},{"kind":"number","nativeSrc":"4550:4:15","nodeType":"YulLiteral","src":"4550:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"4538:3:15","nodeType":"YulIdentifier","src":"4538:3:15"},"nativeSrc":"4538:17:15","nodeType":"YulFunctionCall","src":"4538:17:15"},"variableNames":[{"name":"length","nativeSrc":"4528:6:15","nodeType":"YulIdentifier","src":"4528:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"4494:18:15","nodeType":"YulIdentifier","src":"4494:18:15"}],"functionName":{"name":"iszero","nativeSrc":"4487:6:15","nodeType":"YulIdentifier","src":"4487:6:15"},"nativeSrc":"4487:26:15","nodeType":"YulFunctionCall","src":"4487:26:15"},"nativeSrc":"4484:81:15","nodeType":"YulIf","src":"4484:81:15"},{"body":{"nativeSrc":"4617:42:15","nodeType":"YulBlock","src":"4617:42:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"4631:16:15","nodeType":"YulIdentifier","src":"4631:16:15"},"nativeSrc":"4631:18:15","nodeType":"YulFunctionCall","src":"4631:18:15"},"nativeSrc":"4631:18:15","nodeType":"YulExpressionStatement","src":"4631:18:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"4581:18:15","nodeType":"YulIdentifier","src":"4581:18:15"},{"arguments":[{"name":"length","nativeSrc":"4604:6:15","nodeType":"YulIdentifier","src":"4604:6:15"},{"kind":"number","nativeSrc":"4612:2:15","nodeType":"YulLiteral","src":"4612:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4601:2:15","nodeType":"YulIdentifier","src":"4601:2:15"},"nativeSrc":"4601:14:15","nodeType":"YulFunctionCall","src":"4601:14:15"}],"functionName":{"name":"eq","nativeSrc":"4578:2:15","nodeType":"YulIdentifier","src":"4578:2:15"},"nativeSrc":"4578:38:15","nodeType":"YulFunctionCall","src":"4578:38:15"},"nativeSrc":"4575:84:15","nodeType":"YulIf","src":"4575:84:15"}]},"name":"extract_byte_array_length","nativeSrc":"4345:320:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4380:4:15","nodeType":"YulTypedName","src":"4380:4:15","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4389:6:15","nodeType":"YulTypedName","src":"4389:6:15","type":""}],"src":"4345:320:15"},{"body":{"nativeSrc":"4725:87:15","nodeType":"YulBlock","src":"4725:87:15","statements":[{"nativeSrc":"4735:11:15","nodeType":"YulAssignment","src":"4735:11:15","value":{"name":"ptr","nativeSrc":"4743:3:15","nodeType":"YulIdentifier","src":"4743:3:15"},"variableNames":[{"name":"data","nativeSrc":"4735:4:15","nodeType":"YulIdentifier","src":"4735:4:15"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4763:1:15","nodeType":"YulLiteral","src":"4763:1:15","type":"","value":"0"},{"name":"ptr","nativeSrc":"4766:3:15","nodeType":"YulIdentifier","src":"4766:3:15"}],"functionName":{"name":"mstore","nativeSrc":"4756:6:15","nodeType":"YulIdentifier","src":"4756:6:15"},"nativeSrc":"4756:14:15","nodeType":"YulFunctionCall","src":"4756:14:15"},"nativeSrc":"4756:14:15","nodeType":"YulExpressionStatement","src":"4756:14:15"},{"nativeSrc":"4779:26:15","nodeType":"YulAssignment","src":"4779:26:15","value":{"arguments":[{"kind":"number","nativeSrc":"4797:1:15","nodeType":"YulLiteral","src":"4797:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"4800:4:15","nodeType":"YulLiteral","src":"4800:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"4787:9:15","nodeType":"YulIdentifier","src":"4787:9:15"},"nativeSrc":"4787:18:15","nodeType":"YulFunctionCall","src":"4787:18:15"},"variableNames":[{"name":"data","nativeSrc":"4779:4:15","nodeType":"YulIdentifier","src":"4779:4:15"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"4671:141:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"4712:3:15","nodeType":"YulTypedName","src":"4712:3:15","type":""}],"returnVariables":[{"name":"data","nativeSrc":"4720:4:15","nodeType":"YulTypedName","src":"4720:4:15","type":""}],"src":"4671:141:15"},{"body":{"nativeSrc":"4862:49:15","nodeType":"YulBlock","src":"4862:49:15","statements":[{"nativeSrc":"4872:33:15","nodeType":"YulAssignment","src":"4872:33:15","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4890:5:15","nodeType":"YulIdentifier","src":"4890:5:15"},{"kind":"number","nativeSrc":"4897:2:15","nodeType":"YulLiteral","src":"4897:2:15","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4886:3:15","nodeType":"YulIdentifier","src":"4886:3:15"},"nativeSrc":"4886:14:15","nodeType":"YulFunctionCall","src":"4886:14:15"},{"kind":"number","nativeSrc":"4902:2:15","nodeType":"YulLiteral","src":"4902:2:15","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"4882:3:15","nodeType":"YulIdentifier","src":"4882:3:15"},"nativeSrc":"4882:23:15","nodeType":"YulFunctionCall","src":"4882:23:15"},"variableNames":[{"name":"result","nativeSrc":"4872:6:15","nodeType":"YulIdentifier","src":"4872:6:15"}]}]},"name":"divide_by_32_ceil","nativeSrc":"4818:93:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4845:5:15","nodeType":"YulTypedName","src":"4845:5:15","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4855:6:15","nodeType":"YulTypedName","src":"4855:6:15","type":""}],"src":"4818:93:15"},{"body":{"nativeSrc":"4970:54:15","nodeType":"YulBlock","src":"4970:54:15","statements":[{"nativeSrc":"4980:37:15","nodeType":"YulAssignment","src":"4980:37:15","value":{"arguments":[{"name":"bits","nativeSrc":"5005:4:15","nodeType":"YulIdentifier","src":"5005:4:15"},{"name":"value","nativeSrc":"5011:5:15","nodeType":"YulIdentifier","src":"5011:5:15"}],"functionName":{"name":"shl","nativeSrc":"5001:3:15","nodeType":"YulIdentifier","src":"5001:3:15"},"nativeSrc":"5001:16:15","nodeType":"YulFunctionCall","src":"5001:16:15"},"variableNames":[{"name":"newValue","nativeSrc":"4980:8:15","nodeType":"YulIdentifier","src":"4980:8:15"}]}]},"name":"shift_left_dynamic","nativeSrc":"4917:107:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4945:4:15","nodeType":"YulTypedName","src":"4945:4:15","type":""},{"name":"value","nativeSrc":"4951:5:15","nodeType":"YulTypedName","src":"4951:5:15","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4961:8:15","nodeType":"YulTypedName","src":"4961:8:15","type":""}],"src":"4917:107:15"},{"body":{"nativeSrc":"5106:317:15","nodeType":"YulBlock","src":"5106:317:15","statements":[{"nativeSrc":"5116:35:15","nodeType":"YulVariableDeclaration","src":"5116:35:15","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"5137:10:15","nodeType":"YulIdentifier","src":"5137:10:15"},{"kind":"number","nativeSrc":"5149:1:15","nodeType":"YulLiteral","src":"5149:1:15","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"5133:3:15","nodeType":"YulIdentifier","src":"5133:3:15"},"nativeSrc":"5133:18:15","nodeType":"YulFunctionCall","src":"5133:18:15"},"variables":[{"name":"shiftBits","nativeSrc":"5120:9:15","nodeType":"YulTypedName","src":"5120:9:15","type":""}]},{"nativeSrc":"5160:109:15","nodeType":"YulVariableDeclaration","src":"5160:109:15","value":{"arguments":[{"name":"shiftBits","nativeSrc":"5191:9:15","nodeType":"YulIdentifier","src":"5191:9:15"},{"kind":"number","nativeSrc":"5202:66:15","nodeType":"YulLiteral","src":"5202:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"5172:18:15","nodeType":"YulIdentifier","src":"5172:18:15"},"nativeSrc":"5172:97:15","nodeType":"YulFunctionCall","src":"5172:97:15"},"variables":[{"name":"mask","nativeSrc":"5164:4:15","nodeType":"YulTypedName","src":"5164:4:15","type":""}]},{"nativeSrc":"5278:51:15","nodeType":"YulAssignment","src":"5278:51:15","value":{"arguments":[{"name":"shiftBits","nativeSrc":"5309:9:15","nodeType":"YulIdentifier","src":"5309:9:15"},{"name":"toInsert","nativeSrc":"5320:8:15","nodeType":"YulIdentifier","src":"5320:8:15"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"5290:18:15","nodeType":"YulIdentifier","src":"5290:18:15"},"nativeSrc":"5290:39:15","nodeType":"YulFunctionCall","src":"5290:39:15"},"variableNames":[{"name":"toInsert","nativeSrc":"5278:8:15","nodeType":"YulIdentifier","src":"5278:8:15"}]},{"nativeSrc":"5338:30:15","nodeType":"YulAssignment","src":"5338:30:15","value":{"arguments":[{"name":"value","nativeSrc":"5351:5:15","nodeType":"YulIdentifier","src":"5351:5:15"},{"arguments":[{"name":"mask","nativeSrc":"5362:4:15","nodeType":"YulIdentifier","src":"5362:4:15"}],"functionName":{"name":"not","nativeSrc":"5358:3:15","nodeType":"YulIdentifier","src":"5358:3:15"},"nativeSrc":"5358:9:15","nodeType":"YulFunctionCall","src":"5358:9:15"}],"functionName":{"name":"and","nativeSrc":"5347:3:15","nodeType":"YulIdentifier","src":"5347:3:15"},"nativeSrc":"5347:21:15","nodeType":"YulFunctionCall","src":"5347:21:15"},"variableNames":[{"name":"value","nativeSrc":"5338:5:15","nodeType":"YulIdentifier","src":"5338:5:15"}]},{"nativeSrc":"5377:40:15","nodeType":"YulAssignment","src":"5377:40:15","value":{"arguments":[{"name":"value","nativeSrc":"5390:5:15","nodeType":"YulIdentifier","src":"5390:5:15"},{"arguments":[{"name":"toInsert","nativeSrc":"5401:8:15","nodeType":"YulIdentifier","src":"5401:8:15"},{"name":"mask","nativeSrc":"5411:4:15","nodeType":"YulIdentifier","src":"5411:4:15"}],"functionName":{"name":"and","nativeSrc":"5397:3:15","nodeType":"YulIdentifier","src":"5397:3:15"},"nativeSrc":"5397:19:15","nodeType":"YulFunctionCall","src":"5397:19:15"}],"functionName":{"name":"or","nativeSrc":"5387:2:15","nodeType":"YulIdentifier","src":"5387:2:15"},"nativeSrc":"5387:30:15","nodeType":"YulFunctionCall","src":"5387:30:15"},"variableNames":[{"name":"result","nativeSrc":"5377:6:15","nodeType":"YulIdentifier","src":"5377:6:15"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"5030:393:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5067:5:15","nodeType":"YulTypedName","src":"5067:5:15","type":""},{"name":"shiftBytes","nativeSrc":"5074:10:15","nodeType":"YulTypedName","src":"5074:10:15","type":""},{"name":"toInsert","nativeSrc":"5086:8:15","nodeType":"YulTypedName","src":"5086:8:15","type":""}],"returnVariables":[{"name":"result","nativeSrc":"5099:6:15","nodeType":"YulTypedName","src":"5099:6:15","type":""}],"src":"5030:393:15"},{"body":{"nativeSrc":"5461:28:15","nodeType":"YulBlock","src":"5461:28:15","statements":[{"nativeSrc":"5471:12:15","nodeType":"YulAssignment","src":"5471:12:15","value":{"name":"value","nativeSrc":"5478:5:15","nodeType":"YulIdentifier","src":"5478:5:15"},"variableNames":[{"name":"ret","nativeSrc":"5471:3:15","nodeType":"YulIdentifier","src":"5471:3:15"}]}]},"name":"identity","nativeSrc":"5429:60:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5447:5:15","nodeType":"YulTypedName","src":"5447:5:15","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"5457:3:15","nodeType":"YulTypedName","src":"5457:3:15","type":""}],"src":"5429:60:15"},{"body":{"nativeSrc":"5555:82:15","nodeType":"YulBlock","src":"5555:82:15","statements":[{"nativeSrc":"5565:66:15","nodeType":"YulAssignment","src":"5565:66:15","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5623:5:15","nodeType":"YulIdentifier","src":"5623:5:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5605:17:15","nodeType":"YulIdentifier","src":"5605:17:15"},"nativeSrc":"5605:24:15","nodeType":"YulFunctionCall","src":"5605:24:15"}],"functionName":{"name":"identity","nativeSrc":"5596:8:15","nodeType":"YulIdentifier","src":"5596:8:15"},"nativeSrc":"5596:34:15","nodeType":"YulFunctionCall","src":"5596:34:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5578:17:15","nodeType":"YulIdentifier","src":"5578:17:15"},"nativeSrc":"5578:53:15","nodeType":"YulFunctionCall","src":"5578:53:15"},"variableNames":[{"name":"converted","nativeSrc":"5565:9:15","nodeType":"YulIdentifier","src":"5565:9:15"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"5495:142:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5535:5:15","nodeType":"YulTypedName","src":"5535:5:15","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"5545:9:15","nodeType":"YulTypedName","src":"5545:9:15","type":""}],"src":"5495:142:15"},{"body":{"nativeSrc":"5690:28:15","nodeType":"YulBlock","src":"5690:28:15","statements":[{"nativeSrc":"5700:12:15","nodeType":"YulAssignment","src":"5700:12:15","value":{"name":"value","nativeSrc":"5707:5:15","nodeType":"YulIdentifier","src":"5707:5:15"},"variableNames":[{"name":"ret","nativeSrc":"5700:3:15","nodeType":"YulIdentifier","src":"5700:3:15"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"5643:75:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5676:5:15","nodeType":"YulTypedName","src":"5676:5:15","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"5686:3:15","nodeType":"YulTypedName","src":"5686:3:15","type":""}],"src":"5643:75:15"},{"body":{"nativeSrc":"5800:193:15","nodeType":"YulBlock","src":"5800:193:15","statements":[{"nativeSrc":"5810:63:15","nodeType":"YulVariableDeclaration","src":"5810:63:15","value":{"arguments":[{"name":"value_0","nativeSrc":"5865:7:15","nodeType":"YulIdentifier","src":"5865:7:15"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"5834:30:15","nodeType":"YulIdentifier","src":"5834:30:15"},"nativeSrc":"5834:39:15","nodeType":"YulFunctionCall","src":"5834:39:15"},"variables":[{"name":"convertedValue_0","nativeSrc":"5814:16:15","nodeType":"YulTypedName","src":"5814:16:15","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5889:4:15","nodeType":"YulIdentifier","src":"5889:4:15"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5929:4:15","nodeType":"YulIdentifier","src":"5929:4:15"}],"functionName":{"name":"sload","nativeSrc":"5923:5:15","nodeType":"YulIdentifier","src":"5923:5:15"},"nativeSrc":"5923:11:15","nodeType":"YulFunctionCall","src":"5923:11:15"},{"name":"offset","nativeSrc":"5936:6:15","nodeType":"YulIdentifier","src":"5936:6:15"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"5968:16:15","nodeType":"YulIdentifier","src":"5968:16:15"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"5944:23:15","nodeType":"YulIdentifier","src":"5944:23:15"},"nativeSrc":"5944:41:15","nodeType":"YulFunctionCall","src":"5944:41:15"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"5895:27:15","nodeType":"YulIdentifier","src":"5895:27:15"},"nativeSrc":"5895:91:15","nodeType":"YulFunctionCall","src":"5895:91:15"}],"functionName":{"name":"sstore","nativeSrc":"5882:6:15","nodeType":"YulIdentifier","src":"5882:6:15"},"nativeSrc":"5882:105:15","nodeType":"YulFunctionCall","src":"5882:105:15"},"nativeSrc":"5882:105:15","nodeType":"YulExpressionStatement","src":"5882:105:15"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"5724:269:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5777:4:15","nodeType":"YulTypedName","src":"5777:4:15","type":""},{"name":"offset","nativeSrc":"5783:6:15","nodeType":"YulTypedName","src":"5783:6:15","type":""},{"name":"value_0","nativeSrc":"5791:7:15","nodeType":"YulTypedName","src":"5791:7:15","type":""}],"src":"5724:269:15"},{"body":{"nativeSrc":"6048:24:15","nodeType":"YulBlock","src":"6048:24:15","statements":[{"nativeSrc":"6058:8:15","nodeType":"YulAssignment","src":"6058:8:15","value":{"kind":"number","nativeSrc":"6065:1:15","nodeType":"YulLiteral","src":"6065:1:15","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"6058:3:15","nodeType":"YulIdentifier","src":"6058:3:15"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"5999:73:15","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"6044:3:15","nodeType":"YulTypedName","src":"6044:3:15","type":""}],"src":"5999:73:15"},{"body":{"nativeSrc":"6131:136:15","nodeType":"YulBlock","src":"6131:136:15","statements":[{"nativeSrc":"6141:46:15","nodeType":"YulVariableDeclaration","src":"6141:46:15","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"6155:30:15","nodeType":"YulIdentifier","src":"6155:30:15"},"nativeSrc":"6155:32:15","nodeType":"YulFunctionCall","src":"6155:32:15"},"variables":[{"name":"zero_0","nativeSrc":"6145:6:15","nodeType":"YulTypedName","src":"6145:6:15","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6240:4:15","nodeType":"YulIdentifier","src":"6240:4:15"},{"name":"offset","nativeSrc":"6246:6:15","nodeType":"YulIdentifier","src":"6246:6:15"},{"name":"zero_0","nativeSrc":"6254:6:15","nodeType":"YulIdentifier","src":"6254:6:15"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"6196:43:15","nodeType":"YulIdentifier","src":"6196:43:15"},"nativeSrc":"6196:65:15","nodeType":"YulFunctionCall","src":"6196:65:15"},"nativeSrc":"6196:65:15","nodeType":"YulExpressionStatement","src":"6196:65:15"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"6078:189:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"6117:4:15","nodeType":"YulTypedName","src":"6117:4:15","type":""},{"name":"offset","nativeSrc":"6123:6:15","nodeType":"YulTypedName","src":"6123:6:15","type":""}],"src":"6078:189:15"},{"body":{"nativeSrc":"6323:136:15","nodeType":"YulBlock","src":"6323:136:15","statements":[{"body":{"nativeSrc":"6390:63:15","nodeType":"YulBlock","src":"6390:63:15","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"6434:5:15","nodeType":"YulIdentifier","src":"6434:5:15"},{"kind":"number","nativeSrc":"6441:1:15","nodeType":"YulLiteral","src":"6441:1:15","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"6404:29:15","nodeType":"YulIdentifier","src":"6404:29:15"},"nativeSrc":"6404:39:15","nodeType":"YulFunctionCall","src":"6404:39:15"},"nativeSrc":"6404:39:15","nodeType":"YulExpressionStatement","src":"6404:39:15"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"6343:5:15","nodeType":"YulIdentifier","src":"6343:5:15"},{"name":"end","nativeSrc":"6350:3:15","nodeType":"YulIdentifier","src":"6350:3:15"}],"functionName":{"name":"lt","nativeSrc":"6340:2:15","nodeType":"YulIdentifier","src":"6340:2:15"},"nativeSrc":"6340:14:15","nodeType":"YulFunctionCall","src":"6340:14:15"},"nativeSrc":"6333:120:15","nodeType":"YulForLoop","post":{"nativeSrc":"6355:26:15","nodeType":"YulBlock","src":"6355:26:15","statements":[{"nativeSrc":"6357:22:15","nodeType":"YulAssignment","src":"6357:22:15","value":{"arguments":[{"name":"start","nativeSrc":"6370:5:15","nodeType":"YulIdentifier","src":"6370:5:15"},{"kind":"number","nativeSrc":"6377:1:15","nodeType":"YulLiteral","src":"6377:1:15","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6366:3:15","nodeType":"YulIdentifier","src":"6366:3:15"},"nativeSrc":"6366:13:15","nodeType":"YulFunctionCall","src":"6366:13:15"},"variableNames":[{"name":"start","nativeSrc":"6357:5:15","nodeType":"YulIdentifier","src":"6357:5:15"}]}]},"pre":{"nativeSrc":"6337:2:15","nodeType":"YulBlock","src":"6337:2:15","statements":[]},"src":"6333:120:15"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"6273:186:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"6311:5:15","nodeType":"YulTypedName","src":"6311:5:15","type":""},{"name":"end","nativeSrc":"6318:3:15","nodeType":"YulTypedName","src":"6318:3:15","type":""}],"src":"6273:186:15"},{"body":{"nativeSrc":"6544:464:15","nodeType":"YulBlock","src":"6544:464:15","statements":[{"body":{"nativeSrc":"6570:431:15","nodeType":"YulBlock","src":"6570:431:15","statements":[{"nativeSrc":"6584:54:15","nodeType":"YulVariableDeclaration","src":"6584:54:15","value":{"arguments":[{"name":"array","nativeSrc":"6632:5:15","nodeType":"YulIdentifier","src":"6632:5:15"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"6600:31:15","nodeType":"YulIdentifier","src":"6600:31:15"},"nativeSrc":"6600:38:15","nodeType":"YulFunctionCall","src":"6600:38:15"},"variables":[{"name":"dataArea","nativeSrc":"6588:8:15","nodeType":"YulTypedName","src":"6588:8:15","type":""}]},{"nativeSrc":"6651:63:15","nodeType":"YulVariableDeclaration","src":"6651:63:15","value":{"arguments":[{"name":"dataArea","nativeSrc":"6674:8:15","nodeType":"YulIdentifier","src":"6674:8:15"},{"arguments":[{"name":"startIndex","nativeSrc":"6702:10:15","nodeType":"YulIdentifier","src":"6702:10:15"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"6684:17:15","nodeType":"YulIdentifier","src":"6684:17:15"},"nativeSrc":"6684:29:15","nodeType":"YulFunctionCall","src":"6684:29:15"}],"functionName":{"name":"add","nativeSrc":"6670:3:15","nodeType":"YulIdentifier","src":"6670:3:15"},"nativeSrc":"6670:44:15","nodeType":"YulFunctionCall","src":"6670:44:15"},"variables":[{"name":"deleteStart","nativeSrc":"6655:11:15","nodeType":"YulTypedName","src":"6655:11:15","type":""}]},{"body":{"nativeSrc":"6871:27:15","nodeType":"YulBlock","src":"6871:27:15","statements":[{"nativeSrc":"6873:23:15","nodeType":"YulAssignment","src":"6873:23:15","value":{"name":"dataArea","nativeSrc":"6888:8:15","nodeType":"YulIdentifier","src":"6888:8:15"},"variableNames":[{"name":"deleteStart","nativeSrc":"6873:11:15","nodeType":"YulIdentifier","src":"6873:11:15"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"6855:10:15","nodeType":"YulIdentifier","src":"6855:10:15"},{"kind":"number","nativeSrc":"6867:2:15","nodeType":"YulLiteral","src":"6867:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6852:2:15","nodeType":"YulIdentifier","src":"6852:2:15"},"nativeSrc":"6852:18:15","nodeType":"YulFunctionCall","src":"6852:18:15"},"nativeSrc":"6849:49:15","nodeType":"YulIf","src":"6849:49:15"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"6940:11:15","nodeType":"YulIdentifier","src":"6940:11:15"},{"arguments":[{"name":"dataArea","nativeSrc":"6957:8:15","nodeType":"YulIdentifier","src":"6957:8:15"},{"arguments":[{"name":"len","nativeSrc":"6985:3:15","nodeType":"YulIdentifier","src":"6985:3:15"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"6967:17:15","nodeType":"YulIdentifier","src":"6967:17:15"},"nativeSrc":"6967:22:15","nodeType":"YulFunctionCall","src":"6967:22:15"}],"functionName":{"name":"add","nativeSrc":"6953:3:15","nodeType":"YulIdentifier","src":"6953:3:15"},"nativeSrc":"6953:37:15","nodeType":"YulFunctionCall","src":"6953:37:15"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"6911:28:15","nodeType":"YulIdentifier","src":"6911:28:15"},"nativeSrc":"6911:80:15","nodeType":"YulFunctionCall","src":"6911:80:15"},"nativeSrc":"6911:80:15","nodeType":"YulExpressionStatement","src":"6911:80:15"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"6561:3:15","nodeType":"YulIdentifier","src":"6561:3:15"},{"kind":"number","nativeSrc":"6566:2:15","nodeType":"YulLiteral","src":"6566:2:15","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"6558:2:15","nodeType":"YulIdentifier","src":"6558:2:15"},"nativeSrc":"6558:11:15","nodeType":"YulFunctionCall","src":"6558:11:15"},"nativeSrc":"6555:446:15","nodeType":"YulIf","src":"6555:446:15"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"6465:543:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"6520:5:15","nodeType":"YulTypedName","src":"6520:5:15","type":""},{"name":"len","nativeSrc":"6527:3:15","nodeType":"YulTypedName","src":"6527:3:15","type":""},{"name":"startIndex","nativeSrc":"6532:10:15","nodeType":"YulTypedName","src":"6532:10:15","type":""}],"src":"6465:543:15"},{"body":{"nativeSrc":"7077:54:15","nodeType":"YulBlock","src":"7077:54:15","statements":[{"nativeSrc":"7087:37:15","nodeType":"YulAssignment","src":"7087:37:15","value":{"arguments":[{"name":"bits","nativeSrc":"7112:4:15","nodeType":"YulIdentifier","src":"7112:4:15"},{"name":"value","nativeSrc":"7118:5:15","nodeType":"YulIdentifier","src":"7118:5:15"}],"functionName":{"name":"shr","nativeSrc":"7108:3:15","nodeType":"YulIdentifier","src":"7108:3:15"},"nativeSrc":"7108:16:15","nodeType":"YulFunctionCall","src":"7108:16:15"},"variableNames":[{"name":"newValue","nativeSrc":"7087:8:15","nodeType":"YulIdentifier","src":"7087:8:15"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"7014:117:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"7052:4:15","nodeType":"YulTypedName","src":"7052:4:15","type":""},{"name":"value","nativeSrc":"7058:5:15","nodeType":"YulTypedName","src":"7058:5:15","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"7068:8:15","nodeType":"YulTypedName","src":"7068:8:15","type":""}],"src":"7014:117:15"},{"body":{"nativeSrc":"7188:118:15","nodeType":"YulBlock","src":"7188:118:15","statements":[{"nativeSrc":"7198:68:15","nodeType":"YulVariableDeclaration","src":"7198:68:15","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7247:1:15","nodeType":"YulLiteral","src":"7247:1:15","type":"","value":"8"},{"name":"bytes","nativeSrc":"7250:5:15","nodeType":"YulIdentifier","src":"7250:5:15"}],"functionName":{"name":"mul","nativeSrc":"7243:3:15","nodeType":"YulIdentifier","src":"7243:3:15"},"nativeSrc":"7243:13:15","nodeType":"YulFunctionCall","src":"7243:13:15"},{"arguments":[{"kind":"number","nativeSrc":"7262:1:15","nodeType":"YulLiteral","src":"7262:1:15","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"7258:3:15","nodeType":"YulIdentifier","src":"7258:3:15"},"nativeSrc":"7258:6:15","nodeType":"YulFunctionCall","src":"7258:6:15"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"7214:28:15","nodeType":"YulIdentifier","src":"7214:28:15"},"nativeSrc":"7214:51:15","nodeType":"YulFunctionCall","src":"7214:51:15"}],"functionName":{"name":"not","nativeSrc":"7210:3:15","nodeType":"YulIdentifier","src":"7210:3:15"},"nativeSrc":"7210:56:15","nodeType":"YulFunctionCall","src":"7210:56:15"},"variables":[{"name":"mask","nativeSrc":"7202:4:15","nodeType":"YulTypedName","src":"7202:4:15","type":""}]},{"nativeSrc":"7275:25:15","nodeType":"YulAssignment","src":"7275:25:15","value":{"arguments":[{"name":"data","nativeSrc":"7289:4:15","nodeType":"YulIdentifier","src":"7289:4:15"},{"name":"mask","nativeSrc":"7295:4:15","nodeType":"YulIdentifier","src":"7295:4:15"}],"functionName":{"name":"and","nativeSrc":"7285:3:15","nodeType":"YulIdentifier","src":"7285:3:15"},"nativeSrc":"7285:15:15","nodeType":"YulFunctionCall","src":"7285:15:15"},"variableNames":[{"name":"result","nativeSrc":"7275:6:15","nodeType":"YulIdentifier","src":"7275:6:15"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"7137:169:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7165:4:15","nodeType":"YulTypedName","src":"7165:4:15","type":""},{"name":"bytes","nativeSrc":"7171:5:15","nodeType":"YulTypedName","src":"7171:5:15","type":""}],"returnVariables":[{"name":"result","nativeSrc":"7181:6:15","nodeType":"YulTypedName","src":"7181:6:15","type":""}],"src":"7137:169:15"},{"body":{"nativeSrc":"7392:214:15","nodeType":"YulBlock","src":"7392:214:15","statements":[{"nativeSrc":"7525:37:15","nodeType":"YulAssignment","src":"7525:37:15","value":{"arguments":[{"name":"data","nativeSrc":"7552:4:15","nodeType":"YulIdentifier","src":"7552:4:15"},{"name":"len","nativeSrc":"7558:3:15","nodeType":"YulIdentifier","src":"7558:3:15"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"7533:18:15","nodeType":"YulIdentifier","src":"7533:18:15"},"nativeSrc":"7533:29:15","nodeType":"YulFunctionCall","src":"7533:29:15"},"variableNames":[{"name":"data","nativeSrc":"7525:4:15","nodeType":"YulIdentifier","src":"7525:4:15"}]},{"nativeSrc":"7571:29:15","nodeType":"YulAssignment","src":"7571:29:15","value":{"arguments":[{"name":"data","nativeSrc":"7582:4:15","nodeType":"YulIdentifier","src":"7582:4:15"},{"arguments":[{"kind":"number","nativeSrc":"7592:1:15","nodeType":"YulLiteral","src":"7592:1:15","type":"","value":"2"},{"name":"len","nativeSrc":"7595:3:15","nodeType":"YulIdentifier","src":"7595:3:15"}],"functionName":{"name":"mul","nativeSrc":"7588:3:15","nodeType":"YulIdentifier","src":"7588:3:15"},"nativeSrc":"7588:11:15","nodeType":"YulFunctionCall","src":"7588:11:15"}],"functionName":{"name":"or","nativeSrc":"7579:2:15","nodeType":"YulIdentifier","src":"7579:2:15"},"nativeSrc":"7579:21:15","nodeType":"YulFunctionCall","src":"7579:21:15"},"variableNames":[{"name":"used","nativeSrc":"7571:4:15","nodeType":"YulIdentifier","src":"7571:4:15"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"7311:295:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7373:4:15","nodeType":"YulTypedName","src":"7373:4:15","type":""},{"name":"len","nativeSrc":"7379:3:15","nodeType":"YulTypedName","src":"7379:3:15","type":""}],"returnVariables":[{"name":"used","nativeSrc":"7387:4:15","nodeType":"YulTypedName","src":"7387:4:15","type":""}],"src":"7311:295:15"},{"body":{"nativeSrc":"7703:1303:15","nodeType":"YulBlock","src":"7703:1303:15","statements":[{"nativeSrc":"7714:51:15","nodeType":"YulVariableDeclaration","src":"7714:51:15","value":{"arguments":[{"name":"src","nativeSrc":"7761:3:15","nodeType":"YulIdentifier","src":"7761:3:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"7728:32:15","nodeType":"YulIdentifier","src":"7728:32:15"},"nativeSrc":"7728:37:15","nodeType":"YulFunctionCall","src":"7728:37:15"},"variables":[{"name":"newLen","nativeSrc":"7718:6:15","nodeType":"YulTypedName","src":"7718:6:15","type":""}]},{"body":{"nativeSrc":"7850:22:15","nodeType":"YulBlock","src":"7850:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7852:16:15","nodeType":"YulIdentifier","src":"7852:16:15"},"nativeSrc":"7852:18:15","nodeType":"YulFunctionCall","src":"7852:18:15"},"nativeSrc":"7852:18:15","nodeType":"YulExpressionStatement","src":"7852:18:15"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"7822:6:15","nodeType":"YulIdentifier","src":"7822:6:15"},{"kind":"number","nativeSrc":"7830:18:15","nodeType":"YulLiteral","src":"7830:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7819:2:15","nodeType":"YulIdentifier","src":"7819:2:15"},"nativeSrc":"7819:30:15","nodeType":"YulFunctionCall","src":"7819:30:15"},"nativeSrc":"7816:56:15","nodeType":"YulIf","src":"7816:56:15"},{"nativeSrc":"7882:52:15","nodeType":"YulVariableDeclaration","src":"7882:52:15","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"7928:4:15","nodeType":"YulIdentifier","src":"7928:4:15"}],"functionName":{"name":"sload","nativeSrc":"7922:5:15","nodeType":"YulIdentifier","src":"7922:5:15"},"nativeSrc":"7922:11:15","nodeType":"YulFunctionCall","src":"7922:11:15"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"7896:25:15","nodeType":"YulIdentifier","src":"7896:25:15"},"nativeSrc":"7896:38:15","nodeType":"YulFunctionCall","src":"7896:38:15"},"variables":[{"name":"oldLen","nativeSrc":"7886:6:15","nodeType":"YulTypedName","src":"7886:6:15","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8027:4:15","nodeType":"YulIdentifier","src":"8027:4:15"},{"name":"oldLen","nativeSrc":"8033:6:15","nodeType":"YulIdentifier","src":"8033:6:15"},{"name":"newLen","nativeSrc":"8041:6:15","nodeType":"YulIdentifier","src":"8041:6:15"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"7981:45:15","nodeType":"YulIdentifier","src":"7981:45:15"},"nativeSrc":"7981:67:15","nodeType":"YulFunctionCall","src":"7981:67:15"},"nativeSrc":"7981:67:15","nodeType":"YulExpressionStatement","src":"7981:67:15"},{"nativeSrc":"8058:18:15","nodeType":"YulVariableDeclaration","src":"8058:18:15","value":{"kind":"number","nativeSrc":"8075:1:15","nodeType":"YulLiteral","src":"8075:1:15","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"8062:9:15","nodeType":"YulTypedName","src":"8062:9:15","type":""}]},{"nativeSrc":"8086:17:15","nodeType":"YulAssignment","src":"8086:17:15","value":{"kind":"number","nativeSrc":"8099:4:15","nodeType":"YulLiteral","src":"8099:4:15","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"8086:9:15","nodeType":"YulIdentifier","src":"8086:9:15"}]},{"cases":[{"body":{"nativeSrc":"8150:611:15","nodeType":"YulBlock","src":"8150:611:15","statements":[{"nativeSrc":"8164:37:15","nodeType":"YulVariableDeclaration","src":"8164:37:15","value":{"arguments":[{"name":"newLen","nativeSrc":"8183:6:15","nodeType":"YulIdentifier","src":"8183:6:15"},{"arguments":[{"kind":"number","nativeSrc":"8195:4:15","nodeType":"YulLiteral","src":"8195:4:15","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"8191:3:15","nodeType":"YulIdentifier","src":"8191:3:15"},"nativeSrc":"8191:9:15","nodeType":"YulFunctionCall","src":"8191:9:15"}],"functionName":{"name":"and","nativeSrc":"8179:3:15","nodeType":"YulIdentifier","src":"8179:3:15"},"nativeSrc":"8179:22:15","nodeType":"YulFunctionCall","src":"8179:22:15"},"variables":[{"name":"loopEnd","nativeSrc":"8168:7:15","nodeType":"YulTypedName","src":"8168:7:15","type":""}]},{"nativeSrc":"8215:51:15","nodeType":"YulVariableDeclaration","src":"8215:51:15","value":{"arguments":[{"name":"slot","nativeSrc":"8261:4:15","nodeType":"YulIdentifier","src":"8261:4:15"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"8229:31:15","nodeType":"YulIdentifier","src":"8229:31:15"},"nativeSrc":"8229:37:15","nodeType":"YulFunctionCall","src":"8229:37:15"},"variables":[{"name":"dstPtr","nativeSrc":"8219:6:15","nodeType":"YulTypedName","src":"8219:6:15","type":""}]},{"nativeSrc":"8279:10:15","nodeType":"YulVariableDeclaration","src":"8279:10:15","value":{"kind":"number","nativeSrc":"8288:1:15","nodeType":"YulLiteral","src":"8288:1:15","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"8283:1:15","nodeType":"YulTypedName","src":"8283:1:15","type":""}]},{"body":{"nativeSrc":"8347:163:15","nodeType":"YulBlock","src":"8347:163:15","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"8372:6:15","nodeType":"YulIdentifier","src":"8372:6:15"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8390:3:15","nodeType":"YulIdentifier","src":"8390:3:15"},{"name":"srcOffset","nativeSrc":"8395:9:15","nodeType":"YulIdentifier","src":"8395:9:15"}],"functionName":{"name":"add","nativeSrc":"8386:3:15","nodeType":"YulIdentifier","src":"8386:3:15"},"nativeSrc":"8386:19:15","nodeType":"YulFunctionCall","src":"8386:19:15"}],"functionName":{"name":"mload","nativeSrc":"8380:5:15","nodeType":"YulIdentifier","src":"8380:5:15"},"nativeSrc":"8380:26:15","nodeType":"YulFunctionCall","src":"8380:26:15"}],"functionName":{"name":"sstore","nativeSrc":"8365:6:15","nodeType":"YulIdentifier","src":"8365:6:15"},"nativeSrc":"8365:42:15","nodeType":"YulFunctionCall","src":"8365:42:15"},"nativeSrc":"8365:42:15","nodeType":"YulExpressionStatement","src":"8365:42:15"},{"nativeSrc":"8424:24:15","nodeType":"YulAssignment","src":"8424:24:15","value":{"arguments":[{"name":"dstPtr","nativeSrc":"8438:6:15","nodeType":"YulIdentifier","src":"8438:6:15"},{"kind":"number","nativeSrc":"8446:1:15","nodeType":"YulLiteral","src":"8446:1:15","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8434:3:15","nodeType":"YulIdentifier","src":"8434:3:15"},"nativeSrc":"8434:14:15","nodeType":"YulFunctionCall","src":"8434:14:15"},"variableNames":[{"name":"dstPtr","nativeSrc":"8424:6:15","nodeType":"YulIdentifier","src":"8424:6:15"}]},{"nativeSrc":"8465:31:15","nodeType":"YulAssignment","src":"8465:31:15","value":{"arguments":[{"name":"srcOffset","nativeSrc":"8482:9:15","nodeType":"YulIdentifier","src":"8482:9:15"},{"kind":"number","nativeSrc":"8493:2:15","nodeType":"YulLiteral","src":"8493:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8478:3:15","nodeType":"YulIdentifier","src":"8478:3:15"},"nativeSrc":"8478:18:15","nodeType":"YulFunctionCall","src":"8478:18:15"},"variableNames":[{"name":"srcOffset","nativeSrc":"8465:9:15","nodeType":"YulIdentifier","src":"8465:9:15"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"8313:1:15","nodeType":"YulIdentifier","src":"8313:1:15"},{"name":"loopEnd","nativeSrc":"8316:7:15","nodeType":"YulIdentifier","src":"8316:7:15"}],"functionName":{"name":"lt","nativeSrc":"8310:2:15","nodeType":"YulIdentifier","src":"8310:2:15"},"nativeSrc":"8310:14:15","nodeType":"YulFunctionCall","src":"8310:14:15"},"nativeSrc":"8302:208:15","nodeType":"YulForLoop","post":{"nativeSrc":"8325:21:15","nodeType":"YulBlock","src":"8325:21:15","statements":[{"nativeSrc":"8327:17:15","nodeType":"YulAssignment","src":"8327:17:15","value":{"arguments":[{"name":"i","nativeSrc":"8336:1:15","nodeType":"YulIdentifier","src":"8336:1:15"},{"kind":"number","nativeSrc":"8339:4:15","nodeType":"YulLiteral","src":"8339:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8332:3:15","nodeType":"YulIdentifier","src":"8332:3:15"},"nativeSrc":"8332:12:15","nodeType":"YulFunctionCall","src":"8332:12:15"},"variableNames":[{"name":"i","nativeSrc":"8327:1:15","nodeType":"YulIdentifier","src":"8327:1:15"}]}]},"pre":{"nativeSrc":"8306:3:15","nodeType":"YulBlock","src":"8306:3:15","statements":[]},"src":"8302:208:15"},{"body":{"nativeSrc":"8546:156:15","nodeType":"YulBlock","src":"8546:156:15","statements":[{"nativeSrc":"8564:43:15","nodeType":"YulVariableDeclaration","src":"8564:43:15","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8591:3:15","nodeType":"YulIdentifier","src":"8591:3:15"},{"name":"srcOffset","nativeSrc":"8596:9:15","nodeType":"YulIdentifier","src":"8596:9:15"}],"functionName":{"name":"add","nativeSrc":"8587:3:15","nodeType":"YulIdentifier","src":"8587:3:15"},"nativeSrc":"8587:19:15","nodeType":"YulFunctionCall","src":"8587:19:15"}],"functionName":{"name":"mload","nativeSrc":"8581:5:15","nodeType":"YulIdentifier","src":"8581:5:15"},"nativeSrc":"8581:26:15","nodeType":"YulFunctionCall","src":"8581:26:15"},"variables":[{"name":"lastValue","nativeSrc":"8568:9:15","nodeType":"YulTypedName","src":"8568:9:15","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"8631:6:15","nodeType":"YulIdentifier","src":"8631:6:15"},{"arguments":[{"name":"lastValue","nativeSrc":"8658:9:15","nodeType":"YulIdentifier","src":"8658:9:15"},{"arguments":[{"name":"newLen","nativeSrc":"8673:6:15","nodeType":"YulIdentifier","src":"8673:6:15"},{"kind":"number","nativeSrc":"8681:4:15","nodeType":"YulLiteral","src":"8681:4:15","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"8669:3:15","nodeType":"YulIdentifier","src":"8669:3:15"},"nativeSrc":"8669:17:15","nodeType":"YulFunctionCall","src":"8669:17:15"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"8639:18:15","nodeType":"YulIdentifier","src":"8639:18:15"},"nativeSrc":"8639:48:15","nodeType":"YulFunctionCall","src":"8639:48:15"}],"functionName":{"name":"sstore","nativeSrc":"8624:6:15","nodeType":"YulIdentifier","src":"8624:6:15"},"nativeSrc":"8624:64:15","nodeType":"YulFunctionCall","src":"8624:64:15"},"nativeSrc":"8624:64:15","nodeType":"YulExpressionStatement","src":"8624:64:15"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"8529:7:15","nodeType":"YulIdentifier","src":"8529:7:15"},{"name":"newLen","nativeSrc":"8538:6:15","nodeType":"YulIdentifier","src":"8538:6:15"}],"functionName":{"name":"lt","nativeSrc":"8526:2:15","nodeType":"YulIdentifier","src":"8526:2:15"},"nativeSrc":"8526:19:15","nodeType":"YulFunctionCall","src":"8526:19:15"},"nativeSrc":"8523:179:15","nodeType":"YulIf","src":"8523:179:15"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8722:4:15","nodeType":"YulIdentifier","src":"8722:4:15"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"8736:6:15","nodeType":"YulIdentifier","src":"8736:6:15"},{"kind":"number","nativeSrc":"8744:1:15","nodeType":"YulLiteral","src":"8744:1:15","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"8732:3:15","nodeType":"YulIdentifier","src":"8732:3:15"},"nativeSrc":"8732:14:15","nodeType":"YulFunctionCall","src":"8732:14:15"},{"kind":"number","nativeSrc":"8748:1:15","nodeType":"YulLiteral","src":"8748:1:15","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8728:3:15","nodeType":"YulIdentifier","src":"8728:3:15"},"nativeSrc":"8728:22:15","nodeType":"YulFunctionCall","src":"8728:22:15"}],"functionName":{"name":"sstore","nativeSrc":"8715:6:15","nodeType":"YulIdentifier","src":"8715:6:15"},"nativeSrc":"8715:36:15","nodeType":"YulFunctionCall","src":"8715:36:15"},"nativeSrc":"8715:36:15","nodeType":"YulExpressionStatement","src":"8715:36:15"}]},"nativeSrc":"8143:618:15","nodeType":"YulCase","src":"8143:618:15","value":{"kind":"number","nativeSrc":"8148:1:15","nodeType":"YulLiteral","src":"8148:1:15","type":"","value":"1"}},{"body":{"nativeSrc":"8778:222:15","nodeType":"YulBlock","src":"8778:222:15","statements":[{"nativeSrc":"8792:14:15","nodeType":"YulVariableDeclaration","src":"8792:14:15","value":{"kind":"number","nativeSrc":"8805:1:15","nodeType":"YulLiteral","src":"8805:1:15","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"8796:5:15","nodeType":"YulTypedName","src":"8796:5:15","type":""}]},{"body":{"nativeSrc":"8829:67:15","nodeType":"YulBlock","src":"8829:67:15","statements":[{"nativeSrc":"8847:35:15","nodeType":"YulAssignment","src":"8847:35:15","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8866:3:15","nodeType":"YulIdentifier","src":"8866:3:15"},{"name":"srcOffset","nativeSrc":"8871:9:15","nodeType":"YulIdentifier","src":"8871:9:15"}],"functionName":{"name":"add","nativeSrc":"8862:3:15","nodeType":"YulIdentifier","src":"8862:3:15"},"nativeSrc":"8862:19:15","nodeType":"YulFunctionCall","src":"8862:19:15"}],"functionName":{"name":"mload","nativeSrc":"8856:5:15","nodeType":"YulIdentifier","src":"8856:5:15"},"nativeSrc":"8856:26:15","nodeType":"YulFunctionCall","src":"8856:26:15"},"variableNames":[{"name":"value","nativeSrc":"8847:5:15","nodeType":"YulIdentifier","src":"8847:5:15"}]}]},"condition":{"name":"newLen","nativeSrc":"8822:6:15","nodeType":"YulIdentifier","src":"8822:6:15"},"nativeSrc":"8819:77:15","nodeType":"YulIf","src":"8819:77:15"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8916:4:15","nodeType":"YulIdentifier","src":"8916:4:15"},{"arguments":[{"name":"value","nativeSrc":"8975:5:15","nodeType":"YulIdentifier","src":"8975:5:15"},{"name":"newLen","nativeSrc":"8982:6:15","nodeType":"YulIdentifier","src":"8982:6:15"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"8922:52:15","nodeType":"YulIdentifier","src":"8922:52:15"},"nativeSrc":"8922:67:15","nodeType":"YulFunctionCall","src":"8922:67:15"}],"functionName":{"name":"sstore","nativeSrc":"8909:6:15","nodeType":"YulIdentifier","src":"8909:6:15"},"nativeSrc":"8909:81:15","nodeType":"YulFunctionCall","src":"8909:81:15"},"nativeSrc":"8909:81:15","nodeType":"YulExpressionStatement","src":"8909:81:15"}]},"nativeSrc":"8770:230:15","nodeType":"YulCase","src":"8770:230:15","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"8123:6:15","nodeType":"YulIdentifier","src":"8123:6:15"},{"kind":"number","nativeSrc":"8131:2:15","nodeType":"YulLiteral","src":"8131:2:15","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"8120:2:15","nodeType":"YulIdentifier","src":"8120:2:15"},"nativeSrc":"8120:14:15","nodeType":"YulFunctionCall","src":"8120:14:15"},"nativeSrc":"8113:887:15","nodeType":"YulSwitch","src":"8113:887:15"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"7611:1395:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"7692:4:15","nodeType":"YulTypedName","src":"7692:4:15","type":""},{"name":"src","nativeSrc":"7698:3:15","nodeType":"YulTypedName","src":"7698:3:15","type":""}],"src":"7611:1395:15"},{"body":{"nativeSrc":"9057:81:15","nodeType":"YulBlock","src":"9057:81:15","statements":[{"nativeSrc":"9067:65:15","nodeType":"YulAssignment","src":"9067:65:15","value":{"arguments":[{"name":"value","nativeSrc":"9082:5:15","nodeType":"YulIdentifier","src":"9082:5:15"},{"kind":"number","nativeSrc":"9089:42:15","nodeType":"YulLiteral","src":"9089:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"9078:3:15","nodeType":"YulIdentifier","src":"9078:3:15"},"nativeSrc":"9078:54:15","nodeType":"YulFunctionCall","src":"9078:54:15"},"variableNames":[{"name":"cleaned","nativeSrc":"9067:7:15","nodeType":"YulIdentifier","src":"9067:7:15"}]}]},"name":"cleanup_t_uint160","nativeSrc":"9012:126:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9039:5:15","nodeType":"YulTypedName","src":"9039:5:15","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9049:7:15","nodeType":"YulTypedName","src":"9049:7:15","type":""}],"src":"9012:126:15"},{"body":{"nativeSrc":"9189:51:15","nodeType":"YulBlock","src":"9189:51:15","statements":[{"nativeSrc":"9199:35:15","nodeType":"YulAssignment","src":"9199:35:15","value":{"arguments":[{"name":"value","nativeSrc":"9228:5:15","nodeType":"YulIdentifier","src":"9228:5:15"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"9210:17:15","nodeType":"YulIdentifier","src":"9210:17:15"},"nativeSrc":"9210:24:15","nodeType":"YulFunctionCall","src":"9210:24:15"},"variableNames":[{"name":"cleaned","nativeSrc":"9199:7:15","nodeType":"YulIdentifier","src":"9199:7:15"}]}]},"name":"cleanup_t_address","nativeSrc":"9144:96:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9171:5:15","nodeType":"YulTypedName","src":"9171:5:15","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9181:7:15","nodeType":"YulTypedName","src":"9181:7:15","type":""}],"src":"9144:96:15"},{"body":{"nativeSrc":"9311:53:15","nodeType":"YulBlock","src":"9311:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9328:3:15","nodeType":"YulIdentifier","src":"9328:3:15"},{"arguments":[{"name":"value","nativeSrc":"9351:5:15","nodeType":"YulIdentifier","src":"9351:5:15"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"9333:17:15","nodeType":"YulIdentifier","src":"9333:17:15"},"nativeSrc":"9333:24:15","nodeType":"YulFunctionCall","src":"9333:24:15"}],"functionName":{"name":"mstore","nativeSrc":"9321:6:15","nodeType":"YulIdentifier","src":"9321:6:15"},"nativeSrc":"9321:37:15","nodeType":"YulFunctionCall","src":"9321:37:15"},"nativeSrc":"9321:37:15","nodeType":"YulExpressionStatement","src":"9321:37:15"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9246:118:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9299:5:15","nodeType":"YulTypedName","src":"9299:5:15","type":""},{"name":"pos","nativeSrc":"9306:3:15","nodeType":"YulTypedName","src":"9306:3:15","type":""}],"src":"9246:118:15"},{"body":{"nativeSrc":"9468:124:15","nodeType":"YulBlock","src":"9468:124:15","statements":[{"nativeSrc":"9478:26:15","nodeType":"YulAssignment","src":"9478:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"9490:9:15","nodeType":"YulIdentifier","src":"9490:9:15"},{"kind":"number","nativeSrc":"9501:2:15","nodeType":"YulLiteral","src":"9501:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9486:3:15","nodeType":"YulIdentifier","src":"9486:3:15"},"nativeSrc":"9486:18:15","nodeType":"YulFunctionCall","src":"9486:18:15"},"variableNames":[{"name":"tail","nativeSrc":"9478:4:15","nodeType":"YulIdentifier","src":"9478:4:15"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9558:6:15","nodeType":"YulIdentifier","src":"9558:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"9571:9:15","nodeType":"YulIdentifier","src":"9571:9:15"},{"kind":"number","nativeSrc":"9582:1:15","nodeType":"YulLiteral","src":"9582:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9567:3:15","nodeType":"YulIdentifier","src":"9567:3:15"},"nativeSrc":"9567:17:15","nodeType":"YulFunctionCall","src":"9567:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9514:43:15","nodeType":"YulIdentifier","src":"9514:43:15"},"nativeSrc":"9514:71:15","nodeType":"YulFunctionCall","src":"9514:71:15"},"nativeSrc":"9514:71:15","nodeType":"YulExpressionStatement","src":"9514:71:15"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"9370:222:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9440:9:15","nodeType":"YulTypedName","src":"9440:9:15","type":""},{"name":"value0","nativeSrc":"9452:6:15","nodeType":"YulTypedName","src":"9452:6:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9463:4:15","nodeType":"YulTypedName","src":"9463:4:15","type":""}],"src":"9370:222:15"},{"body":{"nativeSrc":"9626:152:15","nodeType":"YulBlock","src":"9626:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9643:1:15","nodeType":"YulLiteral","src":"9643:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"9646:77:15","nodeType":"YulLiteral","src":"9646:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"9636:6:15","nodeType":"YulIdentifier","src":"9636:6:15"},"nativeSrc":"9636:88:15","nodeType":"YulFunctionCall","src":"9636:88:15"},"nativeSrc":"9636:88:15","nodeType":"YulExpressionStatement","src":"9636:88:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9740:1:15","nodeType":"YulLiteral","src":"9740:1:15","type":"","value":"4"},{"kind":"number","nativeSrc":"9743:4:15","nodeType":"YulLiteral","src":"9743:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"9733:6:15","nodeType":"YulIdentifier","src":"9733:6:15"},"nativeSrc":"9733:15:15","nodeType":"YulFunctionCall","src":"9733:15:15"},"nativeSrc":"9733:15:15","nodeType":"YulExpressionStatement","src":"9733:15:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9764:1:15","nodeType":"YulLiteral","src":"9764:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"9767:4:15","nodeType":"YulLiteral","src":"9767:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9757:6:15","nodeType":"YulIdentifier","src":"9757:6:15"},"nativeSrc":"9757:15:15","nodeType":"YulFunctionCall","src":"9757:15:15"},"nativeSrc":"9757:15:15","nodeType":"YulExpressionStatement","src":"9757:15:15"}]},"name":"panic_error_0x11","nativeSrc":"9598:180:15","nodeType":"YulFunctionDefinition","src":"9598:180:15"},{"body":{"nativeSrc":"9828:147:15","nodeType":"YulBlock","src":"9828:147:15","statements":[{"nativeSrc":"9838:25:15","nodeType":"YulAssignment","src":"9838:25:15","value":{"arguments":[{"name":"x","nativeSrc":"9861:1:15","nodeType":"YulIdentifier","src":"9861:1:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9843:17:15","nodeType":"YulIdentifier","src":"9843:17:15"},"nativeSrc":"9843:20:15","nodeType":"YulFunctionCall","src":"9843:20:15"},"variableNames":[{"name":"x","nativeSrc":"9838:1:15","nodeType":"YulIdentifier","src":"9838:1:15"}]},{"nativeSrc":"9872:25:15","nodeType":"YulAssignment","src":"9872:25:15","value":{"arguments":[{"name":"y","nativeSrc":"9895:1:15","nodeType":"YulIdentifier","src":"9895:1:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9877:17:15","nodeType":"YulIdentifier","src":"9877:17:15"},"nativeSrc":"9877:20:15","nodeType":"YulFunctionCall","src":"9877:20:15"},"variableNames":[{"name":"y","nativeSrc":"9872:1:15","nodeType":"YulIdentifier","src":"9872:1:15"}]},{"nativeSrc":"9906:16:15","nodeType":"YulAssignment","src":"9906:16:15","value":{"arguments":[{"name":"x","nativeSrc":"9917:1:15","nodeType":"YulIdentifier","src":"9917:1:15"},{"name":"y","nativeSrc":"9920:1:15","nodeType":"YulIdentifier","src":"9920:1:15"}],"functionName":{"name":"add","nativeSrc":"9913:3:15","nodeType":"YulIdentifier","src":"9913:3:15"},"nativeSrc":"9913:9:15","nodeType":"YulFunctionCall","src":"9913:9:15"},"variableNames":[{"name":"sum","nativeSrc":"9906:3:15","nodeType":"YulIdentifier","src":"9906:3:15"}]},{"body":{"nativeSrc":"9946:22:15","nodeType":"YulBlock","src":"9946:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9948:16:15","nodeType":"YulIdentifier","src":"9948:16:15"},"nativeSrc":"9948:18:15","nodeType":"YulFunctionCall","src":"9948:18:15"},"nativeSrc":"9948:18:15","nodeType":"YulExpressionStatement","src":"9948:18:15"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"9938:1:15","nodeType":"YulIdentifier","src":"9938:1:15"},{"name":"sum","nativeSrc":"9941:3:15","nodeType":"YulIdentifier","src":"9941:3:15"}],"functionName":{"name":"gt","nativeSrc":"9935:2:15","nodeType":"YulIdentifier","src":"9935:2:15"},"nativeSrc":"9935:10:15","nodeType":"YulFunctionCall","src":"9935:10:15"},"nativeSrc":"9932:36:15","nodeType":"YulIf","src":"9932:36:15"}]},"name":"checked_add_t_uint256","nativeSrc":"9784:191:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9815:1:15","nodeType":"YulTypedName","src":"9815:1:15","type":""},{"name":"y","nativeSrc":"9818:1:15","nodeType":"YulTypedName","src":"9818:1:15","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"9824:3:15","nodeType":"YulTypedName","src":"9824:3:15","type":""}],"src":"9784:191:15"},{"body":{"nativeSrc":"10046:53:15","nodeType":"YulBlock","src":"10046:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10063:3:15","nodeType":"YulIdentifier","src":"10063:3:15"},{"arguments":[{"name":"value","nativeSrc":"10086:5:15","nodeType":"YulIdentifier","src":"10086:5:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10068:17:15","nodeType":"YulIdentifier","src":"10068:17:15"},"nativeSrc":"10068:24:15","nodeType":"YulFunctionCall","src":"10068:24:15"}],"functionName":{"name":"mstore","nativeSrc":"10056:6:15","nodeType":"YulIdentifier","src":"10056:6:15"},"nativeSrc":"10056:37:15","nodeType":"YulFunctionCall","src":"10056:37:15"},"nativeSrc":"10056:37:15","nodeType":"YulExpressionStatement","src":"10056:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9981:118:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10034:5:15","nodeType":"YulTypedName","src":"10034:5:15","type":""},{"name":"pos","nativeSrc":"10041:3:15","nodeType":"YulTypedName","src":"10041:3:15","type":""}],"src":"9981:118:15"},{"body":{"nativeSrc":"10259:288:15","nodeType":"YulBlock","src":"10259:288:15","statements":[{"nativeSrc":"10269:26:15","nodeType":"YulAssignment","src":"10269:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"10281:9:15","nodeType":"YulIdentifier","src":"10281:9:15"},{"kind":"number","nativeSrc":"10292:2:15","nodeType":"YulLiteral","src":"10292:2:15","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10277:3:15","nodeType":"YulIdentifier","src":"10277:3:15"},"nativeSrc":"10277:18:15","nodeType":"YulFunctionCall","src":"10277:18:15"},"variableNames":[{"name":"tail","nativeSrc":"10269:4:15","nodeType":"YulIdentifier","src":"10269:4:15"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10349:6:15","nodeType":"YulIdentifier","src":"10349:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"10362:9:15","nodeType":"YulIdentifier","src":"10362:9:15"},{"kind":"number","nativeSrc":"10373:1:15","nodeType":"YulLiteral","src":"10373:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10358:3:15","nodeType":"YulIdentifier","src":"10358:3:15"},"nativeSrc":"10358:17:15","nodeType":"YulFunctionCall","src":"10358:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10305:43:15","nodeType":"YulIdentifier","src":"10305:43:15"},"nativeSrc":"10305:71:15","nodeType":"YulFunctionCall","src":"10305:71:15"},"nativeSrc":"10305:71:15","nodeType":"YulExpressionStatement","src":"10305:71:15"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10430:6:15","nodeType":"YulIdentifier","src":"10430:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"10443:9:15","nodeType":"YulIdentifier","src":"10443:9:15"},{"kind":"number","nativeSrc":"10454:2:15","nodeType":"YulLiteral","src":"10454:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10439:3:15","nodeType":"YulIdentifier","src":"10439:3:15"},"nativeSrc":"10439:18:15","nodeType":"YulFunctionCall","src":"10439:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10386:43:15","nodeType":"YulIdentifier","src":"10386:43:15"},"nativeSrc":"10386:72:15","nodeType":"YulFunctionCall","src":"10386:72:15"},"nativeSrc":"10386:72:15","nodeType":"YulExpressionStatement","src":"10386:72:15"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"10512:6:15","nodeType":"YulIdentifier","src":"10512:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"10525:9:15","nodeType":"YulIdentifier","src":"10525:9:15"},{"kind":"number","nativeSrc":"10536:2:15","nodeType":"YulLiteral","src":"10536:2:15","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10521:3:15","nodeType":"YulIdentifier","src":"10521:3:15"},"nativeSrc":"10521:18:15","nodeType":"YulFunctionCall","src":"10521:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10468:43:15","nodeType":"YulIdentifier","src":"10468:43:15"},"nativeSrc":"10468:72:15","nodeType":"YulFunctionCall","src":"10468:72:15"},"nativeSrc":"10468:72:15","nodeType":"YulExpressionStatement","src":"10468:72:15"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"10105:442:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10215:9:15","nodeType":"YulTypedName","src":"10215:9:15","type":""},{"name":"value2","nativeSrc":"10227:6:15","nodeType":"YulTypedName","src":"10227:6:15","type":""},{"name":"value1","nativeSrc":"10235:6:15","nodeType":"YulTypedName","src":"10235:6:15","type":""},{"name":"value0","nativeSrc":"10243:6:15","nodeType":"YulTypedName","src":"10243:6:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10254:4:15","nodeType":"YulTypedName","src":"10254:4:15","type":""}],"src":"10105:442:15"},{"body":{"nativeSrc":"10651:124:15","nodeType":"YulBlock","src":"10651:124:15","statements":[{"nativeSrc":"10661:26:15","nodeType":"YulAssignment","src":"10661:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"10673:9:15","nodeType":"YulIdentifier","src":"10673:9:15"},{"kind":"number","nativeSrc":"10684:2:15","nodeType":"YulLiteral","src":"10684:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10669:3:15","nodeType":"YulIdentifier","src":"10669:3:15"},"nativeSrc":"10669:18:15","nodeType":"YulFunctionCall","src":"10669:18:15"},"variableNames":[{"name":"tail","nativeSrc":"10661:4:15","nodeType":"YulIdentifier","src":"10661:4:15"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10741:6:15","nodeType":"YulIdentifier","src":"10741:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"10754:9:15","nodeType":"YulIdentifier","src":"10754:9:15"},{"kind":"number","nativeSrc":"10765:1:15","nodeType":"YulLiteral","src":"10765:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10750:3:15","nodeType":"YulIdentifier","src":"10750:3:15"},"nativeSrc":"10750:17:15","nodeType":"YulFunctionCall","src":"10750:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10697:43:15","nodeType":"YulIdentifier","src":"10697:43:15"},"nativeSrc":"10697:71:15","nodeType":"YulFunctionCall","src":"10697:71:15"},"nativeSrc":"10697:71:15","nodeType":"YulExpressionStatement","src":"10697:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"10553:222:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10623:9:15","nodeType":"YulTypedName","src":"10623:9:15","type":""},{"name":"value0","nativeSrc":"10635:6:15","nodeType":"YulTypedName","src":"10635:6:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10646:4:15","nodeType":"YulTypedName","src":"10646:4:15","type":""}],"src":"10553:222:15"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516117bf3803806117bf833981810160405281019061003291906104c6565b828281600390816100439190610768565b5080600490816100539190610768565b505050610066338261006e60201b60201c565b50505061095a565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036100e05760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016100d7919061087b565b60405180910390fd5b6100f2600083836100f660201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361014857806002600082825461013c91906108c5565b9250508190555061021b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156101d4578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016101cb93929190610908565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361026457806002600082825403925050819055506102b1565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161030e919061093f565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61038282610339565b810181811067ffffffffffffffff821117156103a1576103a061034a565b5b80604052505050565b60006103b461031b565b90506103c08282610379565b919050565b600067ffffffffffffffff8211156103e0576103df61034a565b5b6103e982610339565b9050602081019050919050565b60005b838110156104145780820151818401526020810190506103f9565b60008484015250505050565b600061043361042e846103c5565b6103aa565b90508281526020810184848401111561044f5761044e610334565b5b61045a8482856103f6565b509392505050565b600082601f8301126104775761047661032f565b5b8151610487848260208601610420565b91505092915050565b6000819050919050565b6104a381610490565b81146104ae57600080fd5b50565b6000815190506104c08161049a565b92915050565b6000806000606084860312156104df576104de610325565b5b600084015167ffffffffffffffff8111156104fd576104fc61032a565b5b61050986828701610462565b935050602084015167ffffffffffffffff81111561052a5761052961032a565b5b61053686828701610462565b9250506040610547868287016104b1565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806105a357607f821691505b6020821081036105b6576105b561055c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261061e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826105e1565b61062886836105e1565b95508019841693508086168417925050509392505050565b6000819050919050565b600061066561066061065b84610490565b610640565b610490565b9050919050565b6000819050919050565b61067f8361064a565b61069361068b8261066c565b8484546105ee565b825550505050565b600090565b6106a861069b565b6106b3818484610676565b505050565b5b818110156106d7576106cc6000826106a0565b6001810190506106b9565b5050565b601f82111561071c576106ed816105bc565b6106f6846105d1565b81016020851015610705578190505b610719610711856105d1565b8301826106b8565b50505b505050565b600082821c905092915050565b600061073f60001984600802610721565b1980831691505092915050565b6000610758838361072e565b9150826002028217905092915050565b61077182610551565b67ffffffffffffffff81111561078a5761078961034a565b5b610794825461058b565b61079f8282856106db565b600060209050601f8311600181146107d257600084156107c0578287015190505b6107ca858261074c565b865550610832565b601f1984166107e0866105bc565b60005b82811015610808578489015182556001820191506020850194506020810190506107e3565b868310156108255784890151610821601f89168261072e565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108658261083a565b9050919050565b6108758161085a565b82525050565b6000602082019050610890600083018461086c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108d082610490565b91506108db83610490565b92508282019050808211156108f3576108f2610896565b5b92915050565b61090281610490565b82525050565b600060608201905061091d600083018661086c565b61092a60208301856108f9565b61093760408301846108f9565b949350505050565b600060208201905061095460008301846108f9565b92915050565b610e56806109696000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad9190610aaa565b60405180910390f35b6100d060048036038101906100cb9190610b65565b610292565b6040516100dd9190610bc0565b60405180910390f35b6100ee6102b5565b6040516100fb9190610bea565b60405180910390f35b61011e60048036038101906101199190610c05565b6102bf565b60405161012b9190610bc0565b60405180910390f35b61013c6102ee565b6040516101499190610c74565b60405180910390f35b61016c60048036038101906101679190610c8f565b6102f7565b6040516101799190610bea565b60405180910390f35b61018a61033f565b6040516101979190610aaa565b60405180910390f35b6101ba60048036038101906101b59190610b65565b6103d1565b6040516101c79190610bc0565b60405180910390f35b6101ea60048036038101906101e59190610cbc565b6103f4565b6040516101f79190610bea565b60405180910390f35b60606003805461020f90610d2b565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610d2b565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b60008061029d61047b565b90506102aa818585610483565b600191505092915050565b6000600254905090565b6000806102ca61047b565b90506102d7858285610495565b6102e285858561052a565b60019150509392505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461034e90610d2b565b80601f016020809104026020016040519081016040528092919081815260200182805461037a90610d2b565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6000806103dc61047b565b90506103e981858561052a565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b610490838383600161061e565b505050565b60006104a184846103f4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156105245781811015610514578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161050b93929190610d6b565b60405180910390fd5b6105238484848403600061061e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361059c5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105939190610da2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361060e5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106059190610da2565b60405180910390fd5b6106198383836107f5565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036106905760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106879190610da2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107025760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106f99190610da2565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156107ef578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107e69190610bea565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084757806002600082825461083b9190610dec565b9250508190555061091a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156108d3578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108ca93929190610d6b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361096357806002600082825403925050819055506109b0565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a0d9190610bea565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a54578082015181840152602081019050610a39565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a7c82610a1a565b610a868185610a25565b9350610a96818560208601610a36565b610a9f81610a60565b840191505092915050565b60006020820190508181036000830152610ac48184610a71565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610afc82610ad1565b9050919050565b610b0c81610af1565b8114610b1757600080fd5b50565b600081359050610b2981610b03565b92915050565b6000819050919050565b610b4281610b2f565b8114610b4d57600080fd5b50565b600081359050610b5f81610b39565b92915050565b60008060408385031215610b7c57610b7b610acc565b5b6000610b8a85828601610b1a565b9250506020610b9b85828601610b50565b9150509250929050565b60008115159050919050565b610bba81610ba5565b82525050565b6000602082019050610bd56000830184610bb1565b92915050565b610be481610b2f565b82525050565b6000602082019050610bff6000830184610bdb565b92915050565b600080600060608486031215610c1e57610c1d610acc565b5b6000610c2c86828701610b1a565b9350506020610c3d86828701610b1a565b9250506040610c4e86828701610b50565b9150509250925092565b600060ff82169050919050565b610c6e81610c58565b82525050565b6000602082019050610c896000830184610c65565b92915050565b600060208284031215610ca557610ca4610acc565b5b6000610cb384828501610b1a565b91505092915050565b60008060408385031215610cd357610cd2610acc565b5b6000610ce185828601610b1a565b9250506020610cf285828601610b1a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d4357607f821691505b602082108103610d5657610d55610cfc565b5b50919050565b610d6581610af1565b82525050565b6000606082019050610d806000830186610d5c565b610d8d6020830185610bdb565b610d9a6040830184610bdb565b949350505050565b6000602082019050610db76000830184610d5c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df782610b2f565b9150610e0283610b2f565b9250828201905080821115610e1a57610e19610dbd565b5b9291505056fea2646970667358221220102374c4624662d49703cb134e358dd40615eee39f627521b37c4de23c6138f264736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x17BF CODESIZE SUB DUP1 PUSH2 0x17BF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x4C6 JUMP JUMPDEST DUP3 DUP3 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x768 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x53 SWAP2 SWAP1 PUSH2 0x768 JUMP JUMPDEST POP POP POP PUSH2 0x66 CALLER DUP3 PUSH2 0x6E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH2 0x95A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF2 PUSH1 0x0 DUP4 DUP4 PUSH2 0xF6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x148 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x8C5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x21B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1D4 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x264 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2B1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x93F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x382 DUP3 PUSH2 0x339 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3A1 JUMPI PUSH2 0x3A0 PUSH2 0x34A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B4 PUSH2 0x31B JUMP JUMPDEST SWAP1 POP PUSH2 0x3C0 DUP3 DUP3 PUSH2 0x379 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3E0 JUMPI PUSH2 0x3DF PUSH2 0x34A JUMP JUMPDEST JUMPDEST PUSH2 0x3E9 DUP3 PUSH2 0x339 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x414 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x42E DUP5 PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x3AA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x44F JUMPI PUSH2 0x44E PUSH2 0x334 JUMP JUMPDEST JUMPDEST PUSH2 0x45A DUP5 DUP3 DUP6 PUSH2 0x3F6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x477 JUMPI PUSH2 0x476 PUSH2 0x32F JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x487 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x420 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A3 DUP2 PUSH2 0x490 JUMP JUMPDEST DUP2 EQ PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4C0 DUP2 PUSH2 0x49A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4DF JUMPI PUSH2 0x4DE PUSH2 0x325 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4FD JUMPI PUSH2 0x4FC PUSH2 0x32A JUMP JUMPDEST JUMPDEST PUSH2 0x509 DUP7 DUP3 DUP8 ADD PUSH2 0x462 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x52A JUMPI PUSH2 0x529 PUSH2 0x32A JUMP JUMPDEST JUMPDEST PUSH2 0x536 DUP7 DUP3 DUP8 ADD PUSH2 0x462 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x547 DUP7 DUP3 DUP8 ADD PUSH2 0x4B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x5A3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x5B6 JUMPI PUSH2 0x5B5 PUSH2 0x55C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x61E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x5E1 JUMP JUMPDEST PUSH2 0x628 DUP7 DUP4 PUSH2 0x5E1 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x665 PUSH2 0x660 PUSH2 0x65B DUP5 PUSH2 0x490 JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST PUSH2 0x490 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x67F DUP4 PUSH2 0x64A JUMP JUMPDEST PUSH2 0x693 PUSH2 0x68B DUP3 PUSH2 0x66C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5EE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x6A8 PUSH2 0x69B JUMP JUMPDEST PUSH2 0x6B3 DUP2 DUP5 DUP5 PUSH2 0x676 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6D7 JUMPI PUSH2 0x6CC PUSH1 0x0 DUP3 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6B9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x71C JUMPI PUSH2 0x6ED DUP2 PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x6F6 DUP5 PUSH2 0x5D1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x705 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x719 PUSH2 0x711 DUP6 PUSH2 0x5D1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x6B8 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73F PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x721 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x758 DUP4 DUP4 PUSH2 0x72E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x771 DUP3 PUSH2 0x551 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x78A JUMPI PUSH2 0x789 PUSH2 0x34A JUMP JUMPDEST JUMPDEST PUSH2 0x794 DUP3 SLOAD PUSH2 0x58B JUMP JUMPDEST PUSH2 0x79F DUP3 DUP3 DUP6 PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x7D2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x7C0 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x7CA DUP6 DUP3 PUSH2 0x74C JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x832 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x7E0 DUP7 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x808 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7E3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x825 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x821 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x72E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x865 DUP3 PUSH2 0x83A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x875 DUP2 PUSH2 0x85A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x890 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x86C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8D0 DUP3 PUSH2 0x490 JUMP JUMPDEST SWAP2 POP PUSH2 0x8DB DUP4 PUSH2 0x490 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x8F3 JUMPI PUSH2 0x8F2 PUSH2 0x896 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x902 DUP2 PUSH2 0x490 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x91D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x92A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x8F9 JUMP JUMPDEST PUSH2 0x937 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x8F9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x954 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE56 DUP1 PUSH2 0x969 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xC05 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0xCBC JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29D PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA DUP2 DUP6 DUP6 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CA PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2D7 DUP6 DUP3 DUP6 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x2E2 DUP6 DUP6 DUP6 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37A SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3DC PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x3E9 DUP2 DUP6 DUP6 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x490 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x61E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A1 DUP5 DUP5 PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x524 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x514 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x523 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x61E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x59C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x593 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x60E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x605 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x619 DUP4 DUP4 DUP4 PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x690 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x687 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x702 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7EF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7E6 SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x847 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x83B SWAP2 SWAP1 PUSH2 0xDEC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x91A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8D3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x963 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9B0 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA0D SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA54 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7C DUP3 PUSH2 0xA1A JUMP JUMPDEST PUSH2 0xA86 DUP2 DUP6 PUSH2 0xA25 JUMP JUMPDEST SWAP4 POP PUSH2 0xA96 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA36 JUMP JUMPDEST PUSH2 0xA9F DUP2 PUSH2 0xA60 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAC4 DUP2 DUP5 PUSH2 0xA71 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFC DUP3 PUSH2 0xAD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB0C DUP2 PUSH2 0xAF1 JUMP JUMPDEST DUP2 EQ PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB29 DUP2 PUSH2 0xB03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB42 DUP2 PUSH2 0xB2F JUMP JUMPDEST DUP2 EQ PUSH2 0xB4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB5F DUP2 PUSH2 0xB39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7C JUMPI PUSH2 0xB7B PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB8A DUP6 DUP3 DUP7 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB9B DUP6 DUP3 DUP7 ADD PUSH2 0xB50 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBA DUP2 PUSH2 0xBA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBE4 DUP2 PUSH2 0xB2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBFF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC1E JUMPI PUSH2 0xC1D PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC2C DUP7 DUP3 DUP8 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC3D DUP7 DUP3 DUP8 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC4E DUP7 DUP3 DUP8 ADD PUSH2 0xB50 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6E DUP2 PUSH2 0xC58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC89 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA5 JUMPI PUSH2 0xCA4 PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCB3 DUP5 DUP3 DUP6 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCD3 JUMPI PUSH2 0xCD2 PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCE1 DUP6 DUP3 DUP7 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCF2 DUP6 DUP3 DUP7 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD43 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD56 JUMPI PUSH2 0xD55 PUSH2 0xCFC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD65 DUP2 PUSH2 0xAF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD80 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD5C JUMP JUMPDEST PUSH2 0xD8D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBDB JUMP JUMPDEST PUSH2 0xD9A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBDB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF7 DUP3 PUSH2 0xB2F JUMP JUMPDEST SWAP2 POP PUSH2 0xE02 DUP4 PUSH2 0xB2F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1A JUMPI PUSH2 0xE19 PUSH2 0xDBD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0x23 PUSH21 0xC4624662D49703CB134E358DD40615EEE39F627521 0xB3 PUSH29 0x4DE23C6138F264736F6C634300081C0033000000000000000000000000 ","sourceMap":"114:182:13:-:0;;;148:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;231:4;237:6;1656:5:4;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;255:32:13::1;261:10;273:13;255:5;;;:32;;:::i;:::-;148:146:::0;;;114:182;;7439:208:4;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;;;:35;;:::i;:::-;7439:208;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:75:15:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:248::-;1692:1;1702:113;1716:6;1713:1;1710:13;1702:113;;;1801:1;1796:3;1792:11;1786:18;1782:1;1777:3;1773:11;1766:39;1738:2;1735:1;1731:10;1726:15;;1702:113;;;1849:1;1840:6;1835:3;1831:16;1824:27;1672:186;1610:248;;;:::o;1864:434::-;1953:5;1978:66;1994:49;2036:6;1994:49;:::i;:::-;1978:66;:::i;:::-;1969:75;;2067:6;2060:5;2053:21;2105:4;2098:5;2094:16;2143:3;2134:6;2129:3;2125:16;2122:25;2119:112;;;2150:79;;:::i;:::-;2119:112;2240:52;2285:6;2280:3;2275;2240:52;:::i;:::-;1959:339;1864:434;;;;;:::o;2318:355::-;2385:5;2434:3;2427:4;2419:6;2415:17;2411:27;2401:122;;2442:79;;:::i;:::-;2401:122;2552:6;2546:13;2577:90;2663:3;2655:6;2648:4;2640:6;2636:17;2577:90;:::i;:::-;2568:99;;2391:282;2318:355;;;;:::o;2679:77::-;2716:7;2745:5;2734:16;;2679:77;;;:::o;2762:122::-;2835:24;2853:5;2835:24;:::i;:::-;2828:5;2825:35;2815:63;;2874:1;2871;2864:12;2815:63;2762:122;:::o;2890:143::-;2947:5;2978:6;2972:13;2963:22;;2994:33;3021:5;2994:33;:::i;:::-;2890:143;;;;:::o;3039:1009::-;3147:6;3155;3163;3212:2;3200:9;3191:7;3187:23;3183:32;3180:119;;;3218:79;;:::i;:::-;3180:119;3359:1;3348:9;3344:17;3338:24;3389:18;3381:6;3378:30;3375:117;;;3411:79;;:::i;:::-;3375:117;3516:74;3582:7;3573:6;3562:9;3558:22;3516:74;:::i;:::-;3506:84;;3309:291;3660:2;3649:9;3645:18;3639:25;3691:18;3683:6;3680:30;3677:117;;;3713:79;;:::i;:::-;3677:117;3818:74;3884:7;3875:6;3864:9;3860:22;3818:74;:::i;:::-;3808:84;;3610:292;3941:2;3967:64;4023:7;4014:6;4003:9;3999:22;3967:64;:::i;:::-;3957:74;;3912:129;3039:1009;;;;;:::o;4054:99::-;4106:6;4140:5;4134:12;4124:22;;4054:99;;;:::o;4159:180::-;4207:77;4204:1;4197:88;4304:4;4301:1;4294:15;4328:4;4325:1;4318:15;4345:320;4389:6;4426:1;4420:4;4416:12;4406:22;;4473:1;4467:4;4463:12;4494:18;4484:81;;4550:4;4542:6;4538:17;4528:27;;4484:81;4612:2;4604:6;4601:14;4581:18;4578:38;4575:84;;4631:18;;:::i;:::-;4575:84;4396:269;4345:320;;;:::o;4671:141::-;4720:4;4743:3;4735:11;;4766:3;4763:1;4756:14;4800:4;4797:1;4787:18;4779:26;;4671:141;;;:::o;4818:93::-;4855:6;4902:2;4897;4890:5;4886:14;4882:23;4872:33;;4818:93;;;:::o;4917:107::-;4961:8;5011:5;5005:4;5001:16;4980:37;;4917:107;;;;:::o;5030:393::-;5099:6;5149:1;5137:10;5133:18;5172:97;5202:66;5191:9;5172:97;:::i;:::-;5290:39;5320:8;5309:9;5290:39;:::i;:::-;5278:51;;5362:4;5358:9;5351:5;5347:21;5338:30;;5411:4;5401:8;5397:19;5390:5;5387:30;5377:40;;5106:317;;5030:393;;;;;:::o;5429:60::-;5457:3;5478:5;5471:12;;5429:60;;;:::o;5495:142::-;5545:9;5578:53;5596:34;5605:24;5623:5;5605:24;:::i;:::-;5596:34;:::i;:::-;5578:53;:::i;:::-;5565:66;;5495:142;;;:::o;5643:75::-;5686:3;5707:5;5700:12;;5643:75;;;:::o;5724:269::-;5834:39;5865:7;5834:39;:::i;:::-;5895:91;5944:41;5968:16;5944:41;:::i;:::-;5936:6;5929:4;5923:11;5895:91;:::i;:::-;5889:4;5882:105;5800:193;5724:269;;;:::o;5999:73::-;6044:3;5999:73;:::o;6078:189::-;6155:32;;:::i;:::-;6196:65;6254:6;6246;6240:4;6196:65;:::i;:::-;6131:136;6078:189;;:::o;6273:186::-;6333:120;6350:3;6343:5;6340:14;6333:120;;;6404:39;6441:1;6434:5;6404:39;:::i;:::-;6377:1;6370:5;6366:13;6357:22;;6333:120;;;6273:186;;:::o;6465:543::-;6566:2;6561:3;6558:11;6555:446;;;6600:38;6632:5;6600:38;:::i;:::-;6684:29;6702:10;6684:29;:::i;:::-;6674:8;6670:44;6867:2;6855:10;6852:18;6849:49;;;6888:8;6873:23;;6849:49;6911:80;6967:22;6985:3;6967:22;:::i;:::-;6957:8;6953:37;6940:11;6911:80;:::i;:::-;6570:431;;6555:446;6465:543;;;:::o;7014:117::-;7068:8;7118:5;7112:4;7108:16;7087:37;;7014:117;;;;:::o;7137:169::-;7181:6;7214:51;7262:1;7258:6;7250:5;7247:1;7243:13;7214:51;:::i;:::-;7210:56;7295:4;7289;7285:15;7275:25;;7188:118;7137:169;;;;:::o;7311:295::-;7387:4;7533:29;7558:3;7552:4;7533:29;:::i;:::-;7525:37;;7595:3;7592:1;7588:11;7582:4;7579:21;7571:29;;7311:295;;;;:::o;7611:1395::-;7728:37;7761:3;7728:37;:::i;:::-;7830:18;7822:6;7819:30;7816:56;;;7852:18;;:::i;:::-;7816:56;7896:38;7928:4;7922:11;7896:38;:::i;:::-;7981:67;8041:6;8033;8027:4;7981:67;:::i;:::-;8075:1;8099:4;8086:17;;8131:2;8123:6;8120:14;8148:1;8143:618;;;;8805:1;8822:6;8819:77;;;8871:9;8866:3;8862:19;8856:26;8847:35;;8819:77;8922:67;8982:6;8975:5;8922:67;:::i;:::-;8916:4;8909:81;8778:222;8113:887;;8143:618;8195:4;8191:9;8183:6;8179:22;8229:37;8261:4;8229:37;:::i;:::-;8288:1;8302:208;8316:7;8313:1;8310:14;8302:208;;;8395:9;8390:3;8386:19;8380:26;8372:6;8365:42;8446:1;8438:6;8434:14;8424:24;;8493:2;8482:9;8478:18;8465:31;;8339:4;8336:1;8332:12;8327:17;;8302:208;;;8538:6;8529:7;8526:19;8523:179;;;8596:9;8591:3;8587:19;8581:26;8639:48;8681:4;8673:6;8669:17;8658:9;8639:48;:::i;:::-;8631:6;8624:64;8546:156;8523:179;8748:1;8744;8736:6;8732:14;8728:22;8722:4;8715:36;8150:611;;;8113:887;;7703:1303;;;7611:1395;;:::o;9012:126::-;9049:7;9089:42;9082:5;9078:54;9067:65;;9012:126;;;:::o;9144:96::-;9181:7;9210:24;9228:5;9210:24;:::i;:::-;9199:35;;9144:96;;;:::o;9246:118::-;9333:24;9351:5;9333:24;:::i;:::-;9328:3;9321:37;9246:118;;:::o;9370:222::-;9463:4;9501:2;9490:9;9486:18;9478:26;;9514:71;9582:1;9571:9;9567:17;9558:6;9514:71;:::i;:::-;9370:222;;;;:::o;9598:180::-;9646:77;9643:1;9636:88;9743:4;9740:1;9733:15;9767:4;9764:1;9757:15;9784:191;9824:3;9843:20;9861:1;9843:20;:::i;:::-;9838:25;;9877:20;9895:1;9877:20;:::i;:::-;9872:25;;9920:1;9917;9913:9;9906:16;;9941:3;9938:1;9935:10;9932:36;;;9948:18;;:::i;:::-;9932:36;9784:191;;;;:::o;9981:118::-;10068:24;10086:5;10068:24;:::i;:::-;10063:3;10056:37;9981:118;;:::o;10105:442::-;10254:4;10292:2;10281:9;10277:18;10269:26;;10305:71;10373:1;10362:9;10358:17;10349:6;10305:71;:::i;:::-;10386:72;10454:2;10443:9;10439:18;10430:6;10386:72;:::i;:::-;10468;10536:2;10525:9;10521:18;10512:6;10468:72;:::i;:::-;10105:442;;;;;;:::o;10553:222::-;10646:4;10684:2;10673:9;10669:18;10661:26;;10697:71;10765:1;10754:9;10750:17;10741:6;10697:71;:::i;:::-;10553:222;;;;:::o;114:182:13:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_632":{"entryPoint":1155,"id":632,"parameterSlots":3,"returnSlots":0},"@_approve_692":{"entryPoint":1566,"id":692,"parameterSlots":4,"returnSlots":0},"@_msgSender_1321":{"entryPoint":1147,"id":1321,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_740":{"entryPoint":1173,"id":740,"parameterSlots":3,"returnSlots":0},"@_transfer_471":{"entryPoint":1322,"id":471,"parameterSlots":3,"returnSlots":0},"@_update_548":{"entryPoint":2037,"id":548,"parameterSlots":3,"returnSlots":0},"@allowance_368":{"entryPoint":1012,"id":368,"parameterSlots":2,"returnSlots":1},"@approve_392":{"entryPoint":658,"id":392,"parameterSlots":2,"returnSlots":1},"@balanceOf_327":{"entryPoint":759,"id":327,"parameterSlots":1,"returnSlots":1},"@decimals_305":{"entryPoint":750,"id":305,"parameterSlots":0,"returnSlots":1},"@name_287":{"entryPoint":512,"id":287,"parameterSlots":0,"returnSlots":1},"@symbol_296":{"entryPoint":831,"id":296,"parameterSlots":0,"returnSlots":1},"@totalSupply_314":{"entryPoint":693,"id":314,"parameterSlots":0,"returnSlots":1},"@transferFrom_424":{"entryPoint":703,"id":424,"parameterSlots":3,"returnSlots":1},"@transfer_351":{"entryPoint":977,"id":351,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2842,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2896,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3215,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3260,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3077,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2917,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3420,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2993,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2673,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3035,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3173,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3490,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3435,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3008,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2730,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3050,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3188,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2586,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2597,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3564,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2801,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2981,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2769,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2863,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3160,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2614,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3371,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3517,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3324,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2764,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2656,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":2819,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2873,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:7362:15","nodeType":"YulBlock","src":"0:7362:15","statements":[{"body":{"nativeSrc":"66:40:15","nodeType":"YulBlock","src":"66:40:15","statements":[{"nativeSrc":"77:22:15","nodeType":"YulAssignment","src":"77:22:15","value":{"arguments":[{"name":"value","nativeSrc":"93:5:15","nodeType":"YulIdentifier","src":"93:5:15"}],"functionName":{"name":"mload","nativeSrc":"87:5:15","nodeType":"YulIdentifier","src":"87:5:15"},"nativeSrc":"87:12:15","nodeType":"YulFunctionCall","src":"87:12:15"},"variableNames":[{"name":"length","nativeSrc":"77:6:15","nodeType":"YulIdentifier","src":"77:6:15"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:15","nodeType":"YulTypedName","src":"49:5:15","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:15","nodeType":"YulTypedName","src":"59:6:15","type":""}],"src":"7:99:15"},{"body":{"nativeSrc":"208:73:15","nodeType":"YulBlock","src":"208:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:15","nodeType":"YulIdentifier","src":"225:3:15"},{"name":"length","nativeSrc":"230:6:15","nodeType":"YulIdentifier","src":"230:6:15"}],"functionName":{"name":"mstore","nativeSrc":"218:6:15","nodeType":"YulIdentifier","src":"218:6:15"},"nativeSrc":"218:19:15","nodeType":"YulFunctionCall","src":"218:19:15"},"nativeSrc":"218:19:15","nodeType":"YulExpressionStatement","src":"218:19:15"},{"nativeSrc":"246:29:15","nodeType":"YulAssignment","src":"246:29:15","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:15","nodeType":"YulIdentifier","src":"265:3:15"},{"kind":"number","nativeSrc":"270:4:15","nodeType":"YulLiteral","src":"270:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:15","nodeType":"YulIdentifier","src":"261:3:15"},"nativeSrc":"261:14:15","nodeType":"YulFunctionCall","src":"261:14:15"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:15","nodeType":"YulIdentifier","src":"246:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:15","nodeType":"YulTypedName","src":"180:3:15","type":""},{"name":"length","nativeSrc":"185:6:15","nodeType":"YulTypedName","src":"185:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:15","nodeType":"YulTypedName","src":"196:11:15","type":""}],"src":"112:169:15"},{"body":{"nativeSrc":"349:186:15","nodeType":"YulBlock","src":"349:186:15","statements":[{"nativeSrc":"360:10:15","nodeType":"YulVariableDeclaration","src":"360:10:15","value":{"kind":"number","nativeSrc":"369:1:15","nodeType":"YulLiteral","src":"369:1:15","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"364:1:15","nodeType":"YulTypedName","src":"364:1:15","type":""}]},{"body":{"nativeSrc":"429:63:15","nodeType":"YulBlock","src":"429:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"454:3:15","nodeType":"YulIdentifier","src":"454:3:15"},{"name":"i","nativeSrc":"459:1:15","nodeType":"YulIdentifier","src":"459:1:15"}],"functionName":{"name":"add","nativeSrc":"450:3:15","nodeType":"YulIdentifier","src":"450:3:15"},"nativeSrc":"450:11:15","nodeType":"YulFunctionCall","src":"450:11:15"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"473:3:15","nodeType":"YulIdentifier","src":"473:3:15"},{"name":"i","nativeSrc":"478:1:15","nodeType":"YulIdentifier","src":"478:1:15"}],"functionName":{"name":"add","nativeSrc":"469:3:15","nodeType":"YulIdentifier","src":"469:3:15"},"nativeSrc":"469:11:15","nodeType":"YulFunctionCall","src":"469:11:15"}],"functionName":{"name":"mload","nativeSrc":"463:5:15","nodeType":"YulIdentifier","src":"463:5:15"},"nativeSrc":"463:18:15","nodeType":"YulFunctionCall","src":"463:18:15"}],"functionName":{"name":"mstore","nativeSrc":"443:6:15","nodeType":"YulIdentifier","src":"443:6:15"},"nativeSrc":"443:39:15","nodeType":"YulFunctionCall","src":"443:39:15"},"nativeSrc":"443:39:15","nodeType":"YulExpressionStatement","src":"443:39:15"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"390:1:15","nodeType":"YulIdentifier","src":"390:1:15"},{"name":"length","nativeSrc":"393:6:15","nodeType":"YulIdentifier","src":"393:6:15"}],"functionName":{"name":"lt","nativeSrc":"387:2:15","nodeType":"YulIdentifier","src":"387:2:15"},"nativeSrc":"387:13:15","nodeType":"YulFunctionCall","src":"387:13:15"},"nativeSrc":"379:113:15","nodeType":"YulForLoop","post":{"nativeSrc":"401:19:15","nodeType":"YulBlock","src":"401:19:15","statements":[{"nativeSrc":"403:15:15","nodeType":"YulAssignment","src":"403:15:15","value":{"arguments":[{"name":"i","nativeSrc":"412:1:15","nodeType":"YulIdentifier","src":"412:1:15"},{"kind":"number","nativeSrc":"415:2:15","nodeType":"YulLiteral","src":"415:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"408:3:15","nodeType":"YulIdentifier","src":"408:3:15"},"nativeSrc":"408:10:15","nodeType":"YulFunctionCall","src":"408:10:15"},"variableNames":[{"name":"i","nativeSrc":"403:1:15","nodeType":"YulIdentifier","src":"403:1:15"}]}]},"pre":{"nativeSrc":"383:3:15","nodeType":"YulBlock","src":"383:3:15","statements":[]},"src":"379:113:15"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"512:3:15","nodeType":"YulIdentifier","src":"512:3:15"},{"name":"length","nativeSrc":"517:6:15","nodeType":"YulIdentifier","src":"517:6:15"}],"functionName":{"name":"add","nativeSrc":"508:3:15","nodeType":"YulIdentifier","src":"508:3:15"},"nativeSrc":"508:16:15","nodeType":"YulFunctionCall","src":"508:16:15"},{"kind":"number","nativeSrc":"526:1:15","nodeType":"YulLiteral","src":"526:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"501:6:15","nodeType":"YulIdentifier","src":"501:6:15"},"nativeSrc":"501:27:15","nodeType":"YulFunctionCall","src":"501:27:15"},"nativeSrc":"501:27:15","nodeType":"YulExpressionStatement","src":"501:27:15"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:248:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:15","nodeType":"YulTypedName","src":"331:3:15","type":""},{"name":"dst","nativeSrc":"336:3:15","nodeType":"YulTypedName","src":"336:3:15","type":""},{"name":"length","nativeSrc":"341:6:15","nodeType":"YulTypedName","src":"341:6:15","type":""}],"src":"287:248:15"},{"body":{"nativeSrc":"589:54:15","nodeType":"YulBlock","src":"589:54:15","statements":[{"nativeSrc":"599:38:15","nodeType":"YulAssignment","src":"599:38:15","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"617:5:15","nodeType":"YulIdentifier","src":"617:5:15"},{"kind":"number","nativeSrc":"624:2:15","nodeType":"YulLiteral","src":"624:2:15","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"613:3:15","nodeType":"YulIdentifier","src":"613:3:15"},"nativeSrc":"613:14:15","nodeType":"YulFunctionCall","src":"613:14:15"},{"arguments":[{"kind":"number","nativeSrc":"633:2:15","nodeType":"YulLiteral","src":"633:2:15","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"629:3:15","nodeType":"YulIdentifier","src":"629:3:15"},"nativeSrc":"629:7:15","nodeType":"YulFunctionCall","src":"629:7:15"}],"functionName":{"name":"and","nativeSrc":"609:3:15","nodeType":"YulIdentifier","src":"609:3:15"},"nativeSrc":"609:28:15","nodeType":"YulFunctionCall","src":"609:28:15"},"variableNames":[{"name":"result","nativeSrc":"599:6:15","nodeType":"YulIdentifier","src":"599:6:15"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"541:102:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"572:5:15","nodeType":"YulTypedName","src":"572:5:15","type":""}],"returnVariables":[{"name":"result","nativeSrc":"582:6:15","nodeType":"YulTypedName","src":"582:6:15","type":""}],"src":"541:102:15"},{"body":{"nativeSrc":"741:285:15","nodeType":"YulBlock","src":"741:285:15","statements":[{"nativeSrc":"751:53:15","nodeType":"YulVariableDeclaration","src":"751:53:15","value":{"arguments":[{"name":"value","nativeSrc":"798:5:15","nodeType":"YulIdentifier","src":"798:5:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"765:32:15","nodeType":"YulIdentifier","src":"765:32:15"},"nativeSrc":"765:39:15","nodeType":"YulFunctionCall","src":"765:39:15"},"variables":[{"name":"length","nativeSrc":"755:6:15","nodeType":"YulTypedName","src":"755:6:15","type":""}]},{"nativeSrc":"813:78:15","nodeType":"YulAssignment","src":"813:78:15","value":{"arguments":[{"name":"pos","nativeSrc":"879:3:15","nodeType":"YulIdentifier","src":"879:3:15"},{"name":"length","nativeSrc":"884:6:15","nodeType":"YulIdentifier","src":"884:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"820:58:15","nodeType":"YulIdentifier","src":"820:58:15"},"nativeSrc":"820:71:15","nodeType":"YulFunctionCall","src":"820:71:15"},"variableNames":[{"name":"pos","nativeSrc":"813:3:15","nodeType":"YulIdentifier","src":"813:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"939:5:15","nodeType":"YulIdentifier","src":"939:5:15"},{"kind":"number","nativeSrc":"946:4:15","nodeType":"YulLiteral","src":"946:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"935:3:15","nodeType":"YulIdentifier","src":"935:3:15"},"nativeSrc":"935:16:15","nodeType":"YulFunctionCall","src":"935:16:15"},{"name":"pos","nativeSrc":"953:3:15","nodeType":"YulIdentifier","src":"953:3:15"},{"name":"length","nativeSrc":"958:6:15","nodeType":"YulIdentifier","src":"958:6:15"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"900:34:15","nodeType":"YulIdentifier","src":"900:34:15"},"nativeSrc":"900:65:15","nodeType":"YulFunctionCall","src":"900:65:15"},"nativeSrc":"900:65:15","nodeType":"YulExpressionStatement","src":"900:65:15"},{"nativeSrc":"974:46:15","nodeType":"YulAssignment","src":"974:46:15","value":{"arguments":[{"name":"pos","nativeSrc":"985:3:15","nodeType":"YulIdentifier","src":"985:3:15"},{"arguments":[{"name":"length","nativeSrc":"1012:6:15","nodeType":"YulIdentifier","src":"1012:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"990:21:15","nodeType":"YulIdentifier","src":"990:21:15"},"nativeSrc":"990:29:15","nodeType":"YulFunctionCall","src":"990:29:15"}],"functionName":{"name":"add","nativeSrc":"981:3:15","nodeType":"YulIdentifier","src":"981:3:15"},"nativeSrc":"981:39:15","nodeType":"YulFunctionCall","src":"981:39:15"},"variableNames":[{"name":"end","nativeSrc":"974:3:15","nodeType":"YulIdentifier","src":"974:3:15"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"649:377:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"722:5:15","nodeType":"YulTypedName","src":"722:5:15","type":""},{"name":"pos","nativeSrc":"729:3:15","nodeType":"YulTypedName","src":"729:3:15","type":""}],"returnVariables":[{"name":"end","nativeSrc":"737:3:15","nodeType":"YulTypedName","src":"737:3:15","type":""}],"src":"649:377:15"},{"body":{"nativeSrc":"1150:195:15","nodeType":"YulBlock","src":"1150:195:15","statements":[{"nativeSrc":"1160:26:15","nodeType":"YulAssignment","src":"1160:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"1172:9:15","nodeType":"YulIdentifier","src":"1172:9:15"},{"kind":"number","nativeSrc":"1183:2:15","nodeType":"YulLiteral","src":"1183:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1168:3:15","nodeType":"YulIdentifier","src":"1168:3:15"},"nativeSrc":"1168:18:15","nodeType":"YulFunctionCall","src":"1168:18:15"},"variableNames":[{"name":"tail","nativeSrc":"1160:4:15","nodeType":"YulIdentifier","src":"1160:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1207:9:15","nodeType":"YulIdentifier","src":"1207:9:15"},{"kind":"number","nativeSrc":"1218:1:15","nodeType":"YulLiteral","src":"1218:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1203:3:15","nodeType":"YulIdentifier","src":"1203:3:15"},"nativeSrc":"1203:17:15","nodeType":"YulFunctionCall","src":"1203:17:15"},{"arguments":[{"name":"tail","nativeSrc":"1226:4:15","nodeType":"YulIdentifier","src":"1226:4:15"},{"name":"headStart","nativeSrc":"1232:9:15","nodeType":"YulIdentifier","src":"1232:9:15"}],"functionName":{"name":"sub","nativeSrc":"1222:3:15","nodeType":"YulIdentifier","src":"1222:3:15"},"nativeSrc":"1222:20:15","nodeType":"YulFunctionCall","src":"1222:20:15"}],"functionName":{"name":"mstore","nativeSrc":"1196:6:15","nodeType":"YulIdentifier","src":"1196:6:15"},"nativeSrc":"1196:47:15","nodeType":"YulFunctionCall","src":"1196:47:15"},"nativeSrc":"1196:47:15","nodeType":"YulExpressionStatement","src":"1196:47:15"},{"nativeSrc":"1252:86:15","nodeType":"YulAssignment","src":"1252:86:15","value":{"arguments":[{"name":"value0","nativeSrc":"1324:6:15","nodeType":"YulIdentifier","src":"1324:6:15"},{"name":"tail","nativeSrc":"1333:4:15","nodeType":"YulIdentifier","src":"1333:4:15"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1260:63:15","nodeType":"YulIdentifier","src":"1260:63:15"},"nativeSrc":"1260:78:15","nodeType":"YulFunctionCall","src":"1260:78:15"},"variableNames":[{"name":"tail","nativeSrc":"1252:4:15","nodeType":"YulIdentifier","src":"1252:4:15"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1032:313:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1122:9:15","nodeType":"YulTypedName","src":"1122:9:15","type":""},{"name":"value0","nativeSrc":"1134:6:15","nodeType":"YulTypedName","src":"1134:6:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1145:4:15","nodeType":"YulTypedName","src":"1145:4:15","type":""}],"src":"1032:313:15"},{"body":{"nativeSrc":"1391:35:15","nodeType":"YulBlock","src":"1391:35:15","statements":[{"nativeSrc":"1401:19:15","nodeType":"YulAssignment","src":"1401:19:15","value":{"arguments":[{"kind":"number","nativeSrc":"1417:2:15","nodeType":"YulLiteral","src":"1417:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1411:5:15","nodeType":"YulIdentifier","src":"1411:5:15"},"nativeSrc":"1411:9:15","nodeType":"YulFunctionCall","src":"1411:9:15"},"variableNames":[{"name":"memPtr","nativeSrc":"1401:6:15","nodeType":"YulIdentifier","src":"1401:6:15"}]}]},"name":"allocate_unbounded","nativeSrc":"1351:75:15","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1384:6:15","nodeType":"YulTypedName","src":"1384:6:15","type":""}],"src":"1351:75:15"},{"body":{"nativeSrc":"1521:28:15","nodeType":"YulBlock","src":"1521:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1538:1:15","nodeType":"YulLiteral","src":"1538:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"1541:1:15","nodeType":"YulLiteral","src":"1541:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1531:6:15","nodeType":"YulIdentifier","src":"1531:6:15"},"nativeSrc":"1531:12:15","nodeType":"YulFunctionCall","src":"1531:12:15"},"nativeSrc":"1531:12:15","nodeType":"YulExpressionStatement","src":"1531:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1432:117:15","nodeType":"YulFunctionDefinition","src":"1432:117:15"},{"body":{"nativeSrc":"1644:28:15","nodeType":"YulBlock","src":"1644:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1661:1:15","nodeType":"YulLiteral","src":"1661:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"1664:1:15","nodeType":"YulLiteral","src":"1664:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1654:6:15","nodeType":"YulIdentifier","src":"1654:6:15"},"nativeSrc":"1654:12:15","nodeType":"YulFunctionCall","src":"1654:12:15"},"nativeSrc":"1654:12:15","nodeType":"YulExpressionStatement","src":"1654:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1555:117:15","nodeType":"YulFunctionDefinition","src":"1555:117:15"},{"body":{"nativeSrc":"1723:81:15","nodeType":"YulBlock","src":"1723:81:15","statements":[{"nativeSrc":"1733:65:15","nodeType":"YulAssignment","src":"1733:65:15","value":{"arguments":[{"name":"value","nativeSrc":"1748:5:15","nodeType":"YulIdentifier","src":"1748:5:15"},{"kind":"number","nativeSrc":"1755:42:15","nodeType":"YulLiteral","src":"1755:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1744:3:15","nodeType":"YulIdentifier","src":"1744:3:15"},"nativeSrc":"1744:54:15","nodeType":"YulFunctionCall","src":"1744:54:15"},"variableNames":[{"name":"cleaned","nativeSrc":"1733:7:15","nodeType":"YulIdentifier","src":"1733:7:15"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1678:126:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1705:5:15","nodeType":"YulTypedName","src":"1705:5:15","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1715:7:15","nodeType":"YulTypedName","src":"1715:7:15","type":""}],"src":"1678:126:15"},{"body":{"nativeSrc":"1855:51:15","nodeType":"YulBlock","src":"1855:51:15","statements":[{"nativeSrc":"1865:35:15","nodeType":"YulAssignment","src":"1865:35:15","value":{"arguments":[{"name":"value","nativeSrc":"1894:5:15","nodeType":"YulIdentifier","src":"1894:5:15"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1876:17:15","nodeType":"YulIdentifier","src":"1876:17:15"},"nativeSrc":"1876:24:15","nodeType":"YulFunctionCall","src":"1876:24:15"},"variableNames":[{"name":"cleaned","nativeSrc":"1865:7:15","nodeType":"YulIdentifier","src":"1865:7:15"}]}]},"name":"cleanup_t_address","nativeSrc":"1810:96:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1837:5:15","nodeType":"YulTypedName","src":"1837:5:15","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1847:7:15","nodeType":"YulTypedName","src":"1847:7:15","type":""}],"src":"1810:96:15"},{"body":{"nativeSrc":"1955:79:15","nodeType":"YulBlock","src":"1955:79:15","statements":[{"body":{"nativeSrc":"2012:16:15","nodeType":"YulBlock","src":"2012:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2021:1:15","nodeType":"YulLiteral","src":"2021:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"2024:1:15","nodeType":"YulLiteral","src":"2024:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2014:6:15","nodeType":"YulIdentifier","src":"2014:6:15"},"nativeSrc":"2014:12:15","nodeType":"YulFunctionCall","src":"2014:12:15"},"nativeSrc":"2014:12:15","nodeType":"YulExpressionStatement","src":"2014:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1978:5:15","nodeType":"YulIdentifier","src":"1978:5:15"},{"arguments":[{"name":"value","nativeSrc":"2003:5:15","nodeType":"YulIdentifier","src":"2003:5:15"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1985:17:15","nodeType":"YulIdentifier","src":"1985:17:15"},"nativeSrc":"1985:24:15","nodeType":"YulFunctionCall","src":"1985:24:15"}],"functionName":{"name":"eq","nativeSrc":"1975:2:15","nodeType":"YulIdentifier","src":"1975:2:15"},"nativeSrc":"1975:35:15","nodeType":"YulFunctionCall","src":"1975:35:15"}],"functionName":{"name":"iszero","nativeSrc":"1968:6:15","nodeType":"YulIdentifier","src":"1968:6:15"},"nativeSrc":"1968:43:15","nodeType":"YulFunctionCall","src":"1968:43:15"},"nativeSrc":"1965:63:15","nodeType":"YulIf","src":"1965:63:15"}]},"name":"validator_revert_t_address","nativeSrc":"1912:122:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1948:5:15","nodeType":"YulTypedName","src":"1948:5:15","type":""}],"src":"1912:122:15"},{"body":{"nativeSrc":"2092:87:15","nodeType":"YulBlock","src":"2092:87:15","statements":[{"nativeSrc":"2102:29:15","nodeType":"YulAssignment","src":"2102:29:15","value":{"arguments":[{"name":"offset","nativeSrc":"2124:6:15","nodeType":"YulIdentifier","src":"2124:6:15"}],"functionName":{"name":"calldataload","nativeSrc":"2111:12:15","nodeType":"YulIdentifier","src":"2111:12:15"},"nativeSrc":"2111:20:15","nodeType":"YulFunctionCall","src":"2111:20:15"},"variableNames":[{"name":"value","nativeSrc":"2102:5:15","nodeType":"YulIdentifier","src":"2102:5:15"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2167:5:15","nodeType":"YulIdentifier","src":"2167:5:15"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2140:26:15","nodeType":"YulIdentifier","src":"2140:26:15"},"nativeSrc":"2140:33:15","nodeType":"YulFunctionCall","src":"2140:33:15"},"nativeSrc":"2140:33:15","nodeType":"YulExpressionStatement","src":"2140:33:15"}]},"name":"abi_decode_t_address","nativeSrc":"2040:139:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2070:6:15","nodeType":"YulTypedName","src":"2070:6:15","type":""},{"name":"end","nativeSrc":"2078:3:15","nodeType":"YulTypedName","src":"2078:3:15","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2086:5:15","nodeType":"YulTypedName","src":"2086:5:15","type":""}],"src":"2040:139:15"},{"body":{"nativeSrc":"2230:32:15","nodeType":"YulBlock","src":"2230:32:15","statements":[{"nativeSrc":"2240:16:15","nodeType":"YulAssignment","src":"2240:16:15","value":{"name":"value","nativeSrc":"2251:5:15","nodeType":"YulIdentifier","src":"2251:5:15"},"variableNames":[{"name":"cleaned","nativeSrc":"2240:7:15","nodeType":"YulIdentifier","src":"2240:7:15"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2185:77:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2212:5:15","nodeType":"YulTypedName","src":"2212:5:15","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2222:7:15","nodeType":"YulTypedName","src":"2222:7:15","type":""}],"src":"2185:77:15"},{"body":{"nativeSrc":"2311:79:15","nodeType":"YulBlock","src":"2311:79:15","statements":[{"body":{"nativeSrc":"2368:16:15","nodeType":"YulBlock","src":"2368:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2377:1:15","nodeType":"YulLiteral","src":"2377:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"2380:1:15","nodeType":"YulLiteral","src":"2380:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2370:6:15","nodeType":"YulIdentifier","src":"2370:6:15"},"nativeSrc":"2370:12:15","nodeType":"YulFunctionCall","src":"2370:12:15"},"nativeSrc":"2370:12:15","nodeType":"YulExpressionStatement","src":"2370:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2334:5:15","nodeType":"YulIdentifier","src":"2334:5:15"},{"arguments":[{"name":"value","nativeSrc":"2359:5:15","nodeType":"YulIdentifier","src":"2359:5:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2341:17:15","nodeType":"YulIdentifier","src":"2341:17:15"},"nativeSrc":"2341:24:15","nodeType":"YulFunctionCall","src":"2341:24:15"}],"functionName":{"name":"eq","nativeSrc":"2331:2:15","nodeType":"YulIdentifier","src":"2331:2:15"},"nativeSrc":"2331:35:15","nodeType":"YulFunctionCall","src":"2331:35:15"}],"functionName":{"name":"iszero","nativeSrc":"2324:6:15","nodeType":"YulIdentifier","src":"2324:6:15"},"nativeSrc":"2324:43:15","nodeType":"YulFunctionCall","src":"2324:43:15"},"nativeSrc":"2321:63:15","nodeType":"YulIf","src":"2321:63:15"}]},"name":"validator_revert_t_uint256","nativeSrc":"2268:122:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2304:5:15","nodeType":"YulTypedName","src":"2304:5:15","type":""}],"src":"2268:122:15"},{"body":{"nativeSrc":"2448:87:15","nodeType":"YulBlock","src":"2448:87:15","statements":[{"nativeSrc":"2458:29:15","nodeType":"YulAssignment","src":"2458:29:15","value":{"arguments":[{"name":"offset","nativeSrc":"2480:6:15","nodeType":"YulIdentifier","src":"2480:6:15"}],"functionName":{"name":"calldataload","nativeSrc":"2467:12:15","nodeType":"YulIdentifier","src":"2467:12:15"},"nativeSrc":"2467:20:15","nodeType":"YulFunctionCall","src":"2467:20:15"},"variableNames":[{"name":"value","nativeSrc":"2458:5:15","nodeType":"YulIdentifier","src":"2458:5:15"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2523:5:15","nodeType":"YulIdentifier","src":"2523:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2496:26:15","nodeType":"YulIdentifier","src":"2496:26:15"},"nativeSrc":"2496:33:15","nodeType":"YulFunctionCall","src":"2496:33:15"},"nativeSrc":"2496:33:15","nodeType":"YulExpressionStatement","src":"2496:33:15"}]},"name":"abi_decode_t_uint256","nativeSrc":"2396:139:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2426:6:15","nodeType":"YulTypedName","src":"2426:6:15","type":""},{"name":"end","nativeSrc":"2434:3:15","nodeType":"YulTypedName","src":"2434:3:15","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2442:5:15","nodeType":"YulTypedName","src":"2442:5:15","type":""}],"src":"2396:139:15"},{"body":{"nativeSrc":"2624:391:15","nodeType":"YulBlock","src":"2624:391:15","statements":[{"body":{"nativeSrc":"2670:83:15","nodeType":"YulBlock","src":"2670:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2672:77:15","nodeType":"YulIdentifier","src":"2672:77:15"},"nativeSrc":"2672:79:15","nodeType":"YulFunctionCall","src":"2672:79:15"},"nativeSrc":"2672:79:15","nodeType":"YulExpressionStatement","src":"2672:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2645:7:15","nodeType":"YulIdentifier","src":"2645:7:15"},{"name":"headStart","nativeSrc":"2654:9:15","nodeType":"YulIdentifier","src":"2654:9:15"}],"functionName":{"name":"sub","nativeSrc":"2641:3:15","nodeType":"YulIdentifier","src":"2641:3:15"},"nativeSrc":"2641:23:15","nodeType":"YulFunctionCall","src":"2641:23:15"},{"kind":"number","nativeSrc":"2666:2:15","nodeType":"YulLiteral","src":"2666:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2637:3:15","nodeType":"YulIdentifier","src":"2637:3:15"},"nativeSrc":"2637:32:15","nodeType":"YulFunctionCall","src":"2637:32:15"},"nativeSrc":"2634:119:15","nodeType":"YulIf","src":"2634:119:15"},{"nativeSrc":"2763:117:15","nodeType":"YulBlock","src":"2763:117:15","statements":[{"nativeSrc":"2778:15:15","nodeType":"YulVariableDeclaration","src":"2778:15:15","value":{"kind":"number","nativeSrc":"2792:1:15","nodeType":"YulLiteral","src":"2792:1:15","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2782:6:15","nodeType":"YulTypedName","src":"2782:6:15","type":""}]},{"nativeSrc":"2807:63:15","nodeType":"YulAssignment","src":"2807:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2842:9:15","nodeType":"YulIdentifier","src":"2842:9:15"},{"name":"offset","nativeSrc":"2853:6:15","nodeType":"YulIdentifier","src":"2853:6:15"}],"functionName":{"name":"add","nativeSrc":"2838:3:15","nodeType":"YulIdentifier","src":"2838:3:15"},"nativeSrc":"2838:22:15","nodeType":"YulFunctionCall","src":"2838:22:15"},{"name":"dataEnd","nativeSrc":"2862:7:15","nodeType":"YulIdentifier","src":"2862:7:15"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2817:20:15","nodeType":"YulIdentifier","src":"2817:20:15"},"nativeSrc":"2817:53:15","nodeType":"YulFunctionCall","src":"2817:53:15"},"variableNames":[{"name":"value0","nativeSrc":"2807:6:15","nodeType":"YulIdentifier","src":"2807:6:15"}]}]},{"nativeSrc":"2890:118:15","nodeType":"YulBlock","src":"2890:118:15","statements":[{"nativeSrc":"2905:16:15","nodeType":"YulVariableDeclaration","src":"2905:16:15","value":{"kind":"number","nativeSrc":"2919:2:15","nodeType":"YulLiteral","src":"2919:2:15","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2909:6:15","nodeType":"YulTypedName","src":"2909:6:15","type":""}]},{"nativeSrc":"2935:63:15","nodeType":"YulAssignment","src":"2935:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2970:9:15","nodeType":"YulIdentifier","src":"2970:9:15"},{"name":"offset","nativeSrc":"2981:6:15","nodeType":"YulIdentifier","src":"2981:6:15"}],"functionName":{"name":"add","nativeSrc":"2966:3:15","nodeType":"YulIdentifier","src":"2966:3:15"},"nativeSrc":"2966:22:15","nodeType":"YulFunctionCall","src":"2966:22:15"},{"name":"dataEnd","nativeSrc":"2990:7:15","nodeType":"YulIdentifier","src":"2990:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2945:20:15","nodeType":"YulIdentifier","src":"2945:20:15"},"nativeSrc":"2945:53:15","nodeType":"YulFunctionCall","src":"2945:53:15"},"variableNames":[{"name":"value1","nativeSrc":"2935:6:15","nodeType":"YulIdentifier","src":"2935:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2541:474:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2586:9:15","nodeType":"YulTypedName","src":"2586:9:15","type":""},{"name":"dataEnd","nativeSrc":"2597:7:15","nodeType":"YulTypedName","src":"2597:7:15","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2609:6:15","nodeType":"YulTypedName","src":"2609:6:15","type":""},{"name":"value1","nativeSrc":"2617:6:15","nodeType":"YulTypedName","src":"2617:6:15","type":""}],"src":"2541:474:15"},{"body":{"nativeSrc":"3063:48:15","nodeType":"YulBlock","src":"3063:48:15","statements":[{"nativeSrc":"3073:32:15","nodeType":"YulAssignment","src":"3073:32:15","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3098:5:15","nodeType":"YulIdentifier","src":"3098:5:15"}],"functionName":{"name":"iszero","nativeSrc":"3091:6:15","nodeType":"YulIdentifier","src":"3091:6:15"},"nativeSrc":"3091:13:15","nodeType":"YulFunctionCall","src":"3091:13:15"}],"functionName":{"name":"iszero","nativeSrc":"3084:6:15","nodeType":"YulIdentifier","src":"3084:6:15"},"nativeSrc":"3084:21:15","nodeType":"YulFunctionCall","src":"3084:21:15"},"variableNames":[{"name":"cleaned","nativeSrc":"3073:7:15","nodeType":"YulIdentifier","src":"3073:7:15"}]}]},"name":"cleanup_t_bool","nativeSrc":"3021:90:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3045:5:15","nodeType":"YulTypedName","src":"3045:5:15","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3055:7:15","nodeType":"YulTypedName","src":"3055:7:15","type":""}],"src":"3021:90:15"},{"body":{"nativeSrc":"3176:50:15","nodeType":"YulBlock","src":"3176:50:15","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3193:3:15","nodeType":"YulIdentifier","src":"3193:3:15"},{"arguments":[{"name":"value","nativeSrc":"3213:5:15","nodeType":"YulIdentifier","src":"3213:5:15"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3198:14:15","nodeType":"YulIdentifier","src":"3198:14:15"},"nativeSrc":"3198:21:15","nodeType":"YulFunctionCall","src":"3198:21:15"}],"functionName":{"name":"mstore","nativeSrc":"3186:6:15","nodeType":"YulIdentifier","src":"3186:6:15"},"nativeSrc":"3186:34:15","nodeType":"YulFunctionCall","src":"3186:34:15"},"nativeSrc":"3186:34:15","nodeType":"YulExpressionStatement","src":"3186:34:15"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3117:109:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3164:5:15","nodeType":"YulTypedName","src":"3164:5:15","type":""},{"name":"pos","nativeSrc":"3171:3:15","nodeType":"YulTypedName","src":"3171:3:15","type":""}],"src":"3117:109:15"},{"body":{"nativeSrc":"3324:118:15","nodeType":"YulBlock","src":"3324:118:15","statements":[{"nativeSrc":"3334:26:15","nodeType":"YulAssignment","src":"3334:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"3346:9:15","nodeType":"YulIdentifier","src":"3346:9:15"},{"kind":"number","nativeSrc":"3357:2:15","nodeType":"YulLiteral","src":"3357:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3342:3:15","nodeType":"YulIdentifier","src":"3342:3:15"},"nativeSrc":"3342:18:15","nodeType":"YulFunctionCall","src":"3342:18:15"},"variableNames":[{"name":"tail","nativeSrc":"3334:4:15","nodeType":"YulIdentifier","src":"3334:4:15"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3408:6:15","nodeType":"YulIdentifier","src":"3408:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"3421:9:15","nodeType":"YulIdentifier","src":"3421:9:15"},{"kind":"number","nativeSrc":"3432:1:15","nodeType":"YulLiteral","src":"3432:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3417:3:15","nodeType":"YulIdentifier","src":"3417:3:15"},"nativeSrc":"3417:17:15","nodeType":"YulFunctionCall","src":"3417:17:15"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3370:37:15","nodeType":"YulIdentifier","src":"3370:37:15"},"nativeSrc":"3370:65:15","nodeType":"YulFunctionCall","src":"3370:65:15"},"nativeSrc":"3370:65:15","nodeType":"YulExpressionStatement","src":"3370:65:15"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3232:210:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3296:9:15","nodeType":"YulTypedName","src":"3296:9:15","type":""},{"name":"value0","nativeSrc":"3308:6:15","nodeType":"YulTypedName","src":"3308:6:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3319:4:15","nodeType":"YulTypedName","src":"3319:4:15","type":""}],"src":"3232:210:15"},{"body":{"nativeSrc":"3513:53:15","nodeType":"YulBlock","src":"3513:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3530:3:15","nodeType":"YulIdentifier","src":"3530:3:15"},{"arguments":[{"name":"value","nativeSrc":"3553:5:15","nodeType":"YulIdentifier","src":"3553:5:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3535:17:15","nodeType":"YulIdentifier","src":"3535:17:15"},"nativeSrc":"3535:24:15","nodeType":"YulFunctionCall","src":"3535:24:15"}],"functionName":{"name":"mstore","nativeSrc":"3523:6:15","nodeType":"YulIdentifier","src":"3523:6:15"},"nativeSrc":"3523:37:15","nodeType":"YulFunctionCall","src":"3523:37:15"},"nativeSrc":"3523:37:15","nodeType":"YulExpressionStatement","src":"3523:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3448:118:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3501:5:15","nodeType":"YulTypedName","src":"3501:5:15","type":""},{"name":"pos","nativeSrc":"3508:3:15","nodeType":"YulTypedName","src":"3508:3:15","type":""}],"src":"3448:118:15"},{"body":{"nativeSrc":"3670:124:15","nodeType":"YulBlock","src":"3670:124:15","statements":[{"nativeSrc":"3680:26:15","nodeType":"YulAssignment","src":"3680:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"3692:9:15","nodeType":"YulIdentifier","src":"3692:9:15"},{"kind":"number","nativeSrc":"3703:2:15","nodeType":"YulLiteral","src":"3703:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3688:3:15","nodeType":"YulIdentifier","src":"3688:3:15"},"nativeSrc":"3688:18:15","nodeType":"YulFunctionCall","src":"3688:18:15"},"variableNames":[{"name":"tail","nativeSrc":"3680:4:15","nodeType":"YulIdentifier","src":"3680:4:15"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3760:6:15","nodeType":"YulIdentifier","src":"3760:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"3773:9:15","nodeType":"YulIdentifier","src":"3773:9:15"},{"kind":"number","nativeSrc":"3784:1:15","nodeType":"YulLiteral","src":"3784:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3769:3:15","nodeType":"YulIdentifier","src":"3769:3:15"},"nativeSrc":"3769:17:15","nodeType":"YulFunctionCall","src":"3769:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3716:43:15","nodeType":"YulIdentifier","src":"3716:43:15"},"nativeSrc":"3716:71:15","nodeType":"YulFunctionCall","src":"3716:71:15"},"nativeSrc":"3716:71:15","nodeType":"YulExpressionStatement","src":"3716:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3572:222:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3642:9:15","nodeType":"YulTypedName","src":"3642:9:15","type":""},{"name":"value0","nativeSrc":"3654:6:15","nodeType":"YulTypedName","src":"3654:6:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3665:4:15","nodeType":"YulTypedName","src":"3665:4:15","type":""}],"src":"3572:222:15"},{"body":{"nativeSrc":"3900:519:15","nodeType":"YulBlock","src":"3900:519:15","statements":[{"body":{"nativeSrc":"3946:83:15","nodeType":"YulBlock","src":"3946:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3948:77:15","nodeType":"YulIdentifier","src":"3948:77:15"},"nativeSrc":"3948:79:15","nodeType":"YulFunctionCall","src":"3948:79:15"},"nativeSrc":"3948:79:15","nodeType":"YulExpressionStatement","src":"3948:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3921:7:15","nodeType":"YulIdentifier","src":"3921:7:15"},{"name":"headStart","nativeSrc":"3930:9:15","nodeType":"YulIdentifier","src":"3930:9:15"}],"functionName":{"name":"sub","nativeSrc":"3917:3:15","nodeType":"YulIdentifier","src":"3917:3:15"},"nativeSrc":"3917:23:15","nodeType":"YulFunctionCall","src":"3917:23:15"},{"kind":"number","nativeSrc":"3942:2:15","nodeType":"YulLiteral","src":"3942:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3913:3:15","nodeType":"YulIdentifier","src":"3913:3:15"},"nativeSrc":"3913:32:15","nodeType":"YulFunctionCall","src":"3913:32:15"},"nativeSrc":"3910:119:15","nodeType":"YulIf","src":"3910:119:15"},{"nativeSrc":"4039:117:15","nodeType":"YulBlock","src":"4039:117:15","statements":[{"nativeSrc":"4054:15:15","nodeType":"YulVariableDeclaration","src":"4054:15:15","value":{"kind":"number","nativeSrc":"4068:1:15","nodeType":"YulLiteral","src":"4068:1:15","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4058:6:15","nodeType":"YulTypedName","src":"4058:6:15","type":""}]},{"nativeSrc":"4083:63:15","nodeType":"YulAssignment","src":"4083:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4118:9:15","nodeType":"YulIdentifier","src":"4118:9:15"},{"name":"offset","nativeSrc":"4129:6:15","nodeType":"YulIdentifier","src":"4129:6:15"}],"functionName":{"name":"add","nativeSrc":"4114:3:15","nodeType":"YulIdentifier","src":"4114:3:15"},"nativeSrc":"4114:22:15","nodeType":"YulFunctionCall","src":"4114:22:15"},{"name":"dataEnd","nativeSrc":"4138:7:15","nodeType":"YulIdentifier","src":"4138:7:15"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4093:20:15","nodeType":"YulIdentifier","src":"4093:20:15"},"nativeSrc":"4093:53:15","nodeType":"YulFunctionCall","src":"4093:53:15"},"variableNames":[{"name":"value0","nativeSrc":"4083:6:15","nodeType":"YulIdentifier","src":"4083:6:15"}]}]},{"nativeSrc":"4166:118:15","nodeType":"YulBlock","src":"4166:118:15","statements":[{"nativeSrc":"4181:16:15","nodeType":"YulVariableDeclaration","src":"4181:16:15","value":{"kind":"number","nativeSrc":"4195:2:15","nodeType":"YulLiteral","src":"4195:2:15","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4185:6:15","nodeType":"YulTypedName","src":"4185:6:15","type":""}]},{"nativeSrc":"4211:63:15","nodeType":"YulAssignment","src":"4211:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4246:9:15","nodeType":"YulIdentifier","src":"4246:9:15"},{"name":"offset","nativeSrc":"4257:6:15","nodeType":"YulIdentifier","src":"4257:6:15"}],"functionName":{"name":"add","nativeSrc":"4242:3:15","nodeType":"YulIdentifier","src":"4242:3:15"},"nativeSrc":"4242:22:15","nodeType":"YulFunctionCall","src":"4242:22:15"},{"name":"dataEnd","nativeSrc":"4266:7:15","nodeType":"YulIdentifier","src":"4266:7:15"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4221:20:15","nodeType":"YulIdentifier","src":"4221:20:15"},"nativeSrc":"4221:53:15","nodeType":"YulFunctionCall","src":"4221:53:15"},"variableNames":[{"name":"value1","nativeSrc":"4211:6:15","nodeType":"YulIdentifier","src":"4211:6:15"}]}]},{"nativeSrc":"4294:118:15","nodeType":"YulBlock","src":"4294:118:15","statements":[{"nativeSrc":"4309:16:15","nodeType":"YulVariableDeclaration","src":"4309:16:15","value":{"kind":"number","nativeSrc":"4323:2:15","nodeType":"YulLiteral","src":"4323:2:15","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4313:6:15","nodeType":"YulTypedName","src":"4313:6:15","type":""}]},{"nativeSrc":"4339:63:15","nodeType":"YulAssignment","src":"4339:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4374:9:15","nodeType":"YulIdentifier","src":"4374:9:15"},{"name":"offset","nativeSrc":"4385:6:15","nodeType":"YulIdentifier","src":"4385:6:15"}],"functionName":{"name":"add","nativeSrc":"4370:3:15","nodeType":"YulIdentifier","src":"4370:3:15"},"nativeSrc":"4370:22:15","nodeType":"YulFunctionCall","src":"4370:22:15"},{"name":"dataEnd","nativeSrc":"4394:7:15","nodeType":"YulIdentifier","src":"4394:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4349:20:15","nodeType":"YulIdentifier","src":"4349:20:15"},"nativeSrc":"4349:53:15","nodeType":"YulFunctionCall","src":"4349:53:15"},"variableNames":[{"name":"value2","nativeSrc":"4339:6:15","nodeType":"YulIdentifier","src":"4339:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3800:619:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3854:9:15","nodeType":"YulTypedName","src":"3854:9:15","type":""},{"name":"dataEnd","nativeSrc":"3865:7:15","nodeType":"YulTypedName","src":"3865:7:15","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3877:6:15","nodeType":"YulTypedName","src":"3877:6:15","type":""},{"name":"value1","nativeSrc":"3885:6:15","nodeType":"YulTypedName","src":"3885:6:15","type":""},{"name":"value2","nativeSrc":"3893:6:15","nodeType":"YulTypedName","src":"3893:6:15","type":""}],"src":"3800:619:15"},{"body":{"nativeSrc":"4468:43:15","nodeType":"YulBlock","src":"4468:43:15","statements":[{"nativeSrc":"4478:27:15","nodeType":"YulAssignment","src":"4478:27:15","value":{"arguments":[{"name":"value","nativeSrc":"4493:5:15","nodeType":"YulIdentifier","src":"4493:5:15"},{"kind":"number","nativeSrc":"4500:4:15","nodeType":"YulLiteral","src":"4500:4:15","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4489:3:15","nodeType":"YulIdentifier","src":"4489:3:15"},"nativeSrc":"4489:16:15","nodeType":"YulFunctionCall","src":"4489:16:15"},"variableNames":[{"name":"cleaned","nativeSrc":"4478:7:15","nodeType":"YulIdentifier","src":"4478:7:15"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4425:86:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4450:5:15","nodeType":"YulTypedName","src":"4450:5:15","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4460:7:15","nodeType":"YulTypedName","src":"4460:7:15","type":""}],"src":"4425:86:15"},{"body":{"nativeSrc":"4578:51:15","nodeType":"YulBlock","src":"4578:51:15","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4595:3:15","nodeType":"YulIdentifier","src":"4595:3:15"},{"arguments":[{"name":"value","nativeSrc":"4616:5:15","nodeType":"YulIdentifier","src":"4616:5:15"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4600:15:15","nodeType":"YulIdentifier","src":"4600:15:15"},"nativeSrc":"4600:22:15","nodeType":"YulFunctionCall","src":"4600:22:15"}],"functionName":{"name":"mstore","nativeSrc":"4588:6:15","nodeType":"YulIdentifier","src":"4588:6:15"},"nativeSrc":"4588:35:15","nodeType":"YulFunctionCall","src":"4588:35:15"},"nativeSrc":"4588:35:15","nodeType":"YulExpressionStatement","src":"4588:35:15"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4517:112:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4566:5:15","nodeType":"YulTypedName","src":"4566:5:15","type":""},{"name":"pos","nativeSrc":"4573:3:15","nodeType":"YulTypedName","src":"4573:3:15","type":""}],"src":"4517:112:15"},{"body":{"nativeSrc":"4729:120:15","nodeType":"YulBlock","src":"4729:120:15","statements":[{"nativeSrc":"4739:26:15","nodeType":"YulAssignment","src":"4739:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"4751:9:15","nodeType":"YulIdentifier","src":"4751:9:15"},{"kind":"number","nativeSrc":"4762:2:15","nodeType":"YulLiteral","src":"4762:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4747:3:15","nodeType":"YulIdentifier","src":"4747:3:15"},"nativeSrc":"4747:18:15","nodeType":"YulFunctionCall","src":"4747:18:15"},"variableNames":[{"name":"tail","nativeSrc":"4739:4:15","nodeType":"YulIdentifier","src":"4739:4:15"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4815:6:15","nodeType":"YulIdentifier","src":"4815:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"4828:9:15","nodeType":"YulIdentifier","src":"4828:9:15"},{"kind":"number","nativeSrc":"4839:1:15","nodeType":"YulLiteral","src":"4839:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4824:3:15","nodeType":"YulIdentifier","src":"4824:3:15"},"nativeSrc":"4824:17:15","nodeType":"YulFunctionCall","src":"4824:17:15"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4775:39:15","nodeType":"YulIdentifier","src":"4775:39:15"},"nativeSrc":"4775:67:15","nodeType":"YulFunctionCall","src":"4775:67:15"},"nativeSrc":"4775:67:15","nodeType":"YulExpressionStatement","src":"4775:67:15"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4635:214:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4701:9:15","nodeType":"YulTypedName","src":"4701:9:15","type":""},{"name":"value0","nativeSrc":"4713:6:15","nodeType":"YulTypedName","src":"4713:6:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4724:4:15","nodeType":"YulTypedName","src":"4724:4:15","type":""}],"src":"4635:214:15"},{"body":{"nativeSrc":"4921:263:15","nodeType":"YulBlock","src":"4921:263:15","statements":[{"body":{"nativeSrc":"4967:83:15","nodeType":"YulBlock","src":"4967:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4969:77:15","nodeType":"YulIdentifier","src":"4969:77:15"},"nativeSrc":"4969:79:15","nodeType":"YulFunctionCall","src":"4969:79:15"},"nativeSrc":"4969:79:15","nodeType":"YulExpressionStatement","src":"4969:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4942:7:15","nodeType":"YulIdentifier","src":"4942:7:15"},{"name":"headStart","nativeSrc":"4951:9:15","nodeType":"YulIdentifier","src":"4951:9:15"}],"functionName":{"name":"sub","nativeSrc":"4938:3:15","nodeType":"YulIdentifier","src":"4938:3:15"},"nativeSrc":"4938:23:15","nodeType":"YulFunctionCall","src":"4938:23:15"},{"kind":"number","nativeSrc":"4963:2:15","nodeType":"YulLiteral","src":"4963:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4934:3:15","nodeType":"YulIdentifier","src":"4934:3:15"},"nativeSrc":"4934:32:15","nodeType":"YulFunctionCall","src":"4934:32:15"},"nativeSrc":"4931:119:15","nodeType":"YulIf","src":"4931:119:15"},{"nativeSrc":"5060:117:15","nodeType":"YulBlock","src":"5060:117:15","statements":[{"nativeSrc":"5075:15:15","nodeType":"YulVariableDeclaration","src":"5075:15:15","value":{"kind":"number","nativeSrc":"5089:1:15","nodeType":"YulLiteral","src":"5089:1:15","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5079:6:15","nodeType":"YulTypedName","src":"5079:6:15","type":""}]},{"nativeSrc":"5104:63:15","nodeType":"YulAssignment","src":"5104:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5139:9:15","nodeType":"YulIdentifier","src":"5139:9:15"},{"name":"offset","nativeSrc":"5150:6:15","nodeType":"YulIdentifier","src":"5150:6:15"}],"functionName":{"name":"add","nativeSrc":"5135:3:15","nodeType":"YulIdentifier","src":"5135:3:15"},"nativeSrc":"5135:22:15","nodeType":"YulFunctionCall","src":"5135:22:15"},{"name":"dataEnd","nativeSrc":"5159:7:15","nodeType":"YulIdentifier","src":"5159:7:15"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5114:20:15","nodeType":"YulIdentifier","src":"5114:20:15"},"nativeSrc":"5114:53:15","nodeType":"YulFunctionCall","src":"5114:53:15"},"variableNames":[{"name":"value0","nativeSrc":"5104:6:15","nodeType":"YulIdentifier","src":"5104:6:15"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"4855:329:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4891:9:15","nodeType":"YulTypedName","src":"4891:9:15","type":""},{"name":"dataEnd","nativeSrc":"4902:7:15","nodeType":"YulTypedName","src":"4902:7:15","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4914:6:15","nodeType":"YulTypedName","src":"4914:6:15","type":""}],"src":"4855:329:15"},{"body":{"nativeSrc":"5273:391:15","nodeType":"YulBlock","src":"5273:391:15","statements":[{"body":{"nativeSrc":"5319:83:15","nodeType":"YulBlock","src":"5319:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5321:77:15","nodeType":"YulIdentifier","src":"5321:77:15"},"nativeSrc":"5321:79:15","nodeType":"YulFunctionCall","src":"5321:79:15"},"nativeSrc":"5321:79:15","nodeType":"YulExpressionStatement","src":"5321:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5294:7:15","nodeType":"YulIdentifier","src":"5294:7:15"},{"name":"headStart","nativeSrc":"5303:9:15","nodeType":"YulIdentifier","src":"5303:9:15"}],"functionName":{"name":"sub","nativeSrc":"5290:3:15","nodeType":"YulIdentifier","src":"5290:3:15"},"nativeSrc":"5290:23:15","nodeType":"YulFunctionCall","src":"5290:23:15"},{"kind":"number","nativeSrc":"5315:2:15","nodeType":"YulLiteral","src":"5315:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5286:3:15","nodeType":"YulIdentifier","src":"5286:3:15"},"nativeSrc":"5286:32:15","nodeType":"YulFunctionCall","src":"5286:32:15"},"nativeSrc":"5283:119:15","nodeType":"YulIf","src":"5283:119:15"},{"nativeSrc":"5412:117:15","nodeType":"YulBlock","src":"5412:117:15","statements":[{"nativeSrc":"5427:15:15","nodeType":"YulVariableDeclaration","src":"5427:15:15","value":{"kind":"number","nativeSrc":"5441:1:15","nodeType":"YulLiteral","src":"5441:1:15","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5431:6:15","nodeType":"YulTypedName","src":"5431:6:15","type":""}]},{"nativeSrc":"5456:63:15","nodeType":"YulAssignment","src":"5456:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5491:9:15","nodeType":"YulIdentifier","src":"5491:9:15"},{"name":"offset","nativeSrc":"5502:6:15","nodeType":"YulIdentifier","src":"5502:6:15"}],"functionName":{"name":"add","nativeSrc":"5487:3:15","nodeType":"YulIdentifier","src":"5487:3:15"},"nativeSrc":"5487:22:15","nodeType":"YulFunctionCall","src":"5487:22:15"},{"name":"dataEnd","nativeSrc":"5511:7:15","nodeType":"YulIdentifier","src":"5511:7:15"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5466:20:15","nodeType":"YulIdentifier","src":"5466:20:15"},"nativeSrc":"5466:53:15","nodeType":"YulFunctionCall","src":"5466:53:15"},"variableNames":[{"name":"value0","nativeSrc":"5456:6:15","nodeType":"YulIdentifier","src":"5456:6:15"}]}]},{"nativeSrc":"5539:118:15","nodeType":"YulBlock","src":"5539:118:15","statements":[{"nativeSrc":"5554:16:15","nodeType":"YulVariableDeclaration","src":"5554:16:15","value":{"kind":"number","nativeSrc":"5568:2:15","nodeType":"YulLiteral","src":"5568:2:15","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5558:6:15","nodeType":"YulTypedName","src":"5558:6:15","type":""}]},{"nativeSrc":"5584:63:15","nodeType":"YulAssignment","src":"5584:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5619:9:15","nodeType":"YulIdentifier","src":"5619:9:15"},{"name":"offset","nativeSrc":"5630:6:15","nodeType":"YulIdentifier","src":"5630:6:15"}],"functionName":{"name":"add","nativeSrc":"5615:3:15","nodeType":"YulIdentifier","src":"5615:3:15"},"nativeSrc":"5615:22:15","nodeType":"YulFunctionCall","src":"5615:22:15"},{"name":"dataEnd","nativeSrc":"5639:7:15","nodeType":"YulIdentifier","src":"5639:7:15"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5594:20:15","nodeType":"YulIdentifier","src":"5594:20:15"},"nativeSrc":"5594:53:15","nodeType":"YulFunctionCall","src":"5594:53:15"},"variableNames":[{"name":"value1","nativeSrc":"5584:6:15","nodeType":"YulIdentifier","src":"5584:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"5190:474:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5235:9:15","nodeType":"YulTypedName","src":"5235:9:15","type":""},{"name":"dataEnd","nativeSrc":"5246:7:15","nodeType":"YulTypedName","src":"5246:7:15","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5258:6:15","nodeType":"YulTypedName","src":"5258:6:15","type":""},{"name":"value1","nativeSrc":"5266:6:15","nodeType":"YulTypedName","src":"5266:6:15","type":""}],"src":"5190:474:15"},{"body":{"nativeSrc":"5698:152:15","nodeType":"YulBlock","src":"5698:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5715:1:15","nodeType":"YulLiteral","src":"5715:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"5718:77:15","nodeType":"YulLiteral","src":"5718:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5708:6:15","nodeType":"YulIdentifier","src":"5708:6:15"},"nativeSrc":"5708:88:15","nodeType":"YulFunctionCall","src":"5708:88:15"},"nativeSrc":"5708:88:15","nodeType":"YulExpressionStatement","src":"5708:88:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5812:1:15","nodeType":"YulLiteral","src":"5812:1:15","type":"","value":"4"},{"kind":"number","nativeSrc":"5815:4:15","nodeType":"YulLiteral","src":"5815:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"5805:6:15","nodeType":"YulIdentifier","src":"5805:6:15"},"nativeSrc":"5805:15:15","nodeType":"YulFunctionCall","src":"5805:15:15"},"nativeSrc":"5805:15:15","nodeType":"YulExpressionStatement","src":"5805:15:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5836:1:15","nodeType":"YulLiteral","src":"5836:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"5839:4:15","nodeType":"YulLiteral","src":"5839:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5829:6:15","nodeType":"YulIdentifier","src":"5829:6:15"},"nativeSrc":"5829:15:15","nodeType":"YulFunctionCall","src":"5829:15:15"},"nativeSrc":"5829:15:15","nodeType":"YulExpressionStatement","src":"5829:15:15"}]},"name":"panic_error_0x22","nativeSrc":"5670:180:15","nodeType":"YulFunctionDefinition","src":"5670:180:15"},{"body":{"nativeSrc":"5907:269:15","nodeType":"YulBlock","src":"5907:269:15","statements":[{"nativeSrc":"5917:22:15","nodeType":"YulAssignment","src":"5917:22:15","value":{"arguments":[{"name":"data","nativeSrc":"5931:4:15","nodeType":"YulIdentifier","src":"5931:4:15"},{"kind":"number","nativeSrc":"5937:1:15","nodeType":"YulLiteral","src":"5937:1:15","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"5927:3:15","nodeType":"YulIdentifier","src":"5927:3:15"},"nativeSrc":"5927:12:15","nodeType":"YulFunctionCall","src":"5927:12:15"},"variableNames":[{"name":"length","nativeSrc":"5917:6:15","nodeType":"YulIdentifier","src":"5917:6:15"}]},{"nativeSrc":"5948:38:15","nodeType":"YulVariableDeclaration","src":"5948:38:15","value":{"arguments":[{"name":"data","nativeSrc":"5978:4:15","nodeType":"YulIdentifier","src":"5978:4:15"},{"kind":"number","nativeSrc":"5984:1:15","nodeType":"YulLiteral","src":"5984:1:15","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"5974:3:15","nodeType":"YulIdentifier","src":"5974:3:15"},"nativeSrc":"5974:12:15","nodeType":"YulFunctionCall","src":"5974:12:15"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"5952:18:15","nodeType":"YulTypedName","src":"5952:18:15","type":""}]},{"body":{"nativeSrc":"6025:51:15","nodeType":"YulBlock","src":"6025:51:15","statements":[{"nativeSrc":"6039:27:15","nodeType":"YulAssignment","src":"6039:27:15","value":{"arguments":[{"name":"length","nativeSrc":"6053:6:15","nodeType":"YulIdentifier","src":"6053:6:15"},{"kind":"number","nativeSrc":"6061:4:15","nodeType":"YulLiteral","src":"6061:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"6049:3:15","nodeType":"YulIdentifier","src":"6049:3:15"},"nativeSrc":"6049:17:15","nodeType":"YulFunctionCall","src":"6049:17:15"},"variableNames":[{"name":"length","nativeSrc":"6039:6:15","nodeType":"YulIdentifier","src":"6039:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6005:18:15","nodeType":"YulIdentifier","src":"6005:18:15"}],"functionName":{"name":"iszero","nativeSrc":"5998:6:15","nodeType":"YulIdentifier","src":"5998:6:15"},"nativeSrc":"5998:26:15","nodeType":"YulFunctionCall","src":"5998:26:15"},"nativeSrc":"5995:81:15","nodeType":"YulIf","src":"5995:81:15"},{"body":{"nativeSrc":"6128:42:15","nodeType":"YulBlock","src":"6128:42:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"6142:16:15","nodeType":"YulIdentifier","src":"6142:16:15"},"nativeSrc":"6142:18:15","nodeType":"YulFunctionCall","src":"6142:18:15"},"nativeSrc":"6142:18:15","nodeType":"YulExpressionStatement","src":"6142:18:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6092:18:15","nodeType":"YulIdentifier","src":"6092:18:15"},{"arguments":[{"name":"length","nativeSrc":"6115:6:15","nodeType":"YulIdentifier","src":"6115:6:15"},{"kind":"number","nativeSrc":"6123:2:15","nodeType":"YulLiteral","src":"6123:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6112:2:15","nodeType":"YulIdentifier","src":"6112:2:15"},"nativeSrc":"6112:14:15","nodeType":"YulFunctionCall","src":"6112:14:15"}],"functionName":{"name":"eq","nativeSrc":"6089:2:15","nodeType":"YulIdentifier","src":"6089:2:15"},"nativeSrc":"6089:38:15","nodeType":"YulFunctionCall","src":"6089:38:15"},"nativeSrc":"6086:84:15","nodeType":"YulIf","src":"6086:84:15"}]},"name":"extract_byte_array_length","nativeSrc":"5856:320:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"5891:4:15","nodeType":"YulTypedName","src":"5891:4:15","type":""}],"returnVariables":[{"name":"length","nativeSrc":"5900:6:15","nodeType":"YulTypedName","src":"5900:6:15","type":""}],"src":"5856:320:15"},{"body":{"nativeSrc":"6247:53:15","nodeType":"YulBlock","src":"6247:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6264:3:15","nodeType":"YulIdentifier","src":"6264:3:15"},{"arguments":[{"name":"value","nativeSrc":"6287:5:15","nodeType":"YulIdentifier","src":"6287:5:15"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6269:17:15","nodeType":"YulIdentifier","src":"6269:17:15"},"nativeSrc":"6269:24:15","nodeType":"YulFunctionCall","src":"6269:24:15"}],"functionName":{"name":"mstore","nativeSrc":"6257:6:15","nodeType":"YulIdentifier","src":"6257:6:15"},"nativeSrc":"6257:37:15","nodeType":"YulFunctionCall","src":"6257:37:15"},"nativeSrc":"6257:37:15","nodeType":"YulExpressionStatement","src":"6257:37:15"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6182:118:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6235:5:15","nodeType":"YulTypedName","src":"6235:5:15","type":""},{"name":"pos","nativeSrc":"6242:3:15","nodeType":"YulTypedName","src":"6242:3:15","type":""}],"src":"6182:118:15"},{"body":{"nativeSrc":"6460:288:15","nodeType":"YulBlock","src":"6460:288:15","statements":[{"nativeSrc":"6470:26:15","nodeType":"YulAssignment","src":"6470:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"6482:9:15","nodeType":"YulIdentifier","src":"6482:9:15"},{"kind":"number","nativeSrc":"6493:2:15","nodeType":"YulLiteral","src":"6493:2:15","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6478:3:15","nodeType":"YulIdentifier","src":"6478:3:15"},"nativeSrc":"6478:18:15","nodeType":"YulFunctionCall","src":"6478:18:15"},"variableNames":[{"name":"tail","nativeSrc":"6470:4:15","nodeType":"YulIdentifier","src":"6470:4:15"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6550:6:15","nodeType":"YulIdentifier","src":"6550:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"6563:9:15","nodeType":"YulIdentifier","src":"6563:9:15"},{"kind":"number","nativeSrc":"6574:1:15","nodeType":"YulLiteral","src":"6574:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6559:3:15","nodeType":"YulIdentifier","src":"6559:3:15"},"nativeSrc":"6559:17:15","nodeType":"YulFunctionCall","src":"6559:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6506:43:15","nodeType":"YulIdentifier","src":"6506:43:15"},"nativeSrc":"6506:71:15","nodeType":"YulFunctionCall","src":"6506:71:15"},"nativeSrc":"6506:71:15","nodeType":"YulExpressionStatement","src":"6506:71:15"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"6631:6:15","nodeType":"YulIdentifier","src":"6631:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"6644:9:15","nodeType":"YulIdentifier","src":"6644:9:15"},{"kind":"number","nativeSrc":"6655:2:15","nodeType":"YulLiteral","src":"6655:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6640:3:15","nodeType":"YulIdentifier","src":"6640:3:15"},"nativeSrc":"6640:18:15","nodeType":"YulFunctionCall","src":"6640:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6587:43:15","nodeType":"YulIdentifier","src":"6587:43:15"},"nativeSrc":"6587:72:15","nodeType":"YulFunctionCall","src":"6587:72:15"},"nativeSrc":"6587:72:15","nodeType":"YulExpressionStatement","src":"6587:72:15"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"6713:6:15","nodeType":"YulIdentifier","src":"6713:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"6726:9:15","nodeType":"YulIdentifier","src":"6726:9:15"},{"kind":"number","nativeSrc":"6737:2:15","nodeType":"YulLiteral","src":"6737:2:15","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6722:3:15","nodeType":"YulIdentifier","src":"6722:3:15"},"nativeSrc":"6722:18:15","nodeType":"YulFunctionCall","src":"6722:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6669:43:15","nodeType":"YulIdentifier","src":"6669:43:15"},"nativeSrc":"6669:72:15","nodeType":"YulFunctionCall","src":"6669:72:15"},"nativeSrc":"6669:72:15","nodeType":"YulExpressionStatement","src":"6669:72:15"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"6306:442:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6416:9:15","nodeType":"YulTypedName","src":"6416:9:15","type":""},{"name":"value2","nativeSrc":"6428:6:15","nodeType":"YulTypedName","src":"6428:6:15","type":""},{"name":"value1","nativeSrc":"6436:6:15","nodeType":"YulTypedName","src":"6436:6:15","type":""},{"name":"value0","nativeSrc":"6444:6:15","nodeType":"YulTypedName","src":"6444:6:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6455:4:15","nodeType":"YulTypedName","src":"6455:4:15","type":""}],"src":"6306:442:15"},{"body":{"nativeSrc":"6852:124:15","nodeType":"YulBlock","src":"6852:124:15","statements":[{"nativeSrc":"6862:26:15","nodeType":"YulAssignment","src":"6862:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"6874:9:15","nodeType":"YulIdentifier","src":"6874:9:15"},{"kind":"number","nativeSrc":"6885:2:15","nodeType":"YulLiteral","src":"6885:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6870:3:15","nodeType":"YulIdentifier","src":"6870:3:15"},"nativeSrc":"6870:18:15","nodeType":"YulFunctionCall","src":"6870:18:15"},"variableNames":[{"name":"tail","nativeSrc":"6862:4:15","nodeType":"YulIdentifier","src":"6862:4:15"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6942:6:15","nodeType":"YulIdentifier","src":"6942:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"6955:9:15","nodeType":"YulIdentifier","src":"6955:9:15"},{"kind":"number","nativeSrc":"6966:1:15","nodeType":"YulLiteral","src":"6966:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6951:3:15","nodeType":"YulIdentifier","src":"6951:3:15"},"nativeSrc":"6951:17:15","nodeType":"YulFunctionCall","src":"6951:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6898:43:15","nodeType":"YulIdentifier","src":"6898:43:15"},"nativeSrc":"6898:71:15","nodeType":"YulFunctionCall","src":"6898:71:15"},"nativeSrc":"6898:71:15","nodeType":"YulExpressionStatement","src":"6898:71:15"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6754:222:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6824:9:15","nodeType":"YulTypedName","src":"6824:9:15","type":""},{"name":"value0","nativeSrc":"6836:6:15","nodeType":"YulTypedName","src":"6836:6:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6847:4:15","nodeType":"YulTypedName","src":"6847:4:15","type":""}],"src":"6754:222:15"},{"body":{"nativeSrc":"7010:152:15","nodeType":"YulBlock","src":"7010:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7027:1:15","nodeType":"YulLiteral","src":"7027:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"7030:77:15","nodeType":"YulLiteral","src":"7030:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7020:6:15","nodeType":"YulIdentifier","src":"7020:6:15"},"nativeSrc":"7020:88:15","nodeType":"YulFunctionCall","src":"7020:88:15"},"nativeSrc":"7020:88:15","nodeType":"YulExpressionStatement","src":"7020:88:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7124:1:15","nodeType":"YulLiteral","src":"7124:1:15","type":"","value":"4"},{"kind":"number","nativeSrc":"7127:4:15","nodeType":"YulLiteral","src":"7127:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7117:6:15","nodeType":"YulIdentifier","src":"7117:6:15"},"nativeSrc":"7117:15:15","nodeType":"YulFunctionCall","src":"7117:15:15"},"nativeSrc":"7117:15:15","nodeType":"YulExpressionStatement","src":"7117:15:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7148:1:15","nodeType":"YulLiteral","src":"7148:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"7151:4:15","nodeType":"YulLiteral","src":"7151:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7141:6:15","nodeType":"YulIdentifier","src":"7141:6:15"},"nativeSrc":"7141:15:15","nodeType":"YulFunctionCall","src":"7141:15:15"},"nativeSrc":"7141:15:15","nodeType":"YulExpressionStatement","src":"7141:15:15"}]},"name":"panic_error_0x11","nativeSrc":"6982:180:15","nodeType":"YulFunctionDefinition","src":"6982:180:15"},{"body":{"nativeSrc":"7212:147:15","nodeType":"YulBlock","src":"7212:147:15","statements":[{"nativeSrc":"7222:25:15","nodeType":"YulAssignment","src":"7222:25:15","value":{"arguments":[{"name":"x","nativeSrc":"7245:1:15","nodeType":"YulIdentifier","src":"7245:1:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7227:17:15","nodeType":"YulIdentifier","src":"7227:17:15"},"nativeSrc":"7227:20:15","nodeType":"YulFunctionCall","src":"7227:20:15"},"variableNames":[{"name":"x","nativeSrc":"7222:1:15","nodeType":"YulIdentifier","src":"7222:1:15"}]},{"nativeSrc":"7256:25:15","nodeType":"YulAssignment","src":"7256:25:15","value":{"arguments":[{"name":"y","nativeSrc":"7279:1:15","nodeType":"YulIdentifier","src":"7279:1:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7261:17:15","nodeType":"YulIdentifier","src":"7261:17:15"},"nativeSrc":"7261:20:15","nodeType":"YulFunctionCall","src":"7261:20:15"},"variableNames":[{"name":"y","nativeSrc":"7256:1:15","nodeType":"YulIdentifier","src":"7256:1:15"}]},{"nativeSrc":"7290:16:15","nodeType":"YulAssignment","src":"7290:16:15","value":{"arguments":[{"name":"x","nativeSrc":"7301:1:15","nodeType":"YulIdentifier","src":"7301:1:15"},{"name":"y","nativeSrc":"7304:1:15","nodeType":"YulIdentifier","src":"7304:1:15"}],"functionName":{"name":"add","nativeSrc":"7297:3:15","nodeType":"YulIdentifier","src":"7297:3:15"},"nativeSrc":"7297:9:15","nodeType":"YulFunctionCall","src":"7297:9:15"},"variableNames":[{"name":"sum","nativeSrc":"7290:3:15","nodeType":"YulIdentifier","src":"7290:3:15"}]},{"body":{"nativeSrc":"7330:22:15","nodeType":"YulBlock","src":"7330:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7332:16:15","nodeType":"YulIdentifier","src":"7332:16:15"},"nativeSrc":"7332:18:15","nodeType":"YulFunctionCall","src":"7332:18:15"},"nativeSrc":"7332:18:15","nodeType":"YulExpressionStatement","src":"7332:18:15"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"7322:1:15","nodeType":"YulIdentifier","src":"7322:1:15"},{"name":"sum","nativeSrc":"7325:3:15","nodeType":"YulIdentifier","src":"7325:3:15"}],"functionName":{"name":"gt","nativeSrc":"7319:2:15","nodeType":"YulIdentifier","src":"7319:2:15"},"nativeSrc":"7319:10:15","nodeType":"YulFunctionCall","src":"7319:10:15"},"nativeSrc":"7316:36:15","nodeType":"YulIf","src":"7316:36:15"}]},"name":"checked_add_t_uint256","nativeSrc":"7168:191:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7199:1:15","nodeType":"YulTypedName","src":"7199:1:15","type":""},{"name":"y","nativeSrc":"7202:1:15","nodeType":"YulTypedName","src":"7202:1:15","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"7208:3:15","nodeType":"YulTypedName","src":"7208:3:15","type":""}],"src":"7168:191:15"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad9190610aaa565b60405180910390f35b6100d060048036038101906100cb9190610b65565b610292565b6040516100dd9190610bc0565b60405180910390f35b6100ee6102b5565b6040516100fb9190610bea565b60405180910390f35b61011e60048036038101906101199190610c05565b6102bf565b60405161012b9190610bc0565b60405180910390f35b61013c6102ee565b6040516101499190610c74565b60405180910390f35b61016c60048036038101906101679190610c8f565b6102f7565b6040516101799190610bea565b60405180910390f35b61018a61033f565b6040516101979190610aaa565b60405180910390f35b6101ba60048036038101906101b59190610b65565b6103d1565b6040516101c79190610bc0565b60405180910390f35b6101ea60048036038101906101e59190610cbc565b6103f4565b6040516101f79190610bea565b60405180910390f35b60606003805461020f90610d2b565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610d2b565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b60008061029d61047b565b90506102aa818585610483565b600191505092915050565b6000600254905090565b6000806102ca61047b565b90506102d7858285610495565b6102e285858561052a565b60019150509392505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461034e90610d2b565b80601f016020809104026020016040519081016040528092919081815260200182805461037a90610d2b565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6000806103dc61047b565b90506103e981858561052a565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b610490838383600161061e565b505050565b60006104a184846103f4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156105245781811015610514578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161050b93929190610d6b565b60405180910390fd5b6105238484848403600061061e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361059c5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105939190610da2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361060e5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106059190610da2565b60405180910390fd5b6106198383836107f5565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036106905760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106879190610da2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107025760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106f99190610da2565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156107ef578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107e69190610bea565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084757806002600082825461083b9190610dec565b9250508190555061091a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156108d3578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108ca93929190610d6b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361096357806002600082825403925050819055506109b0565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a0d9190610bea565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a54578082015181840152602081019050610a39565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a7c82610a1a565b610a868185610a25565b9350610a96818560208601610a36565b610a9f81610a60565b840191505092915050565b60006020820190508181036000830152610ac48184610a71565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610afc82610ad1565b9050919050565b610b0c81610af1565b8114610b1757600080fd5b50565b600081359050610b2981610b03565b92915050565b6000819050919050565b610b4281610b2f565b8114610b4d57600080fd5b50565b600081359050610b5f81610b39565b92915050565b60008060408385031215610b7c57610b7b610acc565b5b6000610b8a85828601610b1a565b9250506020610b9b85828601610b50565b9150509250929050565b60008115159050919050565b610bba81610ba5565b82525050565b6000602082019050610bd56000830184610bb1565b92915050565b610be481610b2f565b82525050565b6000602082019050610bff6000830184610bdb565b92915050565b600080600060608486031215610c1e57610c1d610acc565b5b6000610c2c86828701610b1a565b9350506020610c3d86828701610b1a565b9250506040610c4e86828701610b50565b9150509250925092565b600060ff82169050919050565b610c6e81610c58565b82525050565b6000602082019050610c896000830184610c65565b92915050565b600060208284031215610ca557610ca4610acc565b5b6000610cb384828501610b1a565b91505092915050565b60008060408385031215610cd357610cd2610acc565b5b6000610ce185828601610b1a565b9250506020610cf285828601610b1a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d4357607f821691505b602082108103610d5657610d55610cfc565b5b50919050565b610d6581610af1565b82525050565b6000606082019050610d806000830186610d5c565b610d8d6020830185610bdb565b610d9a6040830184610bdb565b949350505050565b6000602082019050610db76000830184610d5c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df782610b2f565b9150610e0283610b2f565b9250828201905080821115610e1a57610e19610dbd565b5b9291505056fea2646970667358221220102374c4624662d49703cb134e358dd40615eee39f627521b37c4de23c6138f264736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xC05 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0xCBC JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29D PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA DUP2 DUP6 DUP6 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CA PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2D7 DUP6 DUP3 DUP6 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x2E2 DUP6 DUP6 DUP6 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37A SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3DC PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x3E9 DUP2 DUP6 DUP6 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x490 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x61E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A1 DUP5 DUP5 PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x524 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x514 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x523 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x61E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x59C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x593 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x60E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x605 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x619 DUP4 DUP4 DUP4 PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x690 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x687 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x702 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7EF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7E6 SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x847 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x83B SWAP2 SWAP1 PUSH2 0xDEC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x91A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8D3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x963 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9B0 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA0D SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA54 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7C DUP3 PUSH2 0xA1A JUMP JUMPDEST PUSH2 0xA86 DUP2 DUP6 PUSH2 0xA25 JUMP JUMPDEST SWAP4 POP PUSH2 0xA96 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA36 JUMP JUMPDEST PUSH2 0xA9F DUP2 PUSH2 0xA60 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAC4 DUP2 DUP5 PUSH2 0xA71 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFC DUP3 PUSH2 0xAD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB0C DUP2 PUSH2 0xAF1 JUMP JUMPDEST DUP2 EQ PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB29 DUP2 PUSH2 0xB03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB42 DUP2 PUSH2 0xB2F JUMP JUMPDEST DUP2 EQ PUSH2 0xB4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB5F DUP2 PUSH2 0xB39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7C JUMPI PUSH2 0xB7B PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB8A DUP6 DUP3 DUP7 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB9B DUP6 DUP3 DUP7 ADD PUSH2 0xB50 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBA DUP2 PUSH2 0xBA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBE4 DUP2 PUSH2 0xB2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBFF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC1E JUMPI PUSH2 0xC1D PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC2C DUP7 DUP3 DUP8 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC3D DUP7 DUP3 DUP8 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC4E DUP7 DUP3 DUP8 ADD PUSH2 0xB50 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6E DUP2 PUSH2 0xC58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC89 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA5 JUMPI PUSH2 0xCA4 PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCB3 DUP5 DUP3 DUP6 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCD3 JUMPI PUSH2 0xCD2 PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCE1 DUP6 DUP3 DUP7 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCF2 DUP6 DUP3 DUP7 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD43 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD56 JUMPI PUSH2 0xD55 PUSH2 0xCFC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD65 DUP2 PUSH2 0xAF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD80 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD5C JUMP JUMPDEST PUSH2 0xD8D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBDB JUMP JUMPDEST PUSH2 0xD9A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBDB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF7 DUP3 PUSH2 0xB2F JUMP JUMPDEST SWAP2 POP PUSH2 0xE02 DUP4 PUSH2 0xB2F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1A JUMPI PUSH2 0xE19 PUSH2 0xDBD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0x23 PUSH21 0xC4624662D49703CB134E358DD40615EEE39F627521 0xB3 PUSH29 0x4DE23C6138F264736F6C634300081C0033000000000000000000000000 ","sourceMap":"114:182:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3296:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;2985:116::-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;1962:93::-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3296:178::-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;3532:140::-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8707:128:4:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;9682:432::-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:15:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1432:117::-;1541:1;1538;1531:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:118::-;3535:24;3553:5;3535:24;:::i;:::-;3530:3;3523:37;3448:118;;:::o;3572:222::-;3665:4;3703:2;3692:9;3688:18;3680:26;;3716:71;3784:1;3773:9;3769:17;3760:6;3716:71;:::i;:::-;3572:222;;;;:::o;3800:619::-;3877:6;3885;3893;3942:2;3930:9;3921:7;3917:23;3913:32;3910:119;;;3948:79;;:::i;:::-;3910:119;4068:1;4093:53;4138:7;4129:6;4118:9;4114:22;4093:53;:::i;:::-;4083:63;;4039:117;4195:2;4221:53;4266:7;4257:6;4246:9;4242:22;4221:53;:::i;:::-;4211:63;;4166:118;4323:2;4349:53;4394:7;4385:6;4374:9;4370:22;4349:53;:::i;:::-;4339:63;;4294:118;3800:619;;;;;:::o;4425:86::-;4460:7;4500:4;4493:5;4489:16;4478:27;;4425:86;;;:::o;4517:112::-;4600:22;4616:5;4600:22;:::i;:::-;4595:3;4588:35;4517:112;;:::o;4635:214::-;4724:4;4762:2;4751:9;4747:18;4739:26;;4775:67;4839:1;4828:9;4824:17;4815:6;4775:67;:::i;:::-;4635:214;;;;:::o;4855:329::-;4914:6;4963:2;4951:9;4942:7;4938:23;4934:32;4931:119;;;4969:79;;:::i;:::-;4931:119;5089:1;5114:53;5159:7;5150:6;5139:9;5135:22;5114:53;:::i;:::-;5104:63;;5060:117;4855:329;;;;:::o;5190:474::-;5258:6;5266;5315:2;5303:9;5294:7;5290:23;5286:32;5283:119;;;5321:79;;:::i;:::-;5283:119;5441:1;5466:53;5511:7;5502:6;5491:9;5487:22;5466:53;:::i;:::-;5456:63;;5412:117;5568:2;5594:53;5639:7;5630:6;5619:9;5615:22;5594:53;:::i;:::-;5584:63;;5539:118;5190:474;;;;;:::o;5670:180::-;5718:77;5715:1;5708:88;5815:4;5812:1;5805:15;5839:4;5836:1;5829:15;5856:320;5900:6;5937:1;5931:4;5927:12;5917:22;;5984:1;5978:4;5974:12;6005:18;5995:81;;6061:4;6053:6;6049:17;6039:27;;5995:81;6123:2;6115:6;6112:14;6092:18;6089:38;6086:84;;6142:18;;:::i;:::-;6086:84;5907:269;5856:320;;;:::o;6182:118::-;6269:24;6287:5;6269:24;:::i;:::-;6264:3;6257:37;6182:118;;:::o;6306:442::-;6455:4;6493:2;6482:9;6478:18;6470:26;;6506:71;6574:1;6563:9;6559:17;6550:6;6506:71;:::i;:::-;6587:72;6655:2;6644:9;6640:18;6631:6;6587:72;:::i;:::-;6669;6737:2;6726:9;6722:18;6713:6;6669:72;:::i;:::-;6306:442;;;;;;:::o;6754:222::-;6847:4;6885:2;6874:9;6870:18;6862:26;;6898:71;6966:1;6955:9;6951:17;6942:6;6898:71;:::i;:::-;6754:222;;;;:::o;6982:180::-;7030:77;7027:1;7020:88;7127:4;7124:1;7117:15;7151:4;7148:1;7141:15;7168:191;7208:3;7227:20;7245:1;7227:20;:::i;:::-;7222:25;;7261:20;7279:1;7261:20;:::i;:::-;7256:25;;7304:1;7301;7297:9;7290:16;;7325:3;7322:1;7319:10;7316:36;;;7332:18;;:::i;:::-;7316:36;7168:191;;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MockERC20.sol\":\"MockERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/MockERC20.sol\":{\"keccak256\":\"0xecf50578ed603531fdfad576dd43c063c44da6ecf33b2a812dee4ff4baa30ce6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2840517e776cf3d1ea61c3207278336117a49063168c438f338b99c570dc639\",\"dweb:/ipfs/QmbCs7GGhuHqqoKT6njZVzR41wJWhsC66vx87ZAUKrBTcq\"]}},\"version\":1}"}},"contracts/SimpleSwap.sol":{"SimpleSwap":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountADesired","type":"uint256"},{"internalType":"uint256","name":"amountBDesired","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"addLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reserveA","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reserveB","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenAAddres","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenBAddres","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_278":{"entryPoint":null,"id":278,"parameterSlots":2,"returnSlots":0},"@_4849":{"entryPoint":null,"id":4849,"parameterSlots":0,"returnSlots":0},"array_dataslot_t_string_storage":{"entryPoint":318,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":164,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":615,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":450,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":580,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":470,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":756,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":339,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":269,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":728,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":460,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":698,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":222,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":175,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":504,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":355,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":685,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":556,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":368,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":514,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":551,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:5231:15","nodeType":"YulBlock","src":"0:5231:15","statements":[{"body":{"nativeSrc":"66:40:15","nodeType":"YulBlock","src":"66:40:15","statements":[{"nativeSrc":"77:22:15","nodeType":"YulAssignment","src":"77:22:15","value":{"arguments":[{"name":"value","nativeSrc":"93:5:15","nodeType":"YulIdentifier","src":"93:5:15"}],"functionName":{"name":"mload","nativeSrc":"87:5:15","nodeType":"YulIdentifier","src":"87:5:15"},"nativeSrc":"87:12:15","nodeType":"YulFunctionCall","src":"87:12:15"},"variableNames":[{"name":"length","nativeSrc":"77:6:15","nodeType":"YulIdentifier","src":"77:6:15"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:15","nodeType":"YulTypedName","src":"49:5:15","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:15","nodeType":"YulTypedName","src":"59:6:15","type":""}],"src":"7:99:15"},{"body":{"nativeSrc":"140:152:15","nodeType":"YulBlock","src":"140:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"157:1:15","nodeType":"YulLiteral","src":"157:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"160:77:15","nodeType":"YulLiteral","src":"160:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"150:6:15","nodeType":"YulIdentifier","src":"150:6:15"},"nativeSrc":"150:88:15","nodeType":"YulFunctionCall","src":"150:88:15"},"nativeSrc":"150:88:15","nodeType":"YulExpressionStatement","src":"150:88:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"254:1:15","nodeType":"YulLiteral","src":"254:1:15","type":"","value":"4"},{"kind":"number","nativeSrc":"257:4:15","nodeType":"YulLiteral","src":"257:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"247:6:15","nodeType":"YulIdentifier","src":"247:6:15"},"nativeSrc":"247:15:15","nodeType":"YulFunctionCall","src":"247:15:15"},"nativeSrc":"247:15:15","nodeType":"YulExpressionStatement","src":"247:15:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"278:1:15","nodeType":"YulLiteral","src":"278:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"281:4:15","nodeType":"YulLiteral","src":"281:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"271:6:15","nodeType":"YulIdentifier","src":"271:6:15"},"nativeSrc":"271:15:15","nodeType":"YulFunctionCall","src":"271:15:15"},"nativeSrc":"271:15:15","nodeType":"YulExpressionStatement","src":"271:15:15"}]},"name":"panic_error_0x41","nativeSrc":"112:180:15","nodeType":"YulFunctionDefinition","src":"112:180:15"},{"body":{"nativeSrc":"326:152:15","nodeType":"YulBlock","src":"326:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"343:1:15","nodeType":"YulLiteral","src":"343:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"346:77:15","nodeType":"YulLiteral","src":"346:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"336:6:15","nodeType":"YulIdentifier","src":"336:6:15"},"nativeSrc":"336:88:15","nodeType":"YulFunctionCall","src":"336:88:15"},"nativeSrc":"336:88:15","nodeType":"YulExpressionStatement","src":"336:88:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"440:1:15","nodeType":"YulLiteral","src":"440:1:15","type":"","value":"4"},{"kind":"number","nativeSrc":"443:4:15","nodeType":"YulLiteral","src":"443:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"433:6:15","nodeType":"YulIdentifier","src":"433:6:15"},"nativeSrc":"433:15:15","nodeType":"YulFunctionCall","src":"433:15:15"},"nativeSrc":"433:15:15","nodeType":"YulExpressionStatement","src":"433:15:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"464:1:15","nodeType":"YulLiteral","src":"464:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"467:4:15","nodeType":"YulLiteral","src":"467:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"457:6:15","nodeType":"YulIdentifier","src":"457:6:15"},"nativeSrc":"457:15:15","nodeType":"YulFunctionCall","src":"457:15:15"},"nativeSrc":"457:15:15","nodeType":"YulExpressionStatement","src":"457:15:15"}]},"name":"panic_error_0x22","nativeSrc":"298:180:15","nodeType":"YulFunctionDefinition","src":"298:180:15"},{"body":{"nativeSrc":"535:269:15","nodeType":"YulBlock","src":"535:269:15","statements":[{"nativeSrc":"545:22:15","nodeType":"YulAssignment","src":"545:22:15","value":{"arguments":[{"name":"data","nativeSrc":"559:4:15","nodeType":"YulIdentifier","src":"559:4:15"},{"kind":"number","nativeSrc":"565:1:15","nodeType":"YulLiteral","src":"565:1:15","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"555:3:15","nodeType":"YulIdentifier","src":"555:3:15"},"nativeSrc":"555:12:15","nodeType":"YulFunctionCall","src":"555:12:15"},"variableNames":[{"name":"length","nativeSrc":"545:6:15","nodeType":"YulIdentifier","src":"545:6:15"}]},{"nativeSrc":"576:38:15","nodeType":"YulVariableDeclaration","src":"576:38:15","value":{"arguments":[{"name":"data","nativeSrc":"606:4:15","nodeType":"YulIdentifier","src":"606:4:15"},{"kind":"number","nativeSrc":"612:1:15","nodeType":"YulLiteral","src":"612:1:15","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"602:3:15","nodeType":"YulIdentifier","src":"602:3:15"},"nativeSrc":"602:12:15","nodeType":"YulFunctionCall","src":"602:12:15"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"580:18:15","nodeType":"YulTypedName","src":"580:18:15","type":""}]},{"body":{"nativeSrc":"653:51:15","nodeType":"YulBlock","src":"653:51:15","statements":[{"nativeSrc":"667:27:15","nodeType":"YulAssignment","src":"667:27:15","value":{"arguments":[{"name":"length","nativeSrc":"681:6:15","nodeType":"YulIdentifier","src":"681:6:15"},{"kind":"number","nativeSrc":"689:4:15","nodeType":"YulLiteral","src":"689:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"677:3:15","nodeType":"YulIdentifier","src":"677:3:15"},"nativeSrc":"677:17:15","nodeType":"YulFunctionCall","src":"677:17:15"},"variableNames":[{"name":"length","nativeSrc":"667:6:15","nodeType":"YulIdentifier","src":"667:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"633:18:15","nodeType":"YulIdentifier","src":"633:18:15"}],"functionName":{"name":"iszero","nativeSrc":"626:6:15","nodeType":"YulIdentifier","src":"626:6:15"},"nativeSrc":"626:26:15","nodeType":"YulFunctionCall","src":"626:26:15"},"nativeSrc":"623:81:15","nodeType":"YulIf","src":"623:81:15"},{"body":{"nativeSrc":"756:42:15","nodeType":"YulBlock","src":"756:42:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"770:16:15","nodeType":"YulIdentifier","src":"770:16:15"},"nativeSrc":"770:18:15","nodeType":"YulFunctionCall","src":"770:18:15"},"nativeSrc":"770:18:15","nodeType":"YulExpressionStatement","src":"770:18:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"720:18:15","nodeType":"YulIdentifier","src":"720:18:15"},{"arguments":[{"name":"length","nativeSrc":"743:6:15","nodeType":"YulIdentifier","src":"743:6:15"},{"kind":"number","nativeSrc":"751:2:15","nodeType":"YulLiteral","src":"751:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"740:2:15","nodeType":"YulIdentifier","src":"740:2:15"},"nativeSrc":"740:14:15","nodeType":"YulFunctionCall","src":"740:14:15"}],"functionName":{"name":"eq","nativeSrc":"717:2:15","nodeType":"YulIdentifier","src":"717:2:15"},"nativeSrc":"717:38:15","nodeType":"YulFunctionCall","src":"717:38:15"},"nativeSrc":"714:84:15","nodeType":"YulIf","src":"714:84:15"}]},"name":"extract_byte_array_length","nativeSrc":"484:320:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"519:4:15","nodeType":"YulTypedName","src":"519:4:15","type":""}],"returnVariables":[{"name":"length","nativeSrc":"528:6:15","nodeType":"YulTypedName","src":"528:6:15","type":""}],"src":"484:320:15"},{"body":{"nativeSrc":"864:87:15","nodeType":"YulBlock","src":"864:87:15","statements":[{"nativeSrc":"874:11:15","nodeType":"YulAssignment","src":"874:11:15","value":{"name":"ptr","nativeSrc":"882:3:15","nodeType":"YulIdentifier","src":"882:3:15"},"variableNames":[{"name":"data","nativeSrc":"874:4:15","nodeType":"YulIdentifier","src":"874:4:15"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"902:1:15","nodeType":"YulLiteral","src":"902:1:15","type":"","value":"0"},{"name":"ptr","nativeSrc":"905:3:15","nodeType":"YulIdentifier","src":"905:3:15"}],"functionName":{"name":"mstore","nativeSrc":"895:6:15","nodeType":"YulIdentifier","src":"895:6:15"},"nativeSrc":"895:14:15","nodeType":"YulFunctionCall","src":"895:14:15"},"nativeSrc":"895:14:15","nodeType":"YulExpressionStatement","src":"895:14:15"},{"nativeSrc":"918:26:15","nodeType":"YulAssignment","src":"918:26:15","value":{"arguments":[{"kind":"number","nativeSrc":"936:1:15","nodeType":"YulLiteral","src":"936:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"939:4:15","nodeType":"YulLiteral","src":"939:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"926:9:15","nodeType":"YulIdentifier","src":"926:9:15"},"nativeSrc":"926:18:15","nodeType":"YulFunctionCall","src":"926:18:15"},"variableNames":[{"name":"data","nativeSrc":"918:4:15","nodeType":"YulIdentifier","src":"918:4:15"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"810:141:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"851:3:15","nodeType":"YulTypedName","src":"851:3:15","type":""}],"returnVariables":[{"name":"data","nativeSrc":"859:4:15","nodeType":"YulTypedName","src":"859:4:15","type":""}],"src":"810:141:15"},{"body":{"nativeSrc":"1001:49:15","nodeType":"YulBlock","src":"1001:49:15","statements":[{"nativeSrc":"1011:33:15","nodeType":"YulAssignment","src":"1011:33:15","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1029:5:15","nodeType":"YulIdentifier","src":"1029:5:15"},{"kind":"number","nativeSrc":"1036:2:15","nodeType":"YulLiteral","src":"1036:2:15","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1025:3:15","nodeType":"YulIdentifier","src":"1025:3:15"},"nativeSrc":"1025:14:15","nodeType":"YulFunctionCall","src":"1025:14:15"},{"kind":"number","nativeSrc":"1041:2:15","nodeType":"YulLiteral","src":"1041:2:15","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"1021:3:15","nodeType":"YulIdentifier","src":"1021:3:15"},"nativeSrc":"1021:23:15","nodeType":"YulFunctionCall","src":"1021:23:15"},"variableNames":[{"name":"result","nativeSrc":"1011:6:15","nodeType":"YulIdentifier","src":"1011:6:15"}]}]},"name":"divide_by_32_ceil","nativeSrc":"957:93:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"984:5:15","nodeType":"YulTypedName","src":"984:5:15","type":""}],"returnVariables":[{"name":"result","nativeSrc":"994:6:15","nodeType":"YulTypedName","src":"994:6:15","type":""}],"src":"957:93:15"},{"body":{"nativeSrc":"1109:54:15","nodeType":"YulBlock","src":"1109:54:15","statements":[{"nativeSrc":"1119:37:15","nodeType":"YulAssignment","src":"1119:37:15","value":{"arguments":[{"name":"bits","nativeSrc":"1144:4:15","nodeType":"YulIdentifier","src":"1144:4:15"},{"name":"value","nativeSrc":"1150:5:15","nodeType":"YulIdentifier","src":"1150:5:15"}],"functionName":{"name":"shl","nativeSrc":"1140:3:15","nodeType":"YulIdentifier","src":"1140:3:15"},"nativeSrc":"1140:16:15","nodeType":"YulFunctionCall","src":"1140:16:15"},"variableNames":[{"name":"newValue","nativeSrc":"1119:8:15","nodeType":"YulIdentifier","src":"1119:8:15"}]}]},"name":"shift_left_dynamic","nativeSrc":"1056:107:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"1084:4:15","nodeType":"YulTypedName","src":"1084:4:15","type":""},{"name":"value","nativeSrc":"1090:5:15","nodeType":"YulTypedName","src":"1090:5:15","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"1100:8:15","nodeType":"YulTypedName","src":"1100:8:15","type":""}],"src":"1056:107:15"},{"body":{"nativeSrc":"1245:317:15","nodeType":"YulBlock","src":"1245:317:15","statements":[{"nativeSrc":"1255:35:15","nodeType":"YulVariableDeclaration","src":"1255:35:15","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"1276:10:15","nodeType":"YulIdentifier","src":"1276:10:15"},{"kind":"number","nativeSrc":"1288:1:15","nodeType":"YulLiteral","src":"1288:1:15","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"1272:3:15","nodeType":"YulIdentifier","src":"1272:3:15"},"nativeSrc":"1272:18:15","nodeType":"YulFunctionCall","src":"1272:18:15"},"variables":[{"name":"shiftBits","nativeSrc":"1259:9:15","nodeType":"YulTypedName","src":"1259:9:15","type":""}]},{"nativeSrc":"1299:109:15","nodeType":"YulVariableDeclaration","src":"1299:109:15","value":{"arguments":[{"name":"shiftBits","nativeSrc":"1330:9:15","nodeType":"YulIdentifier","src":"1330:9:15"},{"kind":"number","nativeSrc":"1341:66:15","nodeType":"YulLiteral","src":"1341:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"1311:18:15","nodeType":"YulIdentifier","src":"1311:18:15"},"nativeSrc":"1311:97:15","nodeType":"YulFunctionCall","src":"1311:97:15"},"variables":[{"name":"mask","nativeSrc":"1303:4:15","nodeType":"YulTypedName","src":"1303:4:15","type":""}]},{"nativeSrc":"1417:51:15","nodeType":"YulAssignment","src":"1417:51:15","value":{"arguments":[{"name":"shiftBits","nativeSrc":"1448:9:15","nodeType":"YulIdentifier","src":"1448:9:15"},{"name":"toInsert","nativeSrc":"1459:8:15","nodeType":"YulIdentifier","src":"1459:8:15"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"1429:18:15","nodeType":"YulIdentifier","src":"1429:18:15"},"nativeSrc":"1429:39:15","nodeType":"YulFunctionCall","src":"1429:39:15"},"variableNames":[{"name":"toInsert","nativeSrc":"1417:8:15","nodeType":"YulIdentifier","src":"1417:8:15"}]},{"nativeSrc":"1477:30:15","nodeType":"YulAssignment","src":"1477:30:15","value":{"arguments":[{"name":"value","nativeSrc":"1490:5:15","nodeType":"YulIdentifier","src":"1490:5:15"},{"arguments":[{"name":"mask","nativeSrc":"1501:4:15","nodeType":"YulIdentifier","src":"1501:4:15"}],"functionName":{"name":"not","nativeSrc":"1497:3:15","nodeType":"YulIdentifier","src":"1497:3:15"},"nativeSrc":"1497:9:15","nodeType":"YulFunctionCall","src":"1497:9:15"}],"functionName":{"name":"and","nativeSrc":"1486:3:15","nodeType":"YulIdentifier","src":"1486:3:15"},"nativeSrc":"1486:21:15","nodeType":"YulFunctionCall","src":"1486:21:15"},"variableNames":[{"name":"value","nativeSrc":"1477:5:15","nodeType":"YulIdentifier","src":"1477:5:15"}]},{"nativeSrc":"1516:40:15","nodeType":"YulAssignment","src":"1516:40:15","value":{"arguments":[{"name":"value","nativeSrc":"1529:5:15","nodeType":"YulIdentifier","src":"1529:5:15"},{"arguments":[{"name":"toInsert","nativeSrc":"1540:8:15","nodeType":"YulIdentifier","src":"1540:8:15"},{"name":"mask","nativeSrc":"1550:4:15","nodeType":"YulIdentifier","src":"1550:4:15"}],"functionName":{"name":"and","nativeSrc":"1536:3:15","nodeType":"YulIdentifier","src":"1536:3:15"},"nativeSrc":"1536:19:15","nodeType":"YulFunctionCall","src":"1536:19:15"}],"functionName":{"name":"or","nativeSrc":"1526:2:15","nodeType":"YulIdentifier","src":"1526:2:15"},"nativeSrc":"1526:30:15","nodeType":"YulFunctionCall","src":"1526:30:15"},"variableNames":[{"name":"result","nativeSrc":"1516:6:15","nodeType":"YulIdentifier","src":"1516:6:15"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"1169:393:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1206:5:15","nodeType":"YulTypedName","src":"1206:5:15","type":""},{"name":"shiftBytes","nativeSrc":"1213:10:15","nodeType":"YulTypedName","src":"1213:10:15","type":""},{"name":"toInsert","nativeSrc":"1225:8:15","nodeType":"YulTypedName","src":"1225:8:15","type":""}],"returnVariables":[{"name":"result","nativeSrc":"1238:6:15","nodeType":"YulTypedName","src":"1238:6:15","type":""}],"src":"1169:393:15"},{"body":{"nativeSrc":"1613:32:15","nodeType":"YulBlock","src":"1613:32:15","statements":[{"nativeSrc":"1623:16:15","nodeType":"YulAssignment","src":"1623:16:15","value":{"name":"value","nativeSrc":"1634:5:15","nodeType":"YulIdentifier","src":"1634:5:15"},"variableNames":[{"name":"cleaned","nativeSrc":"1623:7:15","nodeType":"YulIdentifier","src":"1623:7:15"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1568:77:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1595:5:15","nodeType":"YulTypedName","src":"1595:5:15","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1605:7:15","nodeType":"YulTypedName","src":"1605:7:15","type":""}],"src":"1568:77:15"},{"body":{"nativeSrc":"1683:28:15","nodeType":"YulBlock","src":"1683:28:15","statements":[{"nativeSrc":"1693:12:15","nodeType":"YulAssignment","src":"1693:12:15","value":{"name":"value","nativeSrc":"1700:5:15","nodeType":"YulIdentifier","src":"1700:5:15"},"variableNames":[{"name":"ret","nativeSrc":"1693:3:15","nodeType":"YulIdentifier","src":"1693:3:15"}]}]},"name":"identity","nativeSrc":"1651:60:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1669:5:15","nodeType":"YulTypedName","src":"1669:5:15","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"1679:3:15","nodeType":"YulTypedName","src":"1679:3:15","type":""}],"src":"1651:60:15"},{"body":{"nativeSrc":"1777:82:15","nodeType":"YulBlock","src":"1777:82:15","statements":[{"nativeSrc":"1787:66:15","nodeType":"YulAssignment","src":"1787:66:15","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1845:5:15","nodeType":"YulIdentifier","src":"1845:5:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1827:17:15","nodeType":"YulIdentifier","src":"1827:17:15"},"nativeSrc":"1827:24:15","nodeType":"YulFunctionCall","src":"1827:24:15"}],"functionName":{"name":"identity","nativeSrc":"1818:8:15","nodeType":"YulIdentifier","src":"1818:8:15"},"nativeSrc":"1818:34:15","nodeType":"YulFunctionCall","src":"1818:34:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1800:17:15","nodeType":"YulIdentifier","src":"1800:17:15"},"nativeSrc":"1800:53:15","nodeType":"YulFunctionCall","src":"1800:53:15"},"variableNames":[{"name":"converted","nativeSrc":"1787:9:15","nodeType":"YulIdentifier","src":"1787:9:15"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"1717:142:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1757:5:15","nodeType":"YulTypedName","src":"1757:5:15","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"1767:9:15","nodeType":"YulTypedName","src":"1767:9:15","type":""}],"src":"1717:142:15"},{"body":{"nativeSrc":"1912:28:15","nodeType":"YulBlock","src":"1912:28:15","statements":[{"nativeSrc":"1922:12:15","nodeType":"YulAssignment","src":"1922:12:15","value":{"name":"value","nativeSrc":"1929:5:15","nodeType":"YulIdentifier","src":"1929:5:15"},"variableNames":[{"name":"ret","nativeSrc":"1922:3:15","nodeType":"YulIdentifier","src":"1922:3:15"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"1865:75:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1898:5:15","nodeType":"YulTypedName","src":"1898:5:15","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"1908:3:15","nodeType":"YulTypedName","src":"1908:3:15","type":""}],"src":"1865:75:15"},{"body":{"nativeSrc":"2022:193:15","nodeType":"YulBlock","src":"2022:193:15","statements":[{"nativeSrc":"2032:63:15","nodeType":"YulVariableDeclaration","src":"2032:63:15","value":{"arguments":[{"name":"value_0","nativeSrc":"2087:7:15","nodeType":"YulIdentifier","src":"2087:7:15"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"2056:30:15","nodeType":"YulIdentifier","src":"2056:30:15"},"nativeSrc":"2056:39:15","nodeType":"YulFunctionCall","src":"2056:39:15"},"variables":[{"name":"convertedValue_0","nativeSrc":"2036:16:15","nodeType":"YulTypedName","src":"2036:16:15","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2111:4:15","nodeType":"YulIdentifier","src":"2111:4:15"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"2151:4:15","nodeType":"YulIdentifier","src":"2151:4:15"}],"functionName":{"name":"sload","nativeSrc":"2145:5:15","nodeType":"YulIdentifier","src":"2145:5:15"},"nativeSrc":"2145:11:15","nodeType":"YulFunctionCall","src":"2145:11:15"},{"name":"offset","nativeSrc":"2158:6:15","nodeType":"YulIdentifier","src":"2158:6:15"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"2190:16:15","nodeType":"YulIdentifier","src":"2190:16:15"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"2166:23:15","nodeType":"YulIdentifier","src":"2166:23:15"},"nativeSrc":"2166:41:15","nodeType":"YulFunctionCall","src":"2166:41:15"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"2117:27:15","nodeType":"YulIdentifier","src":"2117:27:15"},"nativeSrc":"2117:91:15","nodeType":"YulFunctionCall","src":"2117:91:15"}],"functionName":{"name":"sstore","nativeSrc":"2104:6:15","nodeType":"YulIdentifier","src":"2104:6:15"},"nativeSrc":"2104:105:15","nodeType":"YulFunctionCall","src":"2104:105:15"},"nativeSrc":"2104:105:15","nodeType":"YulExpressionStatement","src":"2104:105:15"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"1946:269:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1999:4:15","nodeType":"YulTypedName","src":"1999:4:15","type":""},{"name":"offset","nativeSrc":"2005:6:15","nodeType":"YulTypedName","src":"2005:6:15","type":""},{"name":"value_0","nativeSrc":"2013:7:15","nodeType":"YulTypedName","src":"2013:7:15","type":""}],"src":"1946:269:15"},{"body":{"nativeSrc":"2270:24:15","nodeType":"YulBlock","src":"2270:24:15","statements":[{"nativeSrc":"2280:8:15","nodeType":"YulAssignment","src":"2280:8:15","value":{"kind":"number","nativeSrc":"2287:1:15","nodeType":"YulLiteral","src":"2287:1:15","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"2280:3:15","nodeType":"YulIdentifier","src":"2280:3:15"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"2221:73:15","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"2266:3:15","nodeType":"YulTypedName","src":"2266:3:15","type":""}],"src":"2221:73:15"},{"body":{"nativeSrc":"2353:136:15","nodeType":"YulBlock","src":"2353:136:15","statements":[{"nativeSrc":"2363:46:15","nodeType":"YulVariableDeclaration","src":"2363:46:15","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"2377:30:15","nodeType":"YulIdentifier","src":"2377:30:15"},"nativeSrc":"2377:32:15","nodeType":"YulFunctionCall","src":"2377:32:15"},"variables":[{"name":"zero_0","nativeSrc":"2367:6:15","nodeType":"YulTypedName","src":"2367:6:15","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2462:4:15","nodeType":"YulIdentifier","src":"2462:4:15"},{"name":"offset","nativeSrc":"2468:6:15","nodeType":"YulIdentifier","src":"2468:6:15"},{"name":"zero_0","nativeSrc":"2476:6:15","nodeType":"YulIdentifier","src":"2476:6:15"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"2418:43:15","nodeType":"YulIdentifier","src":"2418:43:15"},"nativeSrc":"2418:65:15","nodeType":"YulFunctionCall","src":"2418:65:15"},"nativeSrc":"2418:65:15","nodeType":"YulExpressionStatement","src":"2418:65:15"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"2300:189:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"2339:4:15","nodeType":"YulTypedName","src":"2339:4:15","type":""},{"name":"offset","nativeSrc":"2345:6:15","nodeType":"YulTypedName","src":"2345:6:15","type":""}],"src":"2300:189:15"},{"body":{"nativeSrc":"2545:136:15","nodeType":"YulBlock","src":"2545:136:15","statements":[{"body":{"nativeSrc":"2612:63:15","nodeType":"YulBlock","src":"2612:63:15","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"2656:5:15","nodeType":"YulIdentifier","src":"2656:5:15"},{"kind":"number","nativeSrc":"2663:1:15","nodeType":"YulLiteral","src":"2663:1:15","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"2626:29:15","nodeType":"YulIdentifier","src":"2626:29:15"},"nativeSrc":"2626:39:15","nodeType":"YulFunctionCall","src":"2626:39:15"},"nativeSrc":"2626:39:15","nodeType":"YulExpressionStatement","src":"2626:39:15"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"2565:5:15","nodeType":"YulIdentifier","src":"2565:5:15"},{"name":"end","nativeSrc":"2572:3:15","nodeType":"YulIdentifier","src":"2572:3:15"}],"functionName":{"name":"lt","nativeSrc":"2562:2:15","nodeType":"YulIdentifier","src":"2562:2:15"},"nativeSrc":"2562:14:15","nodeType":"YulFunctionCall","src":"2562:14:15"},"nativeSrc":"2555:120:15","nodeType":"YulForLoop","post":{"nativeSrc":"2577:26:15","nodeType":"YulBlock","src":"2577:26:15","statements":[{"nativeSrc":"2579:22:15","nodeType":"YulAssignment","src":"2579:22:15","value":{"arguments":[{"name":"start","nativeSrc":"2592:5:15","nodeType":"YulIdentifier","src":"2592:5:15"},{"kind":"number","nativeSrc":"2599:1:15","nodeType":"YulLiteral","src":"2599:1:15","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2588:3:15","nodeType":"YulIdentifier","src":"2588:3:15"},"nativeSrc":"2588:13:15","nodeType":"YulFunctionCall","src":"2588:13:15"},"variableNames":[{"name":"start","nativeSrc":"2579:5:15","nodeType":"YulIdentifier","src":"2579:5:15"}]}]},"pre":{"nativeSrc":"2559:2:15","nodeType":"YulBlock","src":"2559:2:15","statements":[]},"src":"2555:120:15"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"2495:186:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"2533:5:15","nodeType":"YulTypedName","src":"2533:5:15","type":""},{"name":"end","nativeSrc":"2540:3:15","nodeType":"YulTypedName","src":"2540:3:15","type":""}],"src":"2495:186:15"},{"body":{"nativeSrc":"2766:464:15","nodeType":"YulBlock","src":"2766:464:15","statements":[{"body":{"nativeSrc":"2792:431:15","nodeType":"YulBlock","src":"2792:431:15","statements":[{"nativeSrc":"2806:54:15","nodeType":"YulVariableDeclaration","src":"2806:54:15","value":{"arguments":[{"name":"array","nativeSrc":"2854:5:15","nodeType":"YulIdentifier","src":"2854:5:15"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"2822:31:15","nodeType":"YulIdentifier","src":"2822:31:15"},"nativeSrc":"2822:38:15","nodeType":"YulFunctionCall","src":"2822:38:15"},"variables":[{"name":"dataArea","nativeSrc":"2810:8:15","nodeType":"YulTypedName","src":"2810:8:15","type":""}]},{"nativeSrc":"2873:63:15","nodeType":"YulVariableDeclaration","src":"2873:63:15","value":{"arguments":[{"name":"dataArea","nativeSrc":"2896:8:15","nodeType":"YulIdentifier","src":"2896:8:15"},{"arguments":[{"name":"startIndex","nativeSrc":"2924:10:15","nodeType":"YulIdentifier","src":"2924:10:15"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"2906:17:15","nodeType":"YulIdentifier","src":"2906:17:15"},"nativeSrc":"2906:29:15","nodeType":"YulFunctionCall","src":"2906:29:15"}],"functionName":{"name":"add","nativeSrc":"2892:3:15","nodeType":"YulIdentifier","src":"2892:3:15"},"nativeSrc":"2892:44:15","nodeType":"YulFunctionCall","src":"2892:44:15"},"variables":[{"name":"deleteStart","nativeSrc":"2877:11:15","nodeType":"YulTypedName","src":"2877:11:15","type":""}]},{"body":{"nativeSrc":"3093:27:15","nodeType":"YulBlock","src":"3093:27:15","statements":[{"nativeSrc":"3095:23:15","nodeType":"YulAssignment","src":"3095:23:15","value":{"name":"dataArea","nativeSrc":"3110:8:15","nodeType":"YulIdentifier","src":"3110:8:15"},"variableNames":[{"name":"deleteStart","nativeSrc":"3095:11:15","nodeType":"YulIdentifier","src":"3095:11:15"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"3077:10:15","nodeType":"YulIdentifier","src":"3077:10:15"},{"kind":"number","nativeSrc":"3089:2:15","nodeType":"YulLiteral","src":"3089:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"3074:2:15","nodeType":"YulIdentifier","src":"3074:2:15"},"nativeSrc":"3074:18:15","nodeType":"YulFunctionCall","src":"3074:18:15"},"nativeSrc":"3071:49:15","nodeType":"YulIf","src":"3071:49:15"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"3162:11:15","nodeType":"YulIdentifier","src":"3162:11:15"},{"arguments":[{"name":"dataArea","nativeSrc":"3179:8:15","nodeType":"YulIdentifier","src":"3179:8:15"},{"arguments":[{"name":"len","nativeSrc":"3207:3:15","nodeType":"YulIdentifier","src":"3207:3:15"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"3189:17:15","nodeType":"YulIdentifier","src":"3189:17:15"},"nativeSrc":"3189:22:15","nodeType":"YulFunctionCall","src":"3189:22:15"}],"functionName":{"name":"add","nativeSrc":"3175:3:15","nodeType":"YulIdentifier","src":"3175:3:15"},"nativeSrc":"3175:37:15","nodeType":"YulFunctionCall","src":"3175:37:15"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"3133:28:15","nodeType":"YulIdentifier","src":"3133:28:15"},"nativeSrc":"3133:80:15","nodeType":"YulFunctionCall","src":"3133:80:15"},"nativeSrc":"3133:80:15","nodeType":"YulExpressionStatement","src":"3133:80:15"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"2783:3:15","nodeType":"YulIdentifier","src":"2783:3:15"},{"kind":"number","nativeSrc":"2788:2:15","nodeType":"YulLiteral","src":"2788:2:15","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2780:2:15","nodeType":"YulIdentifier","src":"2780:2:15"},"nativeSrc":"2780:11:15","nodeType":"YulFunctionCall","src":"2780:11:15"},"nativeSrc":"2777:446:15","nodeType":"YulIf","src":"2777:446:15"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"2687:543:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"2742:5:15","nodeType":"YulTypedName","src":"2742:5:15","type":""},{"name":"len","nativeSrc":"2749:3:15","nodeType":"YulTypedName","src":"2749:3:15","type":""},{"name":"startIndex","nativeSrc":"2754:10:15","nodeType":"YulTypedName","src":"2754:10:15","type":""}],"src":"2687:543:15"},{"body":{"nativeSrc":"3299:54:15","nodeType":"YulBlock","src":"3299:54:15","statements":[{"nativeSrc":"3309:37:15","nodeType":"YulAssignment","src":"3309:37:15","value":{"arguments":[{"name":"bits","nativeSrc":"3334:4:15","nodeType":"YulIdentifier","src":"3334:4:15"},{"name":"value","nativeSrc":"3340:5:15","nodeType":"YulIdentifier","src":"3340:5:15"}],"functionName":{"name":"shr","nativeSrc":"3330:3:15","nodeType":"YulIdentifier","src":"3330:3:15"},"nativeSrc":"3330:16:15","nodeType":"YulFunctionCall","src":"3330:16:15"},"variableNames":[{"name":"newValue","nativeSrc":"3309:8:15","nodeType":"YulIdentifier","src":"3309:8:15"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"3236:117:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"3274:4:15","nodeType":"YulTypedName","src":"3274:4:15","type":""},{"name":"value","nativeSrc":"3280:5:15","nodeType":"YulTypedName","src":"3280:5:15","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"3290:8:15","nodeType":"YulTypedName","src":"3290:8:15","type":""}],"src":"3236:117:15"},{"body":{"nativeSrc":"3410:118:15","nodeType":"YulBlock","src":"3410:118:15","statements":[{"nativeSrc":"3420:68:15","nodeType":"YulVariableDeclaration","src":"3420:68:15","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3469:1:15","nodeType":"YulLiteral","src":"3469:1:15","type":"","value":"8"},{"name":"bytes","nativeSrc":"3472:5:15","nodeType":"YulIdentifier","src":"3472:5:15"}],"functionName":{"name":"mul","nativeSrc":"3465:3:15","nodeType":"YulIdentifier","src":"3465:3:15"},"nativeSrc":"3465:13:15","nodeType":"YulFunctionCall","src":"3465:13:15"},{"arguments":[{"kind":"number","nativeSrc":"3484:1:15","nodeType":"YulLiteral","src":"3484:1:15","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3480:3:15","nodeType":"YulIdentifier","src":"3480:3:15"},"nativeSrc":"3480:6:15","nodeType":"YulFunctionCall","src":"3480:6:15"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"3436:28:15","nodeType":"YulIdentifier","src":"3436:28:15"},"nativeSrc":"3436:51:15","nodeType":"YulFunctionCall","src":"3436:51:15"}],"functionName":{"name":"not","nativeSrc":"3432:3:15","nodeType":"YulIdentifier","src":"3432:3:15"},"nativeSrc":"3432:56:15","nodeType":"YulFunctionCall","src":"3432:56:15"},"variables":[{"name":"mask","nativeSrc":"3424:4:15","nodeType":"YulTypedName","src":"3424:4:15","type":""}]},{"nativeSrc":"3497:25:15","nodeType":"YulAssignment","src":"3497:25:15","value":{"arguments":[{"name":"data","nativeSrc":"3511:4:15","nodeType":"YulIdentifier","src":"3511:4:15"},{"name":"mask","nativeSrc":"3517:4:15","nodeType":"YulIdentifier","src":"3517:4:15"}],"functionName":{"name":"and","nativeSrc":"3507:3:15","nodeType":"YulIdentifier","src":"3507:3:15"},"nativeSrc":"3507:15:15","nodeType":"YulFunctionCall","src":"3507:15:15"},"variableNames":[{"name":"result","nativeSrc":"3497:6:15","nodeType":"YulIdentifier","src":"3497:6:15"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"3359:169:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3387:4:15","nodeType":"YulTypedName","src":"3387:4:15","type":""},{"name":"bytes","nativeSrc":"3393:5:15","nodeType":"YulTypedName","src":"3393:5:15","type":""}],"returnVariables":[{"name":"result","nativeSrc":"3403:6:15","nodeType":"YulTypedName","src":"3403:6:15","type":""}],"src":"3359:169:15"},{"body":{"nativeSrc":"3614:214:15","nodeType":"YulBlock","src":"3614:214:15","statements":[{"nativeSrc":"3747:37:15","nodeType":"YulAssignment","src":"3747:37:15","value":{"arguments":[{"name":"data","nativeSrc":"3774:4:15","nodeType":"YulIdentifier","src":"3774:4:15"},{"name":"len","nativeSrc":"3780:3:15","nodeType":"YulIdentifier","src":"3780:3:15"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"3755:18:15","nodeType":"YulIdentifier","src":"3755:18:15"},"nativeSrc":"3755:29:15","nodeType":"YulFunctionCall","src":"3755:29:15"},"variableNames":[{"name":"data","nativeSrc":"3747:4:15","nodeType":"YulIdentifier","src":"3747:4:15"}]},{"nativeSrc":"3793:29:15","nodeType":"YulAssignment","src":"3793:29:15","value":{"arguments":[{"name":"data","nativeSrc":"3804:4:15","nodeType":"YulIdentifier","src":"3804:4:15"},{"arguments":[{"kind":"number","nativeSrc":"3814:1:15","nodeType":"YulLiteral","src":"3814:1:15","type":"","value":"2"},{"name":"len","nativeSrc":"3817:3:15","nodeType":"YulIdentifier","src":"3817:3:15"}],"functionName":{"name":"mul","nativeSrc":"3810:3:15","nodeType":"YulIdentifier","src":"3810:3:15"},"nativeSrc":"3810:11:15","nodeType":"YulFunctionCall","src":"3810:11:15"}],"functionName":{"name":"or","nativeSrc":"3801:2:15","nodeType":"YulIdentifier","src":"3801:2:15"},"nativeSrc":"3801:21:15","nodeType":"YulFunctionCall","src":"3801:21:15"},"variableNames":[{"name":"used","nativeSrc":"3793:4:15","nodeType":"YulIdentifier","src":"3793:4:15"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"3533:295:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3595:4:15","nodeType":"YulTypedName","src":"3595:4:15","type":""},{"name":"len","nativeSrc":"3601:3:15","nodeType":"YulTypedName","src":"3601:3:15","type":""}],"returnVariables":[{"name":"used","nativeSrc":"3609:4:15","nodeType":"YulTypedName","src":"3609:4:15","type":""}],"src":"3533:295:15"},{"body":{"nativeSrc":"3925:1303:15","nodeType":"YulBlock","src":"3925:1303:15","statements":[{"nativeSrc":"3936:51:15","nodeType":"YulVariableDeclaration","src":"3936:51:15","value":{"arguments":[{"name":"src","nativeSrc":"3983:3:15","nodeType":"YulIdentifier","src":"3983:3:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"3950:32:15","nodeType":"YulIdentifier","src":"3950:32:15"},"nativeSrc":"3950:37:15","nodeType":"YulFunctionCall","src":"3950:37:15"},"variables":[{"name":"newLen","nativeSrc":"3940:6:15","nodeType":"YulTypedName","src":"3940:6:15","type":""}]},{"body":{"nativeSrc":"4072:22:15","nodeType":"YulBlock","src":"4072:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4074:16:15","nodeType":"YulIdentifier","src":"4074:16:15"},"nativeSrc":"4074:18:15","nodeType":"YulFunctionCall","src":"4074:18:15"},"nativeSrc":"4074:18:15","nodeType":"YulExpressionStatement","src":"4074:18:15"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"4044:6:15","nodeType":"YulIdentifier","src":"4044:6:15"},{"kind":"number","nativeSrc":"4052:18:15","nodeType":"YulLiteral","src":"4052:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4041:2:15","nodeType":"YulIdentifier","src":"4041:2:15"},"nativeSrc":"4041:30:15","nodeType":"YulFunctionCall","src":"4041:30:15"},"nativeSrc":"4038:56:15","nodeType":"YulIf","src":"4038:56:15"},{"nativeSrc":"4104:52:15","nodeType":"YulVariableDeclaration","src":"4104:52:15","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"4150:4:15","nodeType":"YulIdentifier","src":"4150:4:15"}],"functionName":{"name":"sload","nativeSrc":"4144:5:15","nodeType":"YulIdentifier","src":"4144:5:15"},"nativeSrc":"4144:11:15","nodeType":"YulFunctionCall","src":"4144:11:15"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"4118:25:15","nodeType":"YulIdentifier","src":"4118:25:15"},"nativeSrc":"4118:38:15","nodeType":"YulFunctionCall","src":"4118:38:15"},"variables":[{"name":"oldLen","nativeSrc":"4108:6:15","nodeType":"YulTypedName","src":"4108:6:15","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4249:4:15","nodeType":"YulIdentifier","src":"4249:4:15"},{"name":"oldLen","nativeSrc":"4255:6:15","nodeType":"YulIdentifier","src":"4255:6:15"},{"name":"newLen","nativeSrc":"4263:6:15","nodeType":"YulIdentifier","src":"4263:6:15"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"4203:45:15","nodeType":"YulIdentifier","src":"4203:45:15"},"nativeSrc":"4203:67:15","nodeType":"YulFunctionCall","src":"4203:67:15"},"nativeSrc":"4203:67:15","nodeType":"YulExpressionStatement","src":"4203:67:15"},{"nativeSrc":"4280:18:15","nodeType":"YulVariableDeclaration","src":"4280:18:15","value":{"kind":"number","nativeSrc":"4297:1:15","nodeType":"YulLiteral","src":"4297:1:15","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"4284:9:15","nodeType":"YulTypedName","src":"4284:9:15","type":""}]},{"nativeSrc":"4308:17:15","nodeType":"YulAssignment","src":"4308:17:15","value":{"kind":"number","nativeSrc":"4321:4:15","nodeType":"YulLiteral","src":"4321:4:15","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"4308:9:15","nodeType":"YulIdentifier","src":"4308:9:15"}]},{"cases":[{"body":{"nativeSrc":"4372:611:15","nodeType":"YulBlock","src":"4372:611:15","statements":[{"nativeSrc":"4386:37:15","nodeType":"YulVariableDeclaration","src":"4386:37:15","value":{"arguments":[{"name":"newLen","nativeSrc":"4405:6:15","nodeType":"YulIdentifier","src":"4405:6:15"},{"arguments":[{"kind":"number","nativeSrc":"4417:4:15","nodeType":"YulLiteral","src":"4417:4:15","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"4413:3:15","nodeType":"YulIdentifier","src":"4413:3:15"},"nativeSrc":"4413:9:15","nodeType":"YulFunctionCall","src":"4413:9:15"}],"functionName":{"name":"and","nativeSrc":"4401:3:15","nodeType":"YulIdentifier","src":"4401:3:15"},"nativeSrc":"4401:22:15","nodeType":"YulFunctionCall","src":"4401:22:15"},"variables":[{"name":"loopEnd","nativeSrc":"4390:7:15","nodeType":"YulTypedName","src":"4390:7:15","type":""}]},{"nativeSrc":"4437:51:15","nodeType":"YulVariableDeclaration","src":"4437:51:15","value":{"arguments":[{"name":"slot","nativeSrc":"4483:4:15","nodeType":"YulIdentifier","src":"4483:4:15"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4451:31:15","nodeType":"YulIdentifier","src":"4451:31:15"},"nativeSrc":"4451:37:15","nodeType":"YulFunctionCall","src":"4451:37:15"},"variables":[{"name":"dstPtr","nativeSrc":"4441:6:15","nodeType":"YulTypedName","src":"4441:6:15","type":""}]},{"nativeSrc":"4501:10:15","nodeType":"YulVariableDeclaration","src":"4501:10:15","value":{"kind":"number","nativeSrc":"4510:1:15","nodeType":"YulLiteral","src":"4510:1:15","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4505:1:15","nodeType":"YulTypedName","src":"4505:1:15","type":""}]},{"body":{"nativeSrc":"4569:163:15","nodeType":"YulBlock","src":"4569:163:15","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4594:6:15","nodeType":"YulIdentifier","src":"4594:6:15"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4612:3:15","nodeType":"YulIdentifier","src":"4612:3:15"},{"name":"srcOffset","nativeSrc":"4617:9:15","nodeType":"YulIdentifier","src":"4617:9:15"}],"functionName":{"name":"add","nativeSrc":"4608:3:15","nodeType":"YulIdentifier","src":"4608:3:15"},"nativeSrc":"4608:19:15","nodeType":"YulFunctionCall","src":"4608:19:15"}],"functionName":{"name":"mload","nativeSrc":"4602:5:15","nodeType":"YulIdentifier","src":"4602:5:15"},"nativeSrc":"4602:26:15","nodeType":"YulFunctionCall","src":"4602:26:15"}],"functionName":{"name":"sstore","nativeSrc":"4587:6:15","nodeType":"YulIdentifier","src":"4587:6:15"},"nativeSrc":"4587:42:15","nodeType":"YulFunctionCall","src":"4587:42:15"},"nativeSrc":"4587:42:15","nodeType":"YulExpressionStatement","src":"4587:42:15"},{"nativeSrc":"4646:24:15","nodeType":"YulAssignment","src":"4646:24:15","value":{"arguments":[{"name":"dstPtr","nativeSrc":"4660:6:15","nodeType":"YulIdentifier","src":"4660:6:15"},{"kind":"number","nativeSrc":"4668:1:15","nodeType":"YulLiteral","src":"4668:1:15","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4656:3:15","nodeType":"YulIdentifier","src":"4656:3:15"},"nativeSrc":"4656:14:15","nodeType":"YulFunctionCall","src":"4656:14:15"},"variableNames":[{"name":"dstPtr","nativeSrc":"4646:6:15","nodeType":"YulIdentifier","src":"4646:6:15"}]},{"nativeSrc":"4687:31:15","nodeType":"YulAssignment","src":"4687:31:15","value":{"arguments":[{"name":"srcOffset","nativeSrc":"4704:9:15","nodeType":"YulIdentifier","src":"4704:9:15"},{"kind":"number","nativeSrc":"4715:2:15","nodeType":"YulLiteral","src":"4715:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4700:3:15","nodeType":"YulIdentifier","src":"4700:3:15"},"nativeSrc":"4700:18:15","nodeType":"YulFunctionCall","src":"4700:18:15"},"variableNames":[{"name":"srcOffset","nativeSrc":"4687:9:15","nodeType":"YulIdentifier","src":"4687:9:15"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4535:1:15","nodeType":"YulIdentifier","src":"4535:1:15"},{"name":"loopEnd","nativeSrc":"4538:7:15","nodeType":"YulIdentifier","src":"4538:7:15"}],"functionName":{"name":"lt","nativeSrc":"4532:2:15","nodeType":"YulIdentifier","src":"4532:2:15"},"nativeSrc":"4532:14:15","nodeType":"YulFunctionCall","src":"4532:14:15"},"nativeSrc":"4524:208:15","nodeType":"YulForLoop","post":{"nativeSrc":"4547:21:15","nodeType":"YulBlock","src":"4547:21:15","statements":[{"nativeSrc":"4549:17:15","nodeType":"YulAssignment","src":"4549:17:15","value":{"arguments":[{"name":"i","nativeSrc":"4558:1:15","nodeType":"YulIdentifier","src":"4558:1:15"},{"kind":"number","nativeSrc":"4561:4:15","nodeType":"YulLiteral","src":"4561:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4554:3:15","nodeType":"YulIdentifier","src":"4554:3:15"},"nativeSrc":"4554:12:15","nodeType":"YulFunctionCall","src":"4554:12:15"},"variableNames":[{"name":"i","nativeSrc":"4549:1:15","nodeType":"YulIdentifier","src":"4549:1:15"}]}]},"pre":{"nativeSrc":"4528:3:15","nodeType":"YulBlock","src":"4528:3:15","statements":[]},"src":"4524:208:15"},{"body":{"nativeSrc":"4768:156:15","nodeType":"YulBlock","src":"4768:156:15","statements":[{"nativeSrc":"4786:43:15","nodeType":"YulVariableDeclaration","src":"4786:43:15","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4813:3:15","nodeType":"YulIdentifier","src":"4813:3:15"},{"name":"srcOffset","nativeSrc":"4818:9:15","nodeType":"YulIdentifier","src":"4818:9:15"}],"functionName":{"name":"add","nativeSrc":"4809:3:15","nodeType":"YulIdentifier","src":"4809:3:15"},"nativeSrc":"4809:19:15","nodeType":"YulFunctionCall","src":"4809:19:15"}],"functionName":{"name":"mload","nativeSrc":"4803:5:15","nodeType":"YulIdentifier","src":"4803:5:15"},"nativeSrc":"4803:26:15","nodeType":"YulFunctionCall","src":"4803:26:15"},"variables":[{"name":"lastValue","nativeSrc":"4790:9:15","nodeType":"YulTypedName","src":"4790:9:15","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4853:6:15","nodeType":"YulIdentifier","src":"4853:6:15"},{"arguments":[{"name":"lastValue","nativeSrc":"4880:9:15","nodeType":"YulIdentifier","src":"4880:9:15"},{"arguments":[{"name":"newLen","nativeSrc":"4895:6:15","nodeType":"YulIdentifier","src":"4895:6:15"},{"kind":"number","nativeSrc":"4903:4:15","nodeType":"YulLiteral","src":"4903:4:15","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"4891:3:15","nodeType":"YulIdentifier","src":"4891:3:15"},"nativeSrc":"4891:17:15","nodeType":"YulFunctionCall","src":"4891:17:15"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"4861:18:15","nodeType":"YulIdentifier","src":"4861:18:15"},"nativeSrc":"4861:48:15","nodeType":"YulFunctionCall","src":"4861:48:15"}],"functionName":{"name":"sstore","nativeSrc":"4846:6:15","nodeType":"YulIdentifier","src":"4846:6:15"},"nativeSrc":"4846:64:15","nodeType":"YulFunctionCall","src":"4846:64:15"},"nativeSrc":"4846:64:15","nodeType":"YulExpressionStatement","src":"4846:64:15"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"4751:7:15","nodeType":"YulIdentifier","src":"4751:7:15"},{"name":"newLen","nativeSrc":"4760:6:15","nodeType":"YulIdentifier","src":"4760:6:15"}],"functionName":{"name":"lt","nativeSrc":"4748:2:15","nodeType":"YulIdentifier","src":"4748:2:15"},"nativeSrc":"4748:19:15","nodeType":"YulFunctionCall","src":"4748:19:15"},"nativeSrc":"4745:179:15","nodeType":"YulIf","src":"4745:179:15"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4944:4:15","nodeType":"YulIdentifier","src":"4944:4:15"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"4958:6:15","nodeType":"YulIdentifier","src":"4958:6:15"},{"kind":"number","nativeSrc":"4966:1:15","nodeType":"YulLiteral","src":"4966:1:15","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"4954:3:15","nodeType":"YulIdentifier","src":"4954:3:15"},"nativeSrc":"4954:14:15","nodeType":"YulFunctionCall","src":"4954:14:15"},{"kind":"number","nativeSrc":"4970:1:15","nodeType":"YulLiteral","src":"4970:1:15","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4950:3:15","nodeType":"YulIdentifier","src":"4950:3:15"},"nativeSrc":"4950:22:15","nodeType":"YulFunctionCall","src":"4950:22:15"}],"functionName":{"name":"sstore","nativeSrc":"4937:6:15","nodeType":"YulIdentifier","src":"4937:6:15"},"nativeSrc":"4937:36:15","nodeType":"YulFunctionCall","src":"4937:36:15"},"nativeSrc":"4937:36:15","nodeType":"YulExpressionStatement","src":"4937:36:15"}]},"nativeSrc":"4365:618:15","nodeType":"YulCase","src":"4365:618:15","value":{"kind":"number","nativeSrc":"4370:1:15","nodeType":"YulLiteral","src":"4370:1:15","type":"","value":"1"}},{"body":{"nativeSrc":"5000:222:15","nodeType":"YulBlock","src":"5000:222:15","statements":[{"nativeSrc":"5014:14:15","nodeType":"YulVariableDeclaration","src":"5014:14:15","value":{"kind":"number","nativeSrc":"5027:1:15","nodeType":"YulLiteral","src":"5027:1:15","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"5018:5:15","nodeType":"YulTypedName","src":"5018:5:15","type":""}]},{"body":{"nativeSrc":"5051:67:15","nodeType":"YulBlock","src":"5051:67:15","statements":[{"nativeSrc":"5069:35:15","nodeType":"YulAssignment","src":"5069:35:15","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5088:3:15","nodeType":"YulIdentifier","src":"5088:3:15"},{"name":"srcOffset","nativeSrc":"5093:9:15","nodeType":"YulIdentifier","src":"5093:9:15"}],"functionName":{"name":"add","nativeSrc":"5084:3:15","nodeType":"YulIdentifier","src":"5084:3:15"},"nativeSrc":"5084:19:15","nodeType":"YulFunctionCall","src":"5084:19:15"}],"functionName":{"name":"mload","nativeSrc":"5078:5:15","nodeType":"YulIdentifier","src":"5078:5:15"},"nativeSrc":"5078:26:15","nodeType":"YulFunctionCall","src":"5078:26:15"},"variableNames":[{"name":"value","nativeSrc":"5069:5:15","nodeType":"YulIdentifier","src":"5069:5:15"}]}]},"condition":{"name":"newLen","nativeSrc":"5044:6:15","nodeType":"YulIdentifier","src":"5044:6:15"},"nativeSrc":"5041:77:15","nodeType":"YulIf","src":"5041:77:15"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5138:4:15","nodeType":"YulIdentifier","src":"5138:4:15"},{"arguments":[{"name":"value","nativeSrc":"5197:5:15","nodeType":"YulIdentifier","src":"5197:5:15"},{"name":"newLen","nativeSrc":"5204:6:15","nodeType":"YulIdentifier","src":"5204:6:15"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"5144:52:15","nodeType":"YulIdentifier","src":"5144:52:15"},"nativeSrc":"5144:67:15","nodeType":"YulFunctionCall","src":"5144:67:15"}],"functionName":{"name":"sstore","nativeSrc":"5131:6:15","nodeType":"YulIdentifier","src":"5131:6:15"},"nativeSrc":"5131:81:15","nodeType":"YulFunctionCall","src":"5131:81:15"},"nativeSrc":"5131:81:15","nodeType":"YulExpressionStatement","src":"5131:81:15"}]},"nativeSrc":"4992:230:15","nodeType":"YulCase","src":"4992:230:15","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"4345:6:15","nodeType":"YulIdentifier","src":"4345:6:15"},{"kind":"number","nativeSrc":"4353:2:15","nodeType":"YulLiteral","src":"4353:2:15","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4342:2:15","nodeType":"YulIdentifier","src":"4342:2:15"},"nativeSrc":"4342:14:15","nodeType":"YulFunctionCall","src":"4342:14:15"},"nativeSrc":"4335:887:15","nodeType":"YulSwitch","src":"4335:887:15"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"3833:1395:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3914:4:15","nodeType":"YulTypedName","src":"3914:4:15","type":""},{"name":"src","nativeSrc":"3920:3:15","nodeType":"YulTypedName","src":"3920:3:15","type":""}],"src":"3833:1395:15"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040518060400160405280600981526020017f4c495155494449545900000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f4c50000000000000000000000000000000000000000000000000000000000000815250816003908161008c91906102f4565b50806004908161009c91906102f4565b5050506103c6565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061012557607f821691505b602082108103610138576101376100de565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026101a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610163565b6101aa8683610163565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006101f16101ec6101e7846101c2565b6101cc565b6101c2565b9050919050565b6000819050919050565b61020b836101d6565b61021f610217826101f8565b848454610170565b825550505050565b600090565b610234610227565b61023f818484610202565b505050565b5b818110156102635761025860008261022c565b600181019050610245565b5050565b601f8211156102a8576102798161013e565b61028284610153565b81016020851015610291578190505b6102a561029d85610153565b830182610244565b50505b505050565b600082821c905092915050565b60006102cb600019846008026102ad565b1980831691505092915050565b60006102e483836102ba565b9150826002028217905092915050565b6102fd826100a4565b67ffffffffffffffff811115610316576103156100af565b5b610320825461010d565b61032b828285610267565b600060209050601f83116001811461035e576000841561034c578287015190505b61035685826102d8565b8655506103be565b601f19841661036c8661013e565b60005b828110156103945784890151825560018201915060208501945060208101905061036f565b868310156103b157848901516103ad601f8916826102ba565b8355505b6001600288020188555050505b505050505050565b612e60806103d56000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063baa2abde11610071578063baa2abde1461030b578063dc5fa6c51461033c578063dd62ed3e1461035a578063e8e337001461038a578063eed86c96146103bc57610116565b806370a082311461025d57806395d89b411461028d578063a9059cbb146102ab578063ac41865a146102db57610116565b806319e36f3b116100e957806319e36f3b146101b757806323b872dd146101d5578063313ce5671461020557806338ed17391461022357806350430ce41461023f57610116565b8063054d50d41461011b57806306fdde031461014b578063095ea7b31461016957806318160ddd14610199575b600080fd5b61013560048036038101906101309190612008565b6103da565b604051610142919061206a565b60405180910390f35b610153610498565b6040516101609190612115565b60405180910390f35b610183600480360381019061017e9190612195565b61052a565b60405161019091906121f0565b60405180910390f35b6101a161054d565b6040516101ae919061206a565b60405180910390f35b6101bf610557565b6040516101cc919061206a565b60405180910390f35b6101ef60048036038101906101ea919061220b565b61055d565b6040516101fc91906121f0565b60405180910390f35b61020d61058c565b60405161021a919061227a565b60405180910390f35b61023d600480360381019061023891906122fa565b610595565b005b610247610991565b60405161025491906123a3565b60405180910390f35b610277600480360381019061027291906123be565b6109b7565b604051610284919061206a565b60405180910390f35b6102956109ff565b6040516102a29190612115565b60405180910390f35b6102c560048036038101906102c09190612195565b610a91565b6040516102d291906121f0565b60405180910390f35b6102f560048036038101906102f091906123eb565b610ab4565b604051610302919061206a565b60405180910390f35b6103256004803603810190610320919061242b565b610c9d565b6040516103339291906124cd565b60405180910390f35b610344610ff5565b604051610351919061206a565b60405180910390f35b610374600480360381019061036f91906123eb565b610ffb565b604051610381919061206a565b60405180910390f35b6103a4600480360381019061039f91906124f6565b611082565b6040516103b3939291906125ac565b60405180910390f35b6103c46115b3565b6040516103d191906123a3565b60405180910390f35b600080841161041e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104159061262f565b60405180910390fd5b60008311801561042e5750600082115b61046d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104649061269b565b60405180910390fd5b838361047991906126ea565b8285610485919061271e565b61048f919061278f565b90509392505050565b6060600380546104a7906127ef565b80601f01602080910402602001604051908101604052809291908181526020018280546104d3906127ef565b80156105205780601f106104f557610100808354040283529160200191610520565b820191906000526020600020905b81548152906001019060200180831161050357829003601f168201915b5050505050905090565b6000806105356115d9565b90506105428185856115e1565b600191505092915050565b6000600254905090565b60085481565b6000806105686115d9565b90506105758582856115f3565b610580858585611688565b60019150509392505050565b60006012905090565b804211156105d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cf9061286c565b60405180910390fd5b6002848490501461061e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610615906128d8565b60405180910390fd5b600084846000818110610634576106336128f8565b5b905060200201602081019061064991906123be565b9050600085856001818110610661576106606128f8565b5b905060200201602081019061067691906123be565b90506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614801561072c57508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b8061079957508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614801561079857508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b5b6107d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cf90612973565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161461081957600854600754610820565b6007546008545b9150915061085133308e8973ffffffffffffffffffffffffffffffffffffffff1661177c909392919063ffffffff16565b60008c8361085f91906126ea565b828e61086b919061271e565b610875919061278f565b90508b8110156108ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b1906129df565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603610924578c600760008282546108ff91906126ea565b92505081905550806008600082825461091891906129ff565b92505081905550610957565b8c6008600082825461093691906126ea565b92505081905550806007600082825461094f91906129ff565b925050819055505b61098289828873ffffffffffffffffffffffffffffffffffffffff166117fe9092919063ffffffff16565b50505050505050505050505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054610a0e906127ef565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3a906127ef565b8015610a875780601f10610a5c57610100808354040283529160200191610a87565b820191906000526020600020905b815481529060010190602001808311610a6a57829003601f168201915b5050505050905090565b600080610a9c6115d9565b9050610aa9818585611688565b600191505092915050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148015610b6957508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b80610bd657508073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148015610bd557508173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b5b610c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0c90612a7f565b60405180910390fd5b6000600754905060006008549050600082118015610c335750600081115b610c72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6990612aeb565b60405180910390fd5b81670de0b6b3a764000082610c87919061271e565b610c91919061278f565b94505050505092915050565b60008082421115610ce3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cda9061286c565b60405180910390fd5b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff16148015610d9757508073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16145b80610e0457508073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff16148015610e0357508173ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16145b5b610e43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3a90612a7f565b60405180910390fd5b60006007549050600060085490506000610e5b61054d565b90508b610e67336109b7565b1015610ea8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9f90612b57565b60405180910390fd5b80838d610eb5919061271e565b610ebf919061278f565b965080828d610ece919061271e565b610ed8919061278f565b95508a871015610f1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1490612bc3565b60405180910390fd5b89861015610f60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5790612c2f565b60405180910390fd5b610f6a338d61187d565b8683610f7691906129ff565b6007819055508582610f8891906129ff565b600881905550610fb989888773ffffffffffffffffffffffffffffffffffffffff166117fe9092919063ffffffff16565b610fe489878673ffffffffffffffffffffffffffffffffffffffff166117fe9092919063ffffffff16565b505050505097509795505050505050565b60075481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000806000834211156110ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c19061286c565b60405180910390fd5b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480156111805750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b15611280578b73ffffffffffffffffffffffffffffffffffffffff168d73ffffffffffffffffffffffffffffffffffffffff16036111f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ea90612c9b565b60405180910390fd5b8c600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508b600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508c91508b9050611393565b8173ffffffffffffffffffffffffffffffffffffffff168d73ffffffffffffffffffffffffffffffffffffffff161480156112e657508073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff16145b8061135357508073ffffffffffffffffffffffffffffffffffffffff168d73ffffffffffffffffffffffffffffffffffffffff1614801561135257508173ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff16145b5b611392576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138990612a7f565b60405180910390fd5b5b600060075490506000600854905060006113ab61054d565b9050600081036113d6578d97508c96506113cf87896113ca919061271e565b6118ff565b955061144f565b8d97508282896113e6919061271e565b6113f0919061278f565b96508c871115611435576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142c90612d07565b60405180910390fd5b828189611442919061271e565b61144c919061278f565b95505b8b881015611492576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148990612bc3565b60405180910390fd5b8a8710156114d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114cc90612c2f565b60405180910390fd5b60008611611518576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150f90612d73565b60405180910390fd5b61154533308a8873ffffffffffffffffffffffffffffffffffffffff1661177c909392919063ffffffff16565b6115723330898773ffffffffffffffffffffffffffffffffffffffff1661177c909392919063ffffffff16565b878361157e91906126ea565b600781905550868261159091906126ea565b6008819055506115a08a87611a9c565b5050505050985098509895505050505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6115ee8383836001611b1e565b505050565b60006115ff8484610ffb565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156116825781811015611672578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161166993929190612d93565b60405180910390fd5b61168184848484036000611b1e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116fa5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016116f191906123a3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361176c5760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161176391906123a3565b60405180910390fd5b611777838383611cf5565b505050565b6117f8848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016117b193929190612dca565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611f1a565b50505050565b611878838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611831929190612e01565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611f1a565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118ef5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016118e691906123a3565b60405180910390fd5b6118fb82600083611cf5565b5050565b60006001821161191157819050611a97565b6000829050600060019050700100000000000000000000000000000000821061194357608082901c9150604081901b90505b68010000000000000000821061196257604082901c9150602081901b90505b640100000000821061197d57602082901c9150601081901b90505b62010000821061199657601082901c9150600881901b90505b61010082106119ae57600882901c9150600481901b90505b601082106119c557600482901c9150600281901b90505b600482106119d557600181901b90505b600181600302901c905060018185816119f1576119f0612760565b5b048201901c90506001818581611a0a57611a09612760565b5b048201901c90506001818581611a2357611a22612760565b5b048201901c90506001818581611a3c57611a3b612760565b5b048201901c90506001818581611a5557611a54612760565b5b048201901c90506001818581611a6e57611a6d612760565b5b048201901c9050611a90818581611a8857611a87612760565b5b048211611fbc565b8103925050505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b0e5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611b0591906123a3565b60405180910390fd5b611b1a60008383611cf5565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611b905760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611b8791906123a3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c025760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611bf991906123a3565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611cef578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611ce6919061206a565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d47578060026000828254611d3b91906126ea565b92505081905550611e1a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611dd3578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611dca93929190612d93565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611e635780600260008282540392505081905550611eb0565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611f0d919061206a565b60405180910390a3505050565b600080602060008451602086016000885af180611f3d576040513d6000823e3d81fd5b3d925060005191505060008214611f58576001811415611f74565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b15611fb657836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611fad91906123a3565b60405180910390fd5b50505050565b60008115159050919050565b600080fd5b600080fd5b6000819050919050565b611fe581611fd2565b8114611ff057600080fd5b50565b60008135905061200281611fdc565b92915050565b60008060006060848603121561202157612020611fc8565b5b600061202f86828701611ff3565b935050602061204086828701611ff3565b925050604061205186828701611ff3565b9150509250925092565b61206481611fd2565b82525050565b600060208201905061207f600083018461205b565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156120bf5780820151818401526020810190506120a4565b60008484015250505050565b6000601f19601f8301169050919050565b60006120e782612085565b6120f18185612090565b93506121018185602086016120a1565b61210a816120cb565b840191505092915050565b6000602082019050818103600083015261212f81846120dc565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061216282612137565b9050919050565b61217281612157565b811461217d57600080fd5b50565b60008135905061218f81612169565b92915050565b600080604083850312156121ac576121ab611fc8565b5b60006121ba85828601612180565b92505060206121cb85828601611ff3565b9150509250929050565b60008115159050919050565b6121ea816121d5565b82525050565b600060208201905061220560008301846121e1565b92915050565b60008060006060848603121561222457612223611fc8565b5b600061223286828701612180565b935050602061224386828701612180565b925050604061225486828701611ff3565b9150509250925092565b600060ff82169050919050565b6122748161225e565b82525050565b600060208201905061228f600083018461226b565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126122ba576122b9612295565b5b8235905067ffffffffffffffff8111156122d7576122d661229a565b5b6020830191508360208202830111156122f3576122f261229f565b5b9250929050565b60008060008060008060a0878903121561231757612316611fc8565b5b600061232589828a01611ff3565b965050602061233689828a01611ff3565b955050604087013567ffffffffffffffff81111561235757612356611fcd565b5b61236389828a016122a4565b9450945050606061237689828a01612180565b925050608061238789828a01611ff3565b9150509295509295509295565b61239d81612157565b82525050565b60006020820190506123b86000830184612394565b92915050565b6000602082840312156123d4576123d3611fc8565b5b60006123e284828501612180565b91505092915050565b6000806040838503121561240257612401611fc8565b5b600061241085828601612180565b925050602061242185828601612180565b9150509250929050565b600080600080600080600060e0888a03121561244a57612449611fc8565b5b60006124588a828b01612180565b97505060206124698a828b01612180565b965050604061247a8a828b01611ff3565b955050606061248b8a828b01611ff3565b945050608061249c8a828b01611ff3565b93505060a06124ad8a828b01612180565b92505060c06124be8a828b01611ff3565b91505092959891949750929550565b60006040820190506124e2600083018561205b565b6124ef602083018461205b565b9392505050565b600080600080600080600080610100898b03121561251757612516611fc8565b5b60006125258b828c01612180565b98505060206125368b828c01612180565b97505060406125478b828c01611ff3565b96505060606125588b828c01611ff3565b95505060806125698b828c01611ff3565b94505060a061257a8b828c01611ff3565b93505060c061258b8b828c01612180565b92505060e061259c8b828c01611ff3565b9150509295985092959890939650565b60006060820190506125c1600083018661205b565b6125ce602083018561205b565b6125db604083018461205b565b949350505050565b7f5a65726f20696e70757400000000000000000000000000000000000000000000600082015250565b6000612619600a83612090565b9150612624826125e3565b602082019050919050565b600060208201905081810360008301526126488161260c565b9050919050565b7f456d707479207265736572766573000000000000000000000000000000000000600082015250565b6000612685600e83612090565b91506126908261264f565b602082019050919050565b600060208201905081810360008301526126b481612678565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006126f582611fd2565b915061270083611fd2565b9250828201905080821115612718576127176126bb565b5b92915050565b600061272982611fd2565b915061273483611fd2565b925082820261274281611fd2565b91508282048414831517612759576127586126bb565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061279a82611fd2565b91506127a583611fd2565b9250826127b5576127b4612760565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061280757607f821691505b60208210810361281a576128196127c0565b5b50919050565b7f4578706972656400000000000000000000000000000000000000000000000000600082015250565b6000612856600783612090565b915061286182612820565b602082019050919050565b6000602082019050818103600083015261288581612849565b9050919050565b7f4f6e6c7920322d746f6b656e2073776170730000000000000000000000000000600082015250565b60006128c2601283612090565b91506128cd8261288c565b602082019050919050565b600060208201905081810360008301526128f1816128b5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f496e76616c696420737761702070617468000000000000000000000000000000600082015250565b600061295d601183612090565b915061296882612927565b602082019050919050565b6000602082019050818103600083015261298c81612950565b9050919050565b7f536c697070616765000000000000000000000000000000000000000000000000600082015250565b60006129c9600883612090565b91506129d482612993565b602082019050919050565b600060208201905081810360008301526129f8816129bc565b9050919050565b6000612a0a82611fd2565b9150612a1583611fd2565b9250828203905081811115612a2d57612a2c6126bb565b5b92915050565b7f496e76616c696420746f6b656e20706169720000000000000000000000000000600082015250565b6000612a69601283612090565b9150612a7482612a33565b602082019050919050565b60006020820190508181036000830152612a9881612a5c565b9050919050565b7f4e6f207265736572766573000000000000000000000000000000000000000000600082015250565b6000612ad5600b83612090565b9150612ae082612a9f565b602082019050919050565b60006020820190508181036000830152612b0481612ac8565b9050919050565b7f4e6f7420656e6f756768204c5000000000000000000000000000000000000000600082015250565b6000612b41600d83612090565b9150612b4c82612b0b565b602082019050919050565b60006020820190508181036000830152612b7081612b34565b9050919050565b7f4c6f772041000000000000000000000000000000000000000000000000000000600082015250565b6000612bad600583612090565b9150612bb882612b77565b602082019050919050565b60006020820190508181036000830152612bdc81612ba0565b9050919050565b7f4c6f772042000000000000000000000000000000000000000000000000000000600082015250565b6000612c19600583612090565b9150612c2482612be3565b602082019050919050565b60006020820190508181036000830152612c4881612c0c565b9050919050565b7f546f6b656e73206d757374206469666665720000000000000000000000000000600082015250565b6000612c85601283612090565b9150612c9082612c4f565b602082019050919050565b60006020820190508181036000830152612cb481612c78565b9050919050565b7f546f6f206d756368204200000000000000000000000000000000000000000000600082015250565b6000612cf1600a83612090565b9150612cfc82612cbb565b602082019050919050565b60006020820190508181036000830152612d2081612ce4565b9050919050565b7f5a65726f206c6971756964697479000000000000000000000000000000000000600082015250565b6000612d5d600e83612090565b9150612d6882612d27565b602082019050919050565b60006020820190508181036000830152612d8c81612d50565b9050919050565b6000606082019050612da86000830186612394565b612db5602083018561205b565b612dc2604083018461205b565b949350505050565b6000606082019050612ddf6000830186612394565b612dec6020830185612394565b612df9604083018461205b565b949350505050565b6000604082019050612e166000830185612394565b612e23602083018461205b565b939250505056fea2646970667358221220979623ea2f95bd53c2b05b9029edb6f39df879b879d117e65ff93d3f45da166364736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C49515549444954590000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C50000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST POP POP POP PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x125 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x138 JUMPI PUSH2 0x137 PUSH2 0xDE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1A0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x1AA DUP7 DUP4 PUSH2 0x163 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1 PUSH2 0x1EC PUSH2 0x1E7 DUP5 PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0x1CC JUMP JUMPDEST PUSH2 0x1C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20B DUP4 PUSH2 0x1D6 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x217 DUP3 PUSH2 0x1F8 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x170 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x227 JUMP JUMPDEST PUSH2 0x23F DUP2 DUP5 DUP5 PUSH2 0x202 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x263 JUMPI PUSH2 0x258 PUSH1 0x0 DUP3 PUSH2 0x22C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x245 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x279 DUP2 PUSH2 0x13E JUMP JUMPDEST PUSH2 0x282 DUP5 PUSH2 0x153 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x291 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2A5 PUSH2 0x29D DUP6 PUSH2 0x153 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x244 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2AD JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E4 DUP4 DUP4 PUSH2 0x2BA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2FD DUP3 PUSH2 0xA4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x316 JUMPI PUSH2 0x315 PUSH2 0xAF JUMP JUMPDEST JUMPDEST PUSH2 0x320 DUP3 SLOAD PUSH2 0x10D JUMP JUMPDEST PUSH2 0x32B DUP3 DUP3 DUP6 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x35E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x34C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x356 DUP6 DUP3 PUSH2 0x2D8 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x36C DUP7 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x394 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x36F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3B1 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3AD PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2BA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2E60 DUP1 PUSH2 0x3D5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xBAA2ABDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBAA2ABDE EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0xDC5FA6C5 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xE8E33700 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xEED86C96 EQ PUSH2 0x3BC JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0x2DB JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x19E36F3B GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x19E36F3B EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x38ED1739 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x50430CE4 EQ PUSH2 0x23F JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x54D50D4 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x498 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x2195 JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x21F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x21F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x58C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x595 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x247 PUSH2 0x991 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x23BE JUMP JUMPDEST PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x2195 JUMP JUMPDEST PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x21F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP3 SWAP2 SWAP1 PUSH2 0x24CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x344 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST PUSH2 0xFFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C4 PUSH2 0x15B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP5 GT PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x415 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT DUP1 ISZERO PUSH2 0x42E JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x46D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x464 SWAP1 PUSH2 0x269B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x26EA JUMP JUMPDEST DUP3 DUP6 PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH2 0x48F SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4A7 SWAP1 PUSH2 0x27EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D3 SWAP1 PUSH2 0x27EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x520 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4F5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x520 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x503 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x535 PUSH2 0x15D9 JUMP JUMPDEST SWAP1 POP PUSH2 0x542 DUP2 DUP6 DUP6 PUSH2 0x15E1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x568 PUSH2 0x15D9 JUMP JUMPDEST SWAP1 POP PUSH2 0x575 DUP6 DUP3 DUP6 PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0x580 DUP6 DUP6 DUP6 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 TIMESTAMP GT ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CF SWAP1 PUSH2 0x286C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP5 DUP5 SWAP1 POP EQ PUSH2 0x61E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x28D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x634 JUMPI PUSH2 0x633 PUSH2 0x28F8 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x649 SWAP2 SWAP1 PUSH2 0x23BE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 DUP6 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x661 JUMPI PUSH2 0x660 PUSH2 0x28F8 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x676 SWAP2 SWAP1 PUSH2 0x23BE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x72C JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x799 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x798 JUMPI POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST PUSH2 0x7D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CF SWAP1 PUSH2 0x2973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x819 JUMPI PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0x820 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x851 CALLER ADDRESS DUP15 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x177C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP13 DUP4 PUSH2 0x85F SWAP2 SWAP1 PUSH2 0x26EA JUMP JUMPDEST DUP3 DUP15 PUSH2 0x86B SWAP2 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH2 0x875 SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST SWAP1 POP DUP12 DUP2 LT ISZERO PUSH2 0x8BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B1 SWAP1 PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x924 JUMPI DUP13 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8FF SWAP2 SWAP1 PUSH2 0x26EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x918 SWAP2 SWAP1 PUSH2 0x29FF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x957 JUMP JUMPDEST DUP13 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x936 SWAP2 SWAP1 PUSH2 0x26EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x94F SWAP2 SWAP1 PUSH2 0x29FF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x982 DUP10 DUP3 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17FE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA0E SWAP1 PUSH2 0x27EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA3A SWAP1 PUSH2 0x27EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA87 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA5C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA87 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA6A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA9C PUSH2 0x15D9 JUMP JUMPDEST SWAP1 POP PUSH2 0xAA9 DUP2 DUP6 DUP6 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB69 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xBD6 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xBD5 JUMPI POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST PUSH2 0xC15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0C SWAP1 PUSH2 0x2A7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0xC33 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0xC72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC69 SWAP1 PUSH2 0x2AEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0xC87 SWAP2 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH2 0xC91 SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 TIMESTAMP GT ISZERO PUSH2 0xCE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDA SWAP1 PUSH2 0x286C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xD97 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xE04 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xE03 JUMPI POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST PUSH2 0xE43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3A SWAP1 PUSH2 0x2A7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xE5B PUSH2 0x54D JUMP JUMPDEST SWAP1 POP DUP12 PUSH2 0xE67 CALLER PUSH2 0x9B7 JUMP JUMPDEST LT ISZERO PUSH2 0xEA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9F SWAP1 PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP4 DUP14 PUSH2 0xEB5 SWAP2 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH2 0xEBF SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST SWAP7 POP DUP1 DUP3 DUP14 PUSH2 0xECE SWAP2 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH2 0xED8 SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST SWAP6 POP DUP11 DUP8 LT ISZERO PUSH2 0xF1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF14 SWAP1 PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 DUP7 LT ISZERO PUSH2 0xF60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF57 SWAP1 PUSH2 0x2C2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF6A CALLER DUP14 PUSH2 0x187D JUMP JUMPDEST DUP7 DUP4 PUSH2 0xF76 SWAP2 SWAP1 PUSH2 0x29FF JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP6 DUP3 PUSH2 0xF88 SWAP2 SWAP1 PUSH2 0x29FF JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0xFB9 DUP10 DUP9 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17FE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xFE4 DUP10 DUP8 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17FE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 TIMESTAMP GT ISZERO PUSH2 0x10CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C1 SWAP1 PUSH2 0x286C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1180 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1280 JUMPI DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EA SWAP1 PUSH2 0x2C9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP13 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP12 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP13 SWAP2 POP DUP12 SWAP1 POP PUSH2 0x1393 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x12E6 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x1353 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1352 JUMPI POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST PUSH2 0x1392 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1389 SWAP1 PUSH2 0x2A7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x13AB PUSH2 0x54D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x13D6 JUMPI DUP14 SWAP8 POP DUP13 SWAP7 POP PUSH2 0x13CF DUP8 DUP10 PUSH2 0x13CA SWAP2 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH2 0x18FF JUMP JUMPDEST SWAP6 POP PUSH2 0x144F JUMP JUMPDEST DUP14 SWAP8 POP DUP3 DUP3 DUP10 PUSH2 0x13E6 SWAP2 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH2 0x13F0 SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST SWAP7 POP DUP13 DUP8 GT ISZERO PUSH2 0x1435 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142C SWAP1 PUSH2 0x2D07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 DUP10 PUSH2 0x1442 SWAP2 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH2 0x144C SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST SWAP6 POP JUMPDEST DUP12 DUP9 LT ISZERO PUSH2 0x1492 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1489 SWAP1 PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP11 DUP8 LT ISZERO PUSH2 0x14D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CC SWAP1 PUSH2 0x2C2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 GT PUSH2 0x1518 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150F SWAP1 PUSH2 0x2D73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1545 CALLER ADDRESS DUP11 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x177C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1572 CALLER ADDRESS DUP10 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x177C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 DUP4 PUSH2 0x157E SWAP2 SWAP1 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP7 DUP3 PUSH2 0x1590 SWAP2 SWAP1 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x15A0 DUP11 DUP8 PUSH2 0x1A9C JUMP JUMPDEST POP POP POP POP POP SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x15EE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1B1E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15FF DUP5 DUP5 PUSH2 0xFFB JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1682 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1672 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1669 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1681 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1B1E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16FA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F1 SWAP2 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x176C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1763 SWAP2 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1777 DUP4 DUP4 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x17F8 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x17B1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1F1A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1878 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1831 SWAP3 SWAP2 SWAP1 PUSH2 0x2E01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1F1A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18EF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18E6 SWAP2 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18FB DUP3 PUSH1 0x0 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 GT PUSH2 0x1911 JUMPI DUP2 SWAP1 POP PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH17 0x100000000000000000000000000000000 DUP3 LT PUSH2 0x1943 JUMPI PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x40 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x1962 JUMPI PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x20 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x197D JUMPI PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x10 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x1996 JUMPI PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x8 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x19AE JUMPI PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x4 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x19C5 JUMPI PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x2 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x19D5 JUMPI PUSH1 0x1 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x3 MUL SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x19F1 JUMPI PUSH2 0x19F0 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A0A JUMPI PUSH2 0x1A09 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A23 JUMPI PUSH2 0x1A22 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A3C JUMPI PUSH2 0x1A3B PUSH2 0x2760 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A55 JUMPI PUSH2 0x1A54 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A6E JUMPI PUSH2 0x1A6D PUSH2 0x2760 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x1A90 DUP2 DUP6 DUP2 PUSH2 0x1A88 JUMPI PUSH2 0x1A87 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST DIV DUP3 GT PUSH2 0x1FBC JUMP JUMPDEST DUP2 SUB SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B0E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B05 SWAP2 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B1A PUSH1 0x0 DUP4 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B90 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B87 SWAP2 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C02 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF9 SWAP2 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1CEF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1CE6 SWAP2 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D47 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D3B SWAP2 SWAP1 PUSH2 0x26EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E1A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1DD3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DCA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E63 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1EB0 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F0D SWAP2 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x1F3D JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH1 0x0 MLOAD SWAP2 POP POP PUSH1 0x0 DUP3 EQ PUSH2 0x1F58 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1F74 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1FB6 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FAD SWAP2 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FE5 DUP2 PUSH2 0x1FD2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2002 DUP2 PUSH2 0x1FDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2021 JUMPI PUSH2 0x2020 PUSH2 0x1FC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x202F DUP7 DUP3 DUP8 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2040 DUP7 DUP3 DUP8 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2051 DUP7 DUP3 DUP8 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2064 DUP2 PUSH2 0x1FD2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x207F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x205B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20BF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20A4 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E7 DUP3 PUSH2 0x2085 JUMP JUMPDEST PUSH2 0x20F1 DUP2 DUP6 PUSH2 0x2090 JUMP JUMPDEST SWAP4 POP PUSH2 0x2101 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20A1 JUMP JUMPDEST PUSH2 0x210A DUP2 PUSH2 0x20CB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x212F DUP2 DUP5 PUSH2 0x20DC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2162 DUP3 PUSH2 0x2137 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2172 DUP2 PUSH2 0x2157 JUMP JUMPDEST DUP2 EQ PUSH2 0x217D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x218F DUP2 PUSH2 0x2169 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21AC JUMPI PUSH2 0x21AB PUSH2 0x1FC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21BA DUP6 DUP3 DUP7 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21CB DUP6 DUP3 DUP7 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21EA DUP2 PUSH2 0x21D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2205 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2224 JUMPI PUSH2 0x2223 PUSH2 0x1FC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2232 DUP7 DUP3 DUP8 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2243 DUP7 DUP3 DUP8 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2254 DUP7 DUP3 DUP8 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2274 DUP2 PUSH2 0x225E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x228F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x226B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x22BA JUMPI PUSH2 0x22B9 PUSH2 0x2295 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22D7 JUMPI PUSH2 0x22D6 PUSH2 0x229A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x22F3 JUMPI PUSH2 0x22F2 PUSH2 0x229F JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2317 JUMPI PUSH2 0x2316 PUSH2 0x1FC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2325 DUP10 DUP3 DUP11 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x2336 DUP10 DUP3 DUP11 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2357 JUMPI PUSH2 0x2356 PUSH2 0x1FCD JUMP JUMPDEST JUMPDEST PUSH2 0x2363 DUP10 DUP3 DUP11 ADD PUSH2 0x22A4 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x60 PUSH2 0x2376 DUP10 DUP3 DUP11 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2387 DUP10 DUP3 DUP11 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH2 0x239D DUP2 PUSH2 0x2157 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2394 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23D4 JUMPI PUSH2 0x23D3 PUSH2 0x1FC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23E2 DUP5 DUP3 DUP6 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2402 JUMPI PUSH2 0x2401 PUSH2 0x1FC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2410 DUP6 DUP3 DUP7 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2421 DUP6 DUP3 DUP7 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x244A JUMPI PUSH2 0x2449 PUSH2 0x1FC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2458 DUP11 DUP3 DUP12 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2469 DUP11 DUP3 DUP12 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x247A DUP11 DUP3 DUP12 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x248B DUP11 DUP3 DUP12 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x249C DUP11 DUP3 DUP12 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x24AD DUP11 DUP3 DUP12 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x24BE DUP11 DUP3 DUP12 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24E2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x205B JUMP JUMPDEST PUSH2 0x24EF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x205B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2517 JUMPI PUSH2 0x2516 PUSH2 0x1FC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2525 DUP12 DUP3 DUP13 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x2536 DUP12 DUP3 DUP13 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x2547 DUP12 DUP3 DUP13 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x2558 DUP12 DUP3 DUP13 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x2569 DUP12 DUP3 DUP13 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x257A DUP12 DUP3 DUP13 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x258B DUP12 DUP3 DUP13 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x259C DUP12 DUP3 DUP13 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25C1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x205B JUMP JUMPDEST PUSH2 0x25CE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x205B JUMP JUMPDEST PUSH2 0x25DB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x205B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5A65726F20696E70757400000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2619 PUSH1 0xA DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2624 DUP3 PUSH2 0x25E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2648 DUP2 PUSH2 0x260C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456D707479207265736572766573000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2685 PUSH1 0xE DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2690 DUP3 PUSH2 0x264F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26B4 DUP2 PUSH2 0x2678 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x26F5 DUP3 PUSH2 0x1FD2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2700 DUP4 PUSH2 0x1FD2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2718 JUMPI PUSH2 0x2717 PUSH2 0x26BB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2729 DUP3 PUSH2 0x1FD2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2734 DUP4 PUSH2 0x1FD2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2742 DUP2 PUSH2 0x1FD2 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2759 JUMPI PUSH2 0x2758 PUSH2 0x26BB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x279A DUP3 PUSH2 0x1FD2 JUMP JUMPDEST SWAP2 POP PUSH2 0x27A5 DUP4 PUSH2 0x1FD2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x27B5 JUMPI PUSH2 0x27B4 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2807 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x281A JUMPI PUSH2 0x2819 PUSH2 0x27C0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4578706972656400000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2856 PUSH1 0x7 DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2861 DUP3 PUSH2 0x2820 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2885 DUP2 PUSH2 0x2849 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C7920322D746F6B656E2073776170730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28C2 PUSH1 0x12 DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x28CD DUP3 PUSH2 0x288C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28F1 DUP2 PUSH2 0x28B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x496E76616C696420737761702070617468000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x295D PUSH1 0x11 DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2968 DUP3 PUSH2 0x2927 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x298C DUP2 PUSH2 0x2950 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536C697070616765000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29C9 PUSH1 0x8 DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x29D4 DUP3 PUSH2 0x2993 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29F8 DUP2 PUSH2 0x29BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A0A DUP3 PUSH2 0x1FD2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A15 DUP4 PUSH2 0x1FD2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2A2D JUMPI PUSH2 0x2A2C PUSH2 0x26BB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20706169720000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A69 PUSH1 0x12 DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A74 DUP3 PUSH2 0x2A33 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A98 DUP2 PUSH2 0x2A5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207265736572766573000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD5 PUSH1 0xB DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AE0 DUP3 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B04 DUP2 PUSH2 0x2AC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768204C5000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B41 PUSH1 0xD DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B4C DUP3 PUSH2 0x2B0B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B70 DUP2 PUSH2 0x2B34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C6F772041000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BAD PUSH1 0x5 DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BB8 DUP3 PUSH2 0x2B77 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BDC DUP2 PUSH2 0x2BA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C6F772042000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C19 PUSH1 0x5 DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C24 DUP3 PUSH2 0x2BE3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C48 DUP2 PUSH2 0x2C0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E73206D757374206469666665720000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C85 PUSH1 0x12 DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C90 DUP3 PUSH2 0x2C4F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CB4 DUP2 PUSH2 0x2C78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6F206D756368204200000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF1 PUSH1 0xA DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CFC DUP3 PUSH2 0x2CBB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D20 DUP2 PUSH2 0x2CE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5A65726F206C6971756964697479000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D5D PUSH1 0xE DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D68 DUP3 PUSH2 0x2D27 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D8C DUP2 PUSH2 0x2D50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2DA8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2394 JUMP JUMPDEST PUSH2 0x2DB5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x205B JUMP JUMPDEST PUSH2 0x2DC2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x205B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2DDF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2394 JUMP JUMPDEST PUSH2 0x2DEC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2394 JUMP JUMPDEST PUSH2 0x2DF9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x205B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E16 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2394 JUMP JUMPDEST PUSH2 0x2E23 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x205B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 SWAP7 0x23 0xEA 0x2F SWAP6 0xBD MSTORE8 0xC2 0xB0 JUMPDEST SWAP1 0x29 0xED 0xB6 RETURN SWAP14 0xF8 PUSH26 0xB879D117E65FF93D3F45DA166364736F6C634300081C00330000 ","sourceMap":"404:7996:14:-:0;;;871:41;;;;;;;;;;1582:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;404:7996:14;;7:99:15;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;404:7996:14:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_632":{"entryPoint":5601,"id":632,"parameterSlots":3,"returnSlots":0},"@_approve_692":{"entryPoint":6942,"id":692,"parameterSlots":4,"returnSlots":0},"@_burn_614":{"entryPoint":6269,"id":614,"parameterSlots":2,"returnSlots":0},"@_callOptionalReturn_1267":{"entryPoint":7962,"id":1267,"parameterSlots":2,"returnSlots":0},"@_mint_581":{"entryPoint":6812,"id":581,"parameterSlots":2,"returnSlots":0},"@_msgSender_1321":{"entryPoint":5593,"id":1321,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_740":{"entryPoint":5619,"id":740,"parameterSlots":3,"returnSlots":0},"@_transfer_471":{"entryPoint":5768,"id":471,"parameterSlots":3,"returnSlots":0},"@_update_548":{"entryPoint":7413,"id":548,"parameterSlots":3,"returnSlots":0},"@addLiquidity_5081":{"entryPoint":4226,"id":5081,"parameterSlots":8,"returnSlots":3},"@allowance_368":{"entryPoint":4091,"id":368,"parameterSlots":2,"returnSlots":1},"@approve_392":{"entryPoint":1322,"id":392,"parameterSlots":2,"returnSlots":1},"@balanceOf_327":{"entryPoint":2487,"id":327,"parameterSlots":1,"returnSlots":1},"@decimals_305":{"entryPoint":1420,"id":305,"parameterSlots":0,"returnSlots":1},"@getAmountOut_5489":{"entryPoint":986,"id":5489,"parameterSlots":3,"returnSlots":1},"@getPrice_5448":{"entryPoint":2740,"id":5448,"parameterSlots":2,"returnSlots":1},"@name_287":{"entryPoint":1176,"id":287,"parameterSlots":0,"returnSlots":1},"@removeLiquidity_5230":{"entryPoint":3229,"id":5230,"parameterSlots":7,"returnSlots":2},"@reserveA_4837":{"entryPoint":4085,"id":4837,"parameterSlots":0,"returnSlots":0},"@reserveB_4840":{"entryPoint":1367,"id":4840,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_917":{"entryPoint":6012,"id":917,"parameterSlots":4,"returnSlots":0},"@safeTransfer_890":{"entryPoint":6142,"id":890,"parameterSlots":3,"returnSlots":0},"@sqrt_2568":{"entryPoint":6399,"id":2568,"parameterSlots":1,"returnSlots":1},"@swapExactTokensForTokens_5380":{"entryPoint":1429,"id":5380,"parameterSlots":6,"returnSlots":0},"@symbol_296":{"entryPoint":2559,"id":296,"parameterSlots":0,"returnSlots":1},"@toUint_4788":{"entryPoint":8124,"id":4788,"parameterSlots":1,"returnSlots":1},"@tokenAAddres_4831":{"entryPoint":2449,"id":4831,"parameterSlots":0,"returnSlots":0},"@tokenBAddres_4834":{"entryPoint":5555,"id":4834,"parameterSlots":0,"returnSlots":0},"@totalSupply_314":{"entryPoint":1357,"id":314,"parameterSlots":0,"returnSlots":1},"@transferFrom_424":{"entryPoint":1373,"id":424,"parameterSlots":3,"returnSlots":1},"@transfer_351":{"entryPoint":2705,"id":351,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":8576,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":8868,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":8179,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9150,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9195,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":8715,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256":{"entryPoint":9259,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256":{"entryPoint":9462,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8597,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256":{"entryPoint":8954,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint256t_uint256t_uint256":{"entryPoint":8200,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9108,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":8673,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":8412,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_26f0a2045ce22408683f49e1a133e0a75f723f441317abcc52f73491714cf56c_to_t_string_memory_ptr_fromStack":{"entryPoint":11492,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4a0f3a6fe4f2b4139e5c19fc0123996c3c606f417a7c4425be97431d9fd20ea0_to_t_string_memory_ptr_fromStack":{"entryPoint":10844,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_69902dfe75c7b10b3f4c7f15ab3035e10d37d1252e7958f42e3561a4fdcf702e_to_t_string_memory_ptr_fromStack":{"entryPoint":11168,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8dbe54bde5d74da7b886f685b9256abb22ad8758ccefb76323dd451857c1a8e0_to_t_string_memory_ptr_fromStack":{"entryPoint":10421,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_971080a6c04a1c3be1ce1e8552e0d8e01640a734e3641d0b551c42f40a93241a_to_t_string_memory_ptr_fromStack":{"entryPoint":9848,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9b4680a6e5dbafb04d954c8f10ca3a3eab0f67bdabfcc85b02337522a3853c7a_to_t_string_memory_ptr_fromStack":{"entryPoint":11276,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9c0f63e8972d14555ea708444bdb7eac702c84db57e478aac11f5f962855928a_to_t_string_memory_ptr_fromStack":{"entryPoint":10576,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a93d804a59195ce513d1e630391944a5504763fe44cb40791850992ca75b1c1d_to_t_string_memory_ptr_fromStack":{"entryPoint":11060,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_aec8de1944c8062853ad7bacb3b254b77bce1c5962bbfbeea01dd017ed24051b_to_t_string_memory_ptr_fromStack":{"entryPoint":11384,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b92817ebaa76de1bc1b1ef78878a5feea9c14a36ac8f9eae26db98a6f7f9807c_to_t_string_memory_ptr_fromStack":{"entryPoint":11600,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_dc186d373dd540cb9fb96bc11c9900e230b3d537c77cb1630f42b8b4fd4a54f4_to_t_string_memory_ptr_fromStack":{"entryPoint":9740,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13_to_t_string_memory_ptr_fromStack":{"entryPoint":10313,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766_to_t_string_memory_ptr_fromStack":{"entryPoint":10952,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114_to_t_string_memory_ptr_fromStack":{"entryPoint":10684,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8283,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":8811,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":9123,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":11722,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":11777,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11667,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":8688,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8469,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_26f0a2045ce22408683f49e1a133e0a75f723f441317abcc52f73491714cf56c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11527,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4a0f3a6fe4f2b4139e5c19fc0123996c3c606f417a7c4425be97431d9fd20ea0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10879,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_69902dfe75c7b10b3f4c7f15ab3035e10d37d1252e7958f42e3561a4fdcf702e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11203,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8dbe54bde5d74da7b886f685b9256abb22ad8758ccefb76323dd451857c1a8e0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10456,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_971080a6c04a1c3be1ce1e8552e0d8e01640a734e3641d0b551c42f40a93241a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9883,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9b4680a6e5dbafb04d954c8f10ca3a3eab0f67bdabfcc85b02337522a3853c7a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11311,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9c0f63e8972d14555ea708444bdb7eac702c84db57e478aac11f5f962855928a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10611,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a93d804a59195ce513d1e630391944a5504763fe44cb40791850992ca75b1c1d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11095,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_aec8de1944c8062853ad7bacb3b254b77bce1c5962bbfbeea01dd017ed24051b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11419,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b92817ebaa76de1bc1b1ef78878a5feea9c14a36ac8f9eae26db98a6f7f9807c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11635,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dc186d373dd540cb9fb96bc11c9900e230b3d537c77cb1630f42b8b4fd4a54f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9775,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10348,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10987,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10719,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8298,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9421,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9644,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":8826,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":8325,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":8336,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9962,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":10127,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":10014,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":10751,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":8535,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8661,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8503,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8146,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":8798,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":8353,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":10223,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":9915,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":10080,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":10176,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":10488,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":8858,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8853,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":8863,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":8141,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8136,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":8395,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_26f0a2045ce22408683f49e1a133e0a75f723f441317abcc52f73491714cf56c":{"entryPoint":11451,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4a0f3a6fe4f2b4139e5c19fc0123996c3c606f417a7c4425be97431d9fd20ea0":{"entryPoint":10803,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_69902dfe75c7b10b3f4c7f15ab3035e10d37d1252e7958f42e3561a4fdcf702e":{"entryPoint":11127,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8dbe54bde5d74da7b886f685b9256abb22ad8758ccefb76323dd451857c1a8e0":{"entryPoint":10380,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_971080a6c04a1c3be1ce1e8552e0d8e01640a734e3641d0b551c42f40a93241a":{"entryPoint":9807,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9b4680a6e5dbafb04d954c8f10ca3a3eab0f67bdabfcc85b02337522a3853c7a":{"entryPoint":11235,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9c0f63e8972d14555ea708444bdb7eac702c84db57e478aac11f5f962855928a":{"entryPoint":10535,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a93d804a59195ce513d1e630391944a5504763fe44cb40791850992ca75b1c1d":{"entryPoint":11019,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_aec8de1944c8062853ad7bacb3b254b77bce1c5962bbfbeea01dd017ed24051b":{"entryPoint":11343,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b92817ebaa76de1bc1b1ef78878a5feea9c14a36ac8f9eae26db98a6f7f9807c":{"entryPoint":11559,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_dc186d373dd540cb9fb96bc11c9900e230b3d537c77cb1630f42b8b4fd4a54f4":{"entryPoint":9699,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13":{"entryPoint":10272,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766":{"entryPoint":10911,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114":{"entryPoint":10643,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8553,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8156,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:28915:15","nodeType":"YulBlock","src":"0:28915:15","statements":[{"body":{"nativeSrc":"47:35:15","nodeType":"YulBlock","src":"47:35:15","statements":[{"nativeSrc":"57:19:15","nodeType":"YulAssignment","src":"57:19:15","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:15","nodeType":"YulLiteral","src":"73:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:15","nodeType":"YulIdentifier","src":"67:5:15"},"nativeSrc":"67:9:15","nodeType":"YulFunctionCall","src":"67:9:15"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:15","nodeType":"YulIdentifier","src":"57:6:15"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:15","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:15","nodeType":"YulTypedName","src":"40:6:15","type":""}],"src":"7:75:15"},{"body":{"nativeSrc":"177:28:15","nodeType":"YulBlock","src":"177:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:15","nodeType":"YulLiteral","src":"194:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:15","nodeType":"YulLiteral","src":"197:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:15","nodeType":"YulIdentifier","src":"187:6:15"},"nativeSrc":"187:12:15","nodeType":"YulFunctionCall","src":"187:12:15"},"nativeSrc":"187:12:15","nodeType":"YulExpressionStatement","src":"187:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:15","nodeType":"YulFunctionDefinition","src":"88:117:15"},{"body":{"nativeSrc":"300:28:15","nodeType":"YulBlock","src":"300:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:15","nodeType":"YulLiteral","src":"317:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:15","nodeType":"YulLiteral","src":"320:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:15","nodeType":"YulIdentifier","src":"310:6:15"},"nativeSrc":"310:12:15","nodeType":"YulFunctionCall","src":"310:12:15"},"nativeSrc":"310:12:15","nodeType":"YulExpressionStatement","src":"310:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:15","nodeType":"YulFunctionDefinition","src":"211:117:15"},{"body":{"nativeSrc":"379:32:15","nodeType":"YulBlock","src":"379:32:15","statements":[{"nativeSrc":"389:16:15","nodeType":"YulAssignment","src":"389:16:15","value":{"name":"value","nativeSrc":"400:5:15","nodeType":"YulIdentifier","src":"400:5:15"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:15","nodeType":"YulIdentifier","src":"389:7:15"}]}]},"name":"cleanup_t_uint256","nativeSrc":"334:77:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:15","nodeType":"YulTypedName","src":"361:5:15","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:15","nodeType":"YulTypedName","src":"371:7:15","type":""}],"src":"334:77:15"},{"body":{"nativeSrc":"460:79:15","nodeType":"YulBlock","src":"460:79:15","statements":[{"body":{"nativeSrc":"517:16:15","nodeType":"YulBlock","src":"517:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"526:1:15","nodeType":"YulLiteral","src":"526:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"529:1:15","nodeType":"YulLiteral","src":"529:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"519:6:15","nodeType":"YulIdentifier","src":"519:6:15"},"nativeSrc":"519:12:15","nodeType":"YulFunctionCall","src":"519:12:15"},"nativeSrc":"519:12:15","nodeType":"YulExpressionStatement","src":"519:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"483:5:15","nodeType":"YulIdentifier","src":"483:5:15"},{"arguments":[{"name":"value","nativeSrc":"508:5:15","nodeType":"YulIdentifier","src":"508:5:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"490:17:15","nodeType":"YulIdentifier","src":"490:17:15"},"nativeSrc":"490:24:15","nodeType":"YulFunctionCall","src":"490:24:15"}],"functionName":{"name":"eq","nativeSrc":"480:2:15","nodeType":"YulIdentifier","src":"480:2:15"},"nativeSrc":"480:35:15","nodeType":"YulFunctionCall","src":"480:35:15"}],"functionName":{"name":"iszero","nativeSrc":"473:6:15","nodeType":"YulIdentifier","src":"473:6:15"},"nativeSrc":"473:43:15","nodeType":"YulFunctionCall","src":"473:43:15"},"nativeSrc":"470:63:15","nodeType":"YulIf","src":"470:63:15"}]},"name":"validator_revert_t_uint256","nativeSrc":"417:122:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"453:5:15","nodeType":"YulTypedName","src":"453:5:15","type":""}],"src":"417:122:15"},{"body":{"nativeSrc":"597:87:15","nodeType":"YulBlock","src":"597:87:15","statements":[{"nativeSrc":"607:29:15","nodeType":"YulAssignment","src":"607:29:15","value":{"arguments":[{"name":"offset","nativeSrc":"629:6:15","nodeType":"YulIdentifier","src":"629:6:15"}],"functionName":{"name":"calldataload","nativeSrc":"616:12:15","nodeType":"YulIdentifier","src":"616:12:15"},"nativeSrc":"616:20:15","nodeType":"YulFunctionCall","src":"616:20:15"},"variableNames":[{"name":"value","nativeSrc":"607:5:15","nodeType":"YulIdentifier","src":"607:5:15"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"672:5:15","nodeType":"YulIdentifier","src":"672:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"645:26:15","nodeType":"YulIdentifier","src":"645:26:15"},"nativeSrc":"645:33:15","nodeType":"YulFunctionCall","src":"645:33:15"},"nativeSrc":"645:33:15","nodeType":"YulExpressionStatement","src":"645:33:15"}]},"name":"abi_decode_t_uint256","nativeSrc":"545:139:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"575:6:15","nodeType":"YulTypedName","src":"575:6:15","type":""},{"name":"end","nativeSrc":"583:3:15","nodeType":"YulTypedName","src":"583:3:15","type":""}],"returnVariables":[{"name":"value","nativeSrc":"591:5:15","nodeType":"YulTypedName","src":"591:5:15","type":""}],"src":"545:139:15"},{"body":{"nativeSrc":"790:519:15","nodeType":"YulBlock","src":"790:519:15","statements":[{"body":{"nativeSrc":"836:83:15","nodeType":"YulBlock","src":"836:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"838:77:15","nodeType":"YulIdentifier","src":"838:77:15"},"nativeSrc":"838:79:15","nodeType":"YulFunctionCall","src":"838:79:15"},"nativeSrc":"838:79:15","nodeType":"YulExpressionStatement","src":"838:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"811:7:15","nodeType":"YulIdentifier","src":"811:7:15"},{"name":"headStart","nativeSrc":"820:9:15","nodeType":"YulIdentifier","src":"820:9:15"}],"functionName":{"name":"sub","nativeSrc":"807:3:15","nodeType":"YulIdentifier","src":"807:3:15"},"nativeSrc":"807:23:15","nodeType":"YulFunctionCall","src":"807:23:15"},{"kind":"number","nativeSrc":"832:2:15","nodeType":"YulLiteral","src":"832:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"803:3:15","nodeType":"YulIdentifier","src":"803:3:15"},"nativeSrc":"803:32:15","nodeType":"YulFunctionCall","src":"803:32:15"},"nativeSrc":"800:119:15","nodeType":"YulIf","src":"800:119:15"},{"nativeSrc":"929:117:15","nodeType":"YulBlock","src":"929:117:15","statements":[{"nativeSrc":"944:15:15","nodeType":"YulVariableDeclaration","src":"944:15:15","value":{"kind":"number","nativeSrc":"958:1:15","nodeType":"YulLiteral","src":"958:1:15","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"948:6:15","nodeType":"YulTypedName","src":"948:6:15","type":""}]},{"nativeSrc":"973:63:15","nodeType":"YulAssignment","src":"973:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1008:9:15","nodeType":"YulIdentifier","src":"1008:9:15"},{"name":"offset","nativeSrc":"1019:6:15","nodeType":"YulIdentifier","src":"1019:6:15"}],"functionName":{"name":"add","nativeSrc":"1004:3:15","nodeType":"YulIdentifier","src":"1004:3:15"},"nativeSrc":"1004:22:15","nodeType":"YulFunctionCall","src":"1004:22:15"},{"name":"dataEnd","nativeSrc":"1028:7:15","nodeType":"YulIdentifier","src":"1028:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"983:20:15","nodeType":"YulIdentifier","src":"983:20:15"},"nativeSrc":"983:53:15","nodeType":"YulFunctionCall","src":"983:53:15"},"variableNames":[{"name":"value0","nativeSrc":"973:6:15","nodeType":"YulIdentifier","src":"973:6:15"}]}]},{"nativeSrc":"1056:118:15","nodeType":"YulBlock","src":"1056:118:15","statements":[{"nativeSrc":"1071:16:15","nodeType":"YulVariableDeclaration","src":"1071:16:15","value":{"kind":"number","nativeSrc":"1085:2:15","nodeType":"YulLiteral","src":"1085:2:15","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1075:6:15","nodeType":"YulTypedName","src":"1075:6:15","type":""}]},{"nativeSrc":"1101:63:15","nodeType":"YulAssignment","src":"1101:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1136:9:15","nodeType":"YulIdentifier","src":"1136:9:15"},{"name":"offset","nativeSrc":"1147:6:15","nodeType":"YulIdentifier","src":"1147:6:15"}],"functionName":{"name":"add","nativeSrc":"1132:3:15","nodeType":"YulIdentifier","src":"1132:3:15"},"nativeSrc":"1132:22:15","nodeType":"YulFunctionCall","src":"1132:22:15"},{"name":"dataEnd","nativeSrc":"1156:7:15","nodeType":"YulIdentifier","src":"1156:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"1111:20:15","nodeType":"YulIdentifier","src":"1111:20:15"},"nativeSrc":"1111:53:15","nodeType":"YulFunctionCall","src":"1111:53:15"},"variableNames":[{"name":"value1","nativeSrc":"1101:6:15","nodeType":"YulIdentifier","src":"1101:6:15"}]}]},{"nativeSrc":"1184:118:15","nodeType":"YulBlock","src":"1184:118:15","statements":[{"nativeSrc":"1199:16:15","nodeType":"YulVariableDeclaration","src":"1199:16:15","value":{"kind":"number","nativeSrc":"1213:2:15","nodeType":"YulLiteral","src":"1213:2:15","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"1203:6:15","nodeType":"YulTypedName","src":"1203:6:15","type":""}]},{"nativeSrc":"1229:63:15","nodeType":"YulAssignment","src":"1229:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1264:9:15","nodeType":"YulIdentifier","src":"1264:9:15"},{"name":"offset","nativeSrc":"1275:6:15","nodeType":"YulIdentifier","src":"1275:6:15"}],"functionName":{"name":"add","nativeSrc":"1260:3:15","nodeType":"YulIdentifier","src":"1260:3:15"},"nativeSrc":"1260:22:15","nodeType":"YulFunctionCall","src":"1260:22:15"},{"name":"dataEnd","nativeSrc":"1284:7:15","nodeType":"YulIdentifier","src":"1284:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"1239:20:15","nodeType":"YulIdentifier","src":"1239:20:15"},"nativeSrc":"1239:53:15","nodeType":"YulFunctionCall","src":"1239:53:15"},"variableNames":[{"name":"value2","nativeSrc":"1229:6:15","nodeType":"YulIdentifier","src":"1229:6:15"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256","nativeSrc":"690:619:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"744:9:15","nodeType":"YulTypedName","src":"744:9:15","type":""},{"name":"dataEnd","nativeSrc":"755:7:15","nodeType":"YulTypedName","src":"755:7:15","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"767:6:15","nodeType":"YulTypedName","src":"767:6:15","type":""},{"name":"value1","nativeSrc":"775:6:15","nodeType":"YulTypedName","src":"775:6:15","type":""},{"name":"value2","nativeSrc":"783:6:15","nodeType":"YulTypedName","src":"783:6:15","type":""}],"src":"690:619:15"},{"body":{"nativeSrc":"1380:53:15","nodeType":"YulBlock","src":"1380:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1397:3:15","nodeType":"YulIdentifier","src":"1397:3:15"},{"arguments":[{"name":"value","nativeSrc":"1420:5:15","nodeType":"YulIdentifier","src":"1420:5:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1402:17:15","nodeType":"YulIdentifier","src":"1402:17:15"},"nativeSrc":"1402:24:15","nodeType":"YulFunctionCall","src":"1402:24:15"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:15","nodeType":"YulIdentifier","src":"1390:6:15"},"nativeSrc":"1390:37:15","nodeType":"YulFunctionCall","src":"1390:37:15"},"nativeSrc":"1390:37:15","nodeType":"YulExpressionStatement","src":"1390:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1315:118:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1368:5:15","nodeType":"YulTypedName","src":"1368:5:15","type":""},{"name":"pos","nativeSrc":"1375:3:15","nodeType":"YulTypedName","src":"1375:3:15","type":""}],"src":"1315:118:15"},{"body":{"nativeSrc":"1537:124:15","nodeType":"YulBlock","src":"1537:124:15","statements":[{"nativeSrc":"1547:26:15","nodeType":"YulAssignment","src":"1547:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"1559:9:15","nodeType":"YulIdentifier","src":"1559:9:15"},{"kind":"number","nativeSrc":"1570:2:15","nodeType":"YulLiteral","src":"1570:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1555:3:15","nodeType":"YulIdentifier","src":"1555:3:15"},"nativeSrc":"1555:18:15","nodeType":"YulFunctionCall","src":"1555:18:15"},"variableNames":[{"name":"tail","nativeSrc":"1547:4:15","nodeType":"YulIdentifier","src":"1547:4:15"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1627:6:15","nodeType":"YulIdentifier","src":"1627:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"1640:9:15","nodeType":"YulIdentifier","src":"1640:9:15"},{"kind":"number","nativeSrc":"1651:1:15","nodeType":"YulLiteral","src":"1651:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1636:3:15","nodeType":"YulIdentifier","src":"1636:3:15"},"nativeSrc":"1636:17:15","nodeType":"YulFunctionCall","src":"1636:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1583:43:15","nodeType":"YulIdentifier","src":"1583:43:15"},"nativeSrc":"1583:71:15","nodeType":"YulFunctionCall","src":"1583:71:15"},"nativeSrc":"1583:71:15","nodeType":"YulExpressionStatement","src":"1583:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1439:222:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1509:9:15","nodeType":"YulTypedName","src":"1509:9:15","type":""},{"name":"value0","nativeSrc":"1521:6:15","nodeType":"YulTypedName","src":"1521:6:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1532:4:15","nodeType":"YulTypedName","src":"1532:4:15","type":""}],"src":"1439:222:15"},{"body":{"nativeSrc":"1726:40:15","nodeType":"YulBlock","src":"1726:40:15","statements":[{"nativeSrc":"1737:22:15","nodeType":"YulAssignment","src":"1737:22:15","value":{"arguments":[{"name":"value","nativeSrc":"1753:5:15","nodeType":"YulIdentifier","src":"1753:5:15"}],"functionName":{"name":"mload","nativeSrc":"1747:5:15","nodeType":"YulIdentifier","src":"1747:5:15"},"nativeSrc":"1747:12:15","nodeType":"YulFunctionCall","src":"1747:12:15"},"variableNames":[{"name":"length","nativeSrc":"1737:6:15","nodeType":"YulIdentifier","src":"1737:6:15"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1667:99:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1709:5:15","nodeType":"YulTypedName","src":"1709:5:15","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1719:6:15","nodeType":"YulTypedName","src":"1719:6:15","type":""}],"src":"1667:99:15"},{"body":{"nativeSrc":"1868:73:15","nodeType":"YulBlock","src":"1868:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1885:3:15","nodeType":"YulIdentifier","src":"1885:3:15"},{"name":"length","nativeSrc":"1890:6:15","nodeType":"YulIdentifier","src":"1890:6:15"}],"functionName":{"name":"mstore","nativeSrc":"1878:6:15","nodeType":"YulIdentifier","src":"1878:6:15"},"nativeSrc":"1878:19:15","nodeType":"YulFunctionCall","src":"1878:19:15"},"nativeSrc":"1878:19:15","nodeType":"YulExpressionStatement","src":"1878:19:15"},{"nativeSrc":"1906:29:15","nodeType":"YulAssignment","src":"1906:29:15","value":{"arguments":[{"name":"pos","nativeSrc":"1925:3:15","nodeType":"YulIdentifier","src":"1925:3:15"},{"kind":"number","nativeSrc":"1930:4:15","nodeType":"YulLiteral","src":"1930:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1921:3:15","nodeType":"YulIdentifier","src":"1921:3:15"},"nativeSrc":"1921:14:15","nodeType":"YulFunctionCall","src":"1921:14:15"},"variableNames":[{"name":"updated_pos","nativeSrc":"1906:11:15","nodeType":"YulIdentifier","src":"1906:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1772:169:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1840:3:15","nodeType":"YulTypedName","src":"1840:3:15","type":""},{"name":"length","nativeSrc":"1845:6:15","nodeType":"YulTypedName","src":"1845:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1856:11:15","nodeType":"YulTypedName","src":"1856:11:15","type":""}],"src":"1772:169:15"},{"body":{"nativeSrc":"2009:186:15","nodeType":"YulBlock","src":"2009:186:15","statements":[{"nativeSrc":"2020:10:15","nodeType":"YulVariableDeclaration","src":"2020:10:15","value":{"kind":"number","nativeSrc":"2029:1:15","nodeType":"YulLiteral","src":"2029:1:15","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2024:1:15","nodeType":"YulTypedName","src":"2024:1:15","type":""}]},{"body":{"nativeSrc":"2089:63:15","nodeType":"YulBlock","src":"2089:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2114:3:15","nodeType":"YulIdentifier","src":"2114:3:15"},{"name":"i","nativeSrc":"2119:1:15","nodeType":"YulIdentifier","src":"2119:1:15"}],"functionName":{"name":"add","nativeSrc":"2110:3:15","nodeType":"YulIdentifier","src":"2110:3:15"},"nativeSrc":"2110:11:15","nodeType":"YulFunctionCall","src":"2110:11:15"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2133:3:15","nodeType":"YulIdentifier","src":"2133:3:15"},{"name":"i","nativeSrc":"2138:1:15","nodeType":"YulIdentifier","src":"2138:1:15"}],"functionName":{"name":"add","nativeSrc":"2129:3:15","nodeType":"YulIdentifier","src":"2129:3:15"},"nativeSrc":"2129:11:15","nodeType":"YulFunctionCall","src":"2129:11:15"}],"functionName":{"name":"mload","nativeSrc":"2123:5:15","nodeType":"YulIdentifier","src":"2123:5:15"},"nativeSrc":"2123:18:15","nodeType":"YulFunctionCall","src":"2123:18:15"}],"functionName":{"name":"mstore","nativeSrc":"2103:6:15","nodeType":"YulIdentifier","src":"2103:6:15"},"nativeSrc":"2103:39:15","nodeType":"YulFunctionCall","src":"2103:39:15"},"nativeSrc":"2103:39:15","nodeType":"YulExpressionStatement","src":"2103:39:15"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2050:1:15","nodeType":"YulIdentifier","src":"2050:1:15"},{"name":"length","nativeSrc":"2053:6:15","nodeType":"YulIdentifier","src":"2053:6:15"}],"functionName":{"name":"lt","nativeSrc":"2047:2:15","nodeType":"YulIdentifier","src":"2047:2:15"},"nativeSrc":"2047:13:15","nodeType":"YulFunctionCall","src":"2047:13:15"},"nativeSrc":"2039:113:15","nodeType":"YulForLoop","post":{"nativeSrc":"2061:19:15","nodeType":"YulBlock","src":"2061:19:15","statements":[{"nativeSrc":"2063:15:15","nodeType":"YulAssignment","src":"2063:15:15","value":{"arguments":[{"name":"i","nativeSrc":"2072:1:15","nodeType":"YulIdentifier","src":"2072:1:15"},{"kind":"number","nativeSrc":"2075:2:15","nodeType":"YulLiteral","src":"2075:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2068:3:15","nodeType":"YulIdentifier","src":"2068:3:15"},"nativeSrc":"2068:10:15","nodeType":"YulFunctionCall","src":"2068:10:15"},"variableNames":[{"name":"i","nativeSrc":"2063:1:15","nodeType":"YulIdentifier","src":"2063:1:15"}]}]},"pre":{"nativeSrc":"2043:3:15","nodeType":"YulBlock","src":"2043:3:15","statements":[]},"src":"2039:113:15"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2172:3:15","nodeType":"YulIdentifier","src":"2172:3:15"},{"name":"length","nativeSrc":"2177:6:15","nodeType":"YulIdentifier","src":"2177:6:15"}],"functionName":{"name":"add","nativeSrc":"2168:3:15","nodeType":"YulIdentifier","src":"2168:3:15"},"nativeSrc":"2168:16:15","nodeType":"YulFunctionCall","src":"2168:16:15"},{"kind":"number","nativeSrc":"2186:1:15","nodeType":"YulLiteral","src":"2186:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2161:6:15","nodeType":"YulIdentifier","src":"2161:6:15"},"nativeSrc":"2161:27:15","nodeType":"YulFunctionCall","src":"2161:27:15"},"nativeSrc":"2161:27:15","nodeType":"YulExpressionStatement","src":"2161:27:15"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1947:248:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1991:3:15","nodeType":"YulTypedName","src":"1991:3:15","type":""},{"name":"dst","nativeSrc":"1996:3:15","nodeType":"YulTypedName","src":"1996:3:15","type":""},{"name":"length","nativeSrc":"2001:6:15","nodeType":"YulTypedName","src":"2001:6:15","type":""}],"src":"1947:248:15"},{"body":{"nativeSrc":"2249:54:15","nodeType":"YulBlock","src":"2249:54:15","statements":[{"nativeSrc":"2259:38:15","nodeType":"YulAssignment","src":"2259:38:15","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2277:5:15","nodeType":"YulIdentifier","src":"2277:5:15"},{"kind":"number","nativeSrc":"2284:2:15","nodeType":"YulLiteral","src":"2284:2:15","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2273:3:15","nodeType":"YulIdentifier","src":"2273:3:15"},"nativeSrc":"2273:14:15","nodeType":"YulFunctionCall","src":"2273:14:15"},{"arguments":[{"kind":"number","nativeSrc":"2293:2:15","nodeType":"YulLiteral","src":"2293:2:15","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2289:3:15","nodeType":"YulIdentifier","src":"2289:3:15"},"nativeSrc":"2289:7:15","nodeType":"YulFunctionCall","src":"2289:7:15"}],"functionName":{"name":"and","nativeSrc":"2269:3:15","nodeType":"YulIdentifier","src":"2269:3:15"},"nativeSrc":"2269:28:15","nodeType":"YulFunctionCall","src":"2269:28:15"},"variableNames":[{"name":"result","nativeSrc":"2259:6:15","nodeType":"YulIdentifier","src":"2259:6:15"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2201:102:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2232:5:15","nodeType":"YulTypedName","src":"2232:5:15","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2242:6:15","nodeType":"YulTypedName","src":"2242:6:15","type":""}],"src":"2201:102:15"},{"body":{"nativeSrc":"2401:285:15","nodeType":"YulBlock","src":"2401:285:15","statements":[{"nativeSrc":"2411:53:15","nodeType":"YulVariableDeclaration","src":"2411:53:15","value":{"arguments":[{"name":"value","nativeSrc":"2458:5:15","nodeType":"YulIdentifier","src":"2458:5:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2425:32:15","nodeType":"YulIdentifier","src":"2425:32:15"},"nativeSrc":"2425:39:15","nodeType":"YulFunctionCall","src":"2425:39:15"},"variables":[{"name":"length","nativeSrc":"2415:6:15","nodeType":"YulTypedName","src":"2415:6:15","type":""}]},{"nativeSrc":"2473:78:15","nodeType":"YulAssignment","src":"2473:78:15","value":{"arguments":[{"name":"pos","nativeSrc":"2539:3:15","nodeType":"YulIdentifier","src":"2539:3:15"},{"name":"length","nativeSrc":"2544:6:15","nodeType":"YulIdentifier","src":"2544:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2480:58:15","nodeType":"YulIdentifier","src":"2480:58:15"},"nativeSrc":"2480:71:15","nodeType":"YulFunctionCall","src":"2480:71:15"},"variableNames":[{"name":"pos","nativeSrc":"2473:3:15","nodeType":"YulIdentifier","src":"2473:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2599:5:15","nodeType":"YulIdentifier","src":"2599:5:15"},{"kind":"number","nativeSrc":"2606:4:15","nodeType":"YulLiteral","src":"2606:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2595:3:15","nodeType":"YulIdentifier","src":"2595:3:15"},"nativeSrc":"2595:16:15","nodeType":"YulFunctionCall","src":"2595:16:15"},{"name":"pos","nativeSrc":"2613:3:15","nodeType":"YulIdentifier","src":"2613:3:15"},{"name":"length","nativeSrc":"2618:6:15","nodeType":"YulIdentifier","src":"2618:6:15"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2560:34:15","nodeType":"YulIdentifier","src":"2560:34:15"},"nativeSrc":"2560:65:15","nodeType":"YulFunctionCall","src":"2560:65:15"},"nativeSrc":"2560:65:15","nodeType":"YulExpressionStatement","src":"2560:65:15"},{"nativeSrc":"2634:46:15","nodeType":"YulAssignment","src":"2634:46:15","value":{"arguments":[{"name":"pos","nativeSrc":"2645:3:15","nodeType":"YulIdentifier","src":"2645:3:15"},{"arguments":[{"name":"length","nativeSrc":"2672:6:15","nodeType":"YulIdentifier","src":"2672:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2650:21:15","nodeType":"YulIdentifier","src":"2650:21:15"},"nativeSrc":"2650:29:15","nodeType":"YulFunctionCall","src":"2650:29:15"}],"functionName":{"name":"add","nativeSrc":"2641:3:15","nodeType":"YulIdentifier","src":"2641:3:15"},"nativeSrc":"2641:39:15","nodeType":"YulFunctionCall","src":"2641:39:15"},"variableNames":[{"name":"end","nativeSrc":"2634:3:15","nodeType":"YulIdentifier","src":"2634:3:15"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2309:377:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2382:5:15","nodeType":"YulTypedName","src":"2382:5:15","type":""},{"name":"pos","nativeSrc":"2389:3:15","nodeType":"YulTypedName","src":"2389:3:15","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2397:3:15","nodeType":"YulTypedName","src":"2397:3:15","type":""}],"src":"2309:377:15"},{"body":{"nativeSrc":"2810:195:15","nodeType":"YulBlock","src":"2810:195:15","statements":[{"nativeSrc":"2820:26:15","nodeType":"YulAssignment","src":"2820:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"2832:9:15","nodeType":"YulIdentifier","src":"2832:9:15"},{"kind":"number","nativeSrc":"2843:2:15","nodeType":"YulLiteral","src":"2843:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2828:3:15","nodeType":"YulIdentifier","src":"2828:3:15"},"nativeSrc":"2828:18:15","nodeType":"YulFunctionCall","src":"2828:18:15"},"variableNames":[{"name":"tail","nativeSrc":"2820:4:15","nodeType":"YulIdentifier","src":"2820:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2867:9:15","nodeType":"YulIdentifier","src":"2867:9:15"},{"kind":"number","nativeSrc":"2878:1:15","nodeType":"YulLiteral","src":"2878:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2863:3:15","nodeType":"YulIdentifier","src":"2863:3:15"},"nativeSrc":"2863:17:15","nodeType":"YulFunctionCall","src":"2863:17:15"},{"arguments":[{"name":"tail","nativeSrc":"2886:4:15","nodeType":"YulIdentifier","src":"2886:4:15"},{"name":"headStart","nativeSrc":"2892:9:15","nodeType":"YulIdentifier","src":"2892:9:15"}],"functionName":{"name":"sub","nativeSrc":"2882:3:15","nodeType":"YulIdentifier","src":"2882:3:15"},"nativeSrc":"2882:20:15","nodeType":"YulFunctionCall","src":"2882:20:15"}],"functionName":{"name":"mstore","nativeSrc":"2856:6:15","nodeType":"YulIdentifier","src":"2856:6:15"},"nativeSrc":"2856:47:15","nodeType":"YulFunctionCall","src":"2856:47:15"},"nativeSrc":"2856:47:15","nodeType":"YulExpressionStatement","src":"2856:47:15"},{"nativeSrc":"2912:86:15","nodeType":"YulAssignment","src":"2912:86:15","value":{"arguments":[{"name":"value0","nativeSrc":"2984:6:15","nodeType":"YulIdentifier","src":"2984:6:15"},{"name":"tail","nativeSrc":"2993:4:15","nodeType":"YulIdentifier","src":"2993:4:15"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2920:63:15","nodeType":"YulIdentifier","src":"2920:63:15"},"nativeSrc":"2920:78:15","nodeType":"YulFunctionCall","src":"2920:78:15"},"variableNames":[{"name":"tail","nativeSrc":"2912:4:15","nodeType":"YulIdentifier","src":"2912:4:15"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2692:313:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2782:9:15","nodeType":"YulTypedName","src":"2782:9:15","type":""},{"name":"value0","nativeSrc":"2794:6:15","nodeType":"YulTypedName","src":"2794:6:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2805:4:15","nodeType":"YulTypedName","src":"2805:4:15","type":""}],"src":"2692:313:15"},{"body":{"nativeSrc":"3056:81:15","nodeType":"YulBlock","src":"3056:81:15","statements":[{"nativeSrc":"3066:65:15","nodeType":"YulAssignment","src":"3066:65:15","value":{"arguments":[{"name":"value","nativeSrc":"3081:5:15","nodeType":"YulIdentifier","src":"3081:5:15"},{"kind":"number","nativeSrc":"3088:42:15","nodeType":"YulLiteral","src":"3088:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3077:3:15","nodeType":"YulIdentifier","src":"3077:3:15"},"nativeSrc":"3077:54:15","nodeType":"YulFunctionCall","src":"3077:54:15"},"variableNames":[{"name":"cleaned","nativeSrc":"3066:7:15","nodeType":"YulIdentifier","src":"3066:7:15"}]}]},"name":"cleanup_t_uint160","nativeSrc":"3011:126:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3038:5:15","nodeType":"YulTypedName","src":"3038:5:15","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3048:7:15","nodeType":"YulTypedName","src":"3048:7:15","type":""}],"src":"3011:126:15"},{"body":{"nativeSrc":"3188:51:15","nodeType":"YulBlock","src":"3188:51:15","statements":[{"nativeSrc":"3198:35:15","nodeType":"YulAssignment","src":"3198:35:15","value":{"arguments":[{"name":"value","nativeSrc":"3227:5:15","nodeType":"YulIdentifier","src":"3227:5:15"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3209:17:15","nodeType":"YulIdentifier","src":"3209:17:15"},"nativeSrc":"3209:24:15","nodeType":"YulFunctionCall","src":"3209:24:15"},"variableNames":[{"name":"cleaned","nativeSrc":"3198:7:15","nodeType":"YulIdentifier","src":"3198:7:15"}]}]},"name":"cleanup_t_address","nativeSrc":"3143:96:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3170:5:15","nodeType":"YulTypedName","src":"3170:5:15","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3180:7:15","nodeType":"YulTypedName","src":"3180:7:15","type":""}],"src":"3143:96:15"},{"body":{"nativeSrc":"3288:79:15","nodeType":"YulBlock","src":"3288:79:15","statements":[{"body":{"nativeSrc":"3345:16:15","nodeType":"YulBlock","src":"3345:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3354:1:15","nodeType":"YulLiteral","src":"3354:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"3357:1:15","nodeType":"YulLiteral","src":"3357:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3347:6:15","nodeType":"YulIdentifier","src":"3347:6:15"},"nativeSrc":"3347:12:15","nodeType":"YulFunctionCall","src":"3347:12:15"},"nativeSrc":"3347:12:15","nodeType":"YulExpressionStatement","src":"3347:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3311:5:15","nodeType":"YulIdentifier","src":"3311:5:15"},{"arguments":[{"name":"value","nativeSrc":"3336:5:15","nodeType":"YulIdentifier","src":"3336:5:15"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3318:17:15","nodeType":"YulIdentifier","src":"3318:17:15"},"nativeSrc":"3318:24:15","nodeType":"YulFunctionCall","src":"3318:24:15"}],"functionName":{"name":"eq","nativeSrc":"3308:2:15","nodeType":"YulIdentifier","src":"3308:2:15"},"nativeSrc":"3308:35:15","nodeType":"YulFunctionCall","src":"3308:35:15"}],"functionName":{"name":"iszero","nativeSrc":"3301:6:15","nodeType":"YulIdentifier","src":"3301:6:15"},"nativeSrc":"3301:43:15","nodeType":"YulFunctionCall","src":"3301:43:15"},"nativeSrc":"3298:63:15","nodeType":"YulIf","src":"3298:63:15"}]},"name":"validator_revert_t_address","nativeSrc":"3245:122:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3281:5:15","nodeType":"YulTypedName","src":"3281:5:15","type":""}],"src":"3245:122:15"},{"body":{"nativeSrc":"3425:87:15","nodeType":"YulBlock","src":"3425:87:15","statements":[{"nativeSrc":"3435:29:15","nodeType":"YulAssignment","src":"3435:29:15","value":{"arguments":[{"name":"offset","nativeSrc":"3457:6:15","nodeType":"YulIdentifier","src":"3457:6:15"}],"functionName":{"name":"calldataload","nativeSrc":"3444:12:15","nodeType":"YulIdentifier","src":"3444:12:15"},"nativeSrc":"3444:20:15","nodeType":"YulFunctionCall","src":"3444:20:15"},"variableNames":[{"name":"value","nativeSrc":"3435:5:15","nodeType":"YulIdentifier","src":"3435:5:15"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3500:5:15","nodeType":"YulIdentifier","src":"3500:5:15"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"3473:26:15","nodeType":"YulIdentifier","src":"3473:26:15"},"nativeSrc":"3473:33:15","nodeType":"YulFunctionCall","src":"3473:33:15"},"nativeSrc":"3473:33:15","nodeType":"YulExpressionStatement","src":"3473:33:15"}]},"name":"abi_decode_t_address","nativeSrc":"3373:139:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3403:6:15","nodeType":"YulTypedName","src":"3403:6:15","type":""},{"name":"end","nativeSrc":"3411:3:15","nodeType":"YulTypedName","src":"3411:3:15","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3419:5:15","nodeType":"YulTypedName","src":"3419:5:15","type":""}],"src":"3373:139:15"},{"body":{"nativeSrc":"3601:391:15","nodeType":"YulBlock","src":"3601:391:15","statements":[{"body":{"nativeSrc":"3647:83:15","nodeType":"YulBlock","src":"3647:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3649:77:15","nodeType":"YulIdentifier","src":"3649:77:15"},"nativeSrc":"3649:79:15","nodeType":"YulFunctionCall","src":"3649:79:15"},"nativeSrc":"3649:79:15","nodeType":"YulExpressionStatement","src":"3649:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3622:7:15","nodeType":"YulIdentifier","src":"3622:7:15"},{"name":"headStart","nativeSrc":"3631:9:15","nodeType":"YulIdentifier","src":"3631:9:15"}],"functionName":{"name":"sub","nativeSrc":"3618:3:15","nodeType":"YulIdentifier","src":"3618:3:15"},"nativeSrc":"3618:23:15","nodeType":"YulFunctionCall","src":"3618:23:15"},{"kind":"number","nativeSrc":"3643:2:15","nodeType":"YulLiteral","src":"3643:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3614:3:15","nodeType":"YulIdentifier","src":"3614:3:15"},"nativeSrc":"3614:32:15","nodeType":"YulFunctionCall","src":"3614:32:15"},"nativeSrc":"3611:119:15","nodeType":"YulIf","src":"3611:119:15"},{"nativeSrc":"3740:117:15","nodeType":"YulBlock","src":"3740:117:15","statements":[{"nativeSrc":"3755:15:15","nodeType":"YulVariableDeclaration","src":"3755:15:15","value":{"kind":"number","nativeSrc":"3769:1:15","nodeType":"YulLiteral","src":"3769:1:15","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3759:6:15","nodeType":"YulTypedName","src":"3759:6:15","type":""}]},{"nativeSrc":"3784:63:15","nodeType":"YulAssignment","src":"3784:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3819:9:15","nodeType":"YulIdentifier","src":"3819:9:15"},{"name":"offset","nativeSrc":"3830:6:15","nodeType":"YulIdentifier","src":"3830:6:15"}],"functionName":{"name":"add","nativeSrc":"3815:3:15","nodeType":"YulIdentifier","src":"3815:3:15"},"nativeSrc":"3815:22:15","nodeType":"YulFunctionCall","src":"3815:22:15"},{"name":"dataEnd","nativeSrc":"3839:7:15","nodeType":"YulIdentifier","src":"3839:7:15"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3794:20:15","nodeType":"YulIdentifier","src":"3794:20:15"},"nativeSrc":"3794:53:15","nodeType":"YulFunctionCall","src":"3794:53:15"},"variableNames":[{"name":"value0","nativeSrc":"3784:6:15","nodeType":"YulIdentifier","src":"3784:6:15"}]}]},{"nativeSrc":"3867:118:15","nodeType":"YulBlock","src":"3867:118:15","statements":[{"nativeSrc":"3882:16:15","nodeType":"YulVariableDeclaration","src":"3882:16:15","value":{"kind":"number","nativeSrc":"3896:2:15","nodeType":"YulLiteral","src":"3896:2:15","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"3886:6:15","nodeType":"YulTypedName","src":"3886:6:15","type":""}]},{"nativeSrc":"3912:63:15","nodeType":"YulAssignment","src":"3912:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3947:9:15","nodeType":"YulIdentifier","src":"3947:9:15"},{"name":"offset","nativeSrc":"3958:6:15","nodeType":"YulIdentifier","src":"3958:6:15"}],"functionName":{"name":"add","nativeSrc":"3943:3:15","nodeType":"YulIdentifier","src":"3943:3:15"},"nativeSrc":"3943:22:15","nodeType":"YulFunctionCall","src":"3943:22:15"},{"name":"dataEnd","nativeSrc":"3967:7:15","nodeType":"YulIdentifier","src":"3967:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3922:20:15","nodeType":"YulIdentifier","src":"3922:20:15"},"nativeSrc":"3922:53:15","nodeType":"YulFunctionCall","src":"3922:53:15"},"variableNames":[{"name":"value1","nativeSrc":"3912:6:15","nodeType":"YulIdentifier","src":"3912:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"3518:474:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3563:9:15","nodeType":"YulTypedName","src":"3563:9:15","type":""},{"name":"dataEnd","nativeSrc":"3574:7:15","nodeType":"YulTypedName","src":"3574:7:15","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3586:6:15","nodeType":"YulTypedName","src":"3586:6:15","type":""},{"name":"value1","nativeSrc":"3594:6:15","nodeType":"YulTypedName","src":"3594:6:15","type":""}],"src":"3518:474:15"},{"body":{"nativeSrc":"4040:48:15","nodeType":"YulBlock","src":"4040:48:15","statements":[{"nativeSrc":"4050:32:15","nodeType":"YulAssignment","src":"4050:32:15","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4075:5:15","nodeType":"YulIdentifier","src":"4075:5:15"}],"functionName":{"name":"iszero","nativeSrc":"4068:6:15","nodeType":"YulIdentifier","src":"4068:6:15"},"nativeSrc":"4068:13:15","nodeType":"YulFunctionCall","src":"4068:13:15"}],"functionName":{"name":"iszero","nativeSrc":"4061:6:15","nodeType":"YulIdentifier","src":"4061:6:15"},"nativeSrc":"4061:21:15","nodeType":"YulFunctionCall","src":"4061:21:15"},"variableNames":[{"name":"cleaned","nativeSrc":"4050:7:15","nodeType":"YulIdentifier","src":"4050:7:15"}]}]},"name":"cleanup_t_bool","nativeSrc":"3998:90:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4022:5:15","nodeType":"YulTypedName","src":"4022:5:15","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4032:7:15","nodeType":"YulTypedName","src":"4032:7:15","type":""}],"src":"3998:90:15"},{"body":{"nativeSrc":"4153:50:15","nodeType":"YulBlock","src":"4153:50:15","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4170:3:15","nodeType":"YulIdentifier","src":"4170:3:15"},{"arguments":[{"name":"value","nativeSrc":"4190:5:15","nodeType":"YulIdentifier","src":"4190:5:15"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"4175:14:15","nodeType":"YulIdentifier","src":"4175:14:15"},"nativeSrc":"4175:21:15","nodeType":"YulFunctionCall","src":"4175:21:15"}],"functionName":{"name":"mstore","nativeSrc":"4163:6:15","nodeType":"YulIdentifier","src":"4163:6:15"},"nativeSrc":"4163:34:15","nodeType":"YulFunctionCall","src":"4163:34:15"},"nativeSrc":"4163:34:15","nodeType":"YulExpressionStatement","src":"4163:34:15"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"4094:109:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4141:5:15","nodeType":"YulTypedName","src":"4141:5:15","type":""},{"name":"pos","nativeSrc":"4148:3:15","nodeType":"YulTypedName","src":"4148:3:15","type":""}],"src":"4094:109:15"},{"body":{"nativeSrc":"4301:118:15","nodeType":"YulBlock","src":"4301:118:15","statements":[{"nativeSrc":"4311:26:15","nodeType":"YulAssignment","src":"4311:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"4323:9:15","nodeType":"YulIdentifier","src":"4323:9:15"},{"kind":"number","nativeSrc":"4334:2:15","nodeType":"YulLiteral","src":"4334:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4319:3:15","nodeType":"YulIdentifier","src":"4319:3:15"},"nativeSrc":"4319:18:15","nodeType":"YulFunctionCall","src":"4319:18:15"},"variableNames":[{"name":"tail","nativeSrc":"4311:4:15","nodeType":"YulIdentifier","src":"4311:4:15"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4385:6:15","nodeType":"YulIdentifier","src":"4385:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"4398:9:15","nodeType":"YulIdentifier","src":"4398:9:15"},{"kind":"number","nativeSrc":"4409:1:15","nodeType":"YulLiteral","src":"4409:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4394:3:15","nodeType":"YulIdentifier","src":"4394:3:15"},"nativeSrc":"4394:17:15","nodeType":"YulFunctionCall","src":"4394:17:15"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"4347:37:15","nodeType":"YulIdentifier","src":"4347:37:15"},"nativeSrc":"4347:65:15","nodeType":"YulFunctionCall","src":"4347:65:15"},"nativeSrc":"4347:65:15","nodeType":"YulExpressionStatement","src":"4347:65:15"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"4209:210:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4273:9:15","nodeType":"YulTypedName","src":"4273:9:15","type":""},{"name":"value0","nativeSrc":"4285:6:15","nodeType":"YulTypedName","src":"4285:6:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4296:4:15","nodeType":"YulTypedName","src":"4296:4:15","type":""}],"src":"4209:210:15"},{"body":{"nativeSrc":"4525:519:15","nodeType":"YulBlock","src":"4525:519:15","statements":[{"body":{"nativeSrc":"4571:83:15","nodeType":"YulBlock","src":"4571:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4573:77:15","nodeType":"YulIdentifier","src":"4573:77:15"},"nativeSrc":"4573:79:15","nodeType":"YulFunctionCall","src":"4573:79:15"},"nativeSrc":"4573:79:15","nodeType":"YulExpressionStatement","src":"4573:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4546:7:15","nodeType":"YulIdentifier","src":"4546:7:15"},{"name":"headStart","nativeSrc":"4555:9:15","nodeType":"YulIdentifier","src":"4555:9:15"}],"functionName":{"name":"sub","nativeSrc":"4542:3:15","nodeType":"YulIdentifier","src":"4542:3:15"},"nativeSrc":"4542:23:15","nodeType":"YulFunctionCall","src":"4542:23:15"},{"kind":"number","nativeSrc":"4567:2:15","nodeType":"YulLiteral","src":"4567:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"4538:3:15","nodeType":"YulIdentifier","src":"4538:3:15"},"nativeSrc":"4538:32:15","nodeType":"YulFunctionCall","src":"4538:32:15"},"nativeSrc":"4535:119:15","nodeType":"YulIf","src":"4535:119:15"},{"nativeSrc":"4664:117:15","nodeType":"YulBlock","src":"4664:117:15","statements":[{"nativeSrc":"4679:15:15","nodeType":"YulVariableDeclaration","src":"4679:15:15","value":{"kind":"number","nativeSrc":"4693:1:15","nodeType":"YulLiteral","src":"4693:1:15","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4683:6:15","nodeType":"YulTypedName","src":"4683:6:15","type":""}]},{"nativeSrc":"4708:63:15","nodeType":"YulAssignment","src":"4708:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4743:9:15","nodeType":"YulIdentifier","src":"4743:9:15"},{"name":"offset","nativeSrc":"4754:6:15","nodeType":"YulIdentifier","src":"4754:6:15"}],"functionName":{"name":"add","nativeSrc":"4739:3:15","nodeType":"YulIdentifier","src":"4739:3:15"},"nativeSrc":"4739:22:15","nodeType":"YulFunctionCall","src":"4739:22:15"},{"name":"dataEnd","nativeSrc":"4763:7:15","nodeType":"YulIdentifier","src":"4763:7:15"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4718:20:15","nodeType":"YulIdentifier","src":"4718:20:15"},"nativeSrc":"4718:53:15","nodeType":"YulFunctionCall","src":"4718:53:15"},"variableNames":[{"name":"value0","nativeSrc":"4708:6:15","nodeType":"YulIdentifier","src":"4708:6:15"}]}]},{"nativeSrc":"4791:118:15","nodeType":"YulBlock","src":"4791:118:15","statements":[{"nativeSrc":"4806:16:15","nodeType":"YulVariableDeclaration","src":"4806:16:15","value":{"kind":"number","nativeSrc":"4820:2:15","nodeType":"YulLiteral","src":"4820:2:15","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4810:6:15","nodeType":"YulTypedName","src":"4810:6:15","type":""}]},{"nativeSrc":"4836:63:15","nodeType":"YulAssignment","src":"4836:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4871:9:15","nodeType":"YulIdentifier","src":"4871:9:15"},{"name":"offset","nativeSrc":"4882:6:15","nodeType":"YulIdentifier","src":"4882:6:15"}],"functionName":{"name":"add","nativeSrc":"4867:3:15","nodeType":"YulIdentifier","src":"4867:3:15"},"nativeSrc":"4867:22:15","nodeType":"YulFunctionCall","src":"4867:22:15"},{"name":"dataEnd","nativeSrc":"4891:7:15","nodeType":"YulIdentifier","src":"4891:7:15"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4846:20:15","nodeType":"YulIdentifier","src":"4846:20:15"},"nativeSrc":"4846:53:15","nodeType":"YulFunctionCall","src":"4846:53:15"},"variableNames":[{"name":"value1","nativeSrc":"4836:6:15","nodeType":"YulIdentifier","src":"4836:6:15"}]}]},{"nativeSrc":"4919:118:15","nodeType":"YulBlock","src":"4919:118:15","statements":[{"nativeSrc":"4934:16:15","nodeType":"YulVariableDeclaration","src":"4934:16:15","value":{"kind":"number","nativeSrc":"4948:2:15","nodeType":"YulLiteral","src":"4948:2:15","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4938:6:15","nodeType":"YulTypedName","src":"4938:6:15","type":""}]},{"nativeSrc":"4964:63:15","nodeType":"YulAssignment","src":"4964:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4999:9:15","nodeType":"YulIdentifier","src":"4999:9:15"},{"name":"offset","nativeSrc":"5010:6:15","nodeType":"YulIdentifier","src":"5010:6:15"}],"functionName":{"name":"add","nativeSrc":"4995:3:15","nodeType":"YulIdentifier","src":"4995:3:15"},"nativeSrc":"4995:22:15","nodeType":"YulFunctionCall","src":"4995:22:15"},{"name":"dataEnd","nativeSrc":"5019:7:15","nodeType":"YulIdentifier","src":"5019:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4974:20:15","nodeType":"YulIdentifier","src":"4974:20:15"},"nativeSrc":"4974:53:15","nodeType":"YulFunctionCall","src":"4974:53:15"},"variableNames":[{"name":"value2","nativeSrc":"4964:6:15","nodeType":"YulIdentifier","src":"4964:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"4425:619:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4479:9:15","nodeType":"YulTypedName","src":"4479:9:15","type":""},{"name":"dataEnd","nativeSrc":"4490:7:15","nodeType":"YulTypedName","src":"4490:7:15","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4502:6:15","nodeType":"YulTypedName","src":"4502:6:15","type":""},{"name":"value1","nativeSrc":"4510:6:15","nodeType":"YulTypedName","src":"4510:6:15","type":""},{"name":"value2","nativeSrc":"4518:6:15","nodeType":"YulTypedName","src":"4518:6:15","type":""}],"src":"4425:619:15"},{"body":{"nativeSrc":"5093:43:15","nodeType":"YulBlock","src":"5093:43:15","statements":[{"nativeSrc":"5103:27:15","nodeType":"YulAssignment","src":"5103:27:15","value":{"arguments":[{"name":"value","nativeSrc":"5118:5:15","nodeType":"YulIdentifier","src":"5118:5:15"},{"kind":"number","nativeSrc":"5125:4:15","nodeType":"YulLiteral","src":"5125:4:15","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"5114:3:15","nodeType":"YulIdentifier","src":"5114:3:15"},"nativeSrc":"5114:16:15","nodeType":"YulFunctionCall","src":"5114:16:15"},"variableNames":[{"name":"cleaned","nativeSrc":"5103:7:15","nodeType":"YulIdentifier","src":"5103:7:15"}]}]},"name":"cleanup_t_uint8","nativeSrc":"5050:86:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5075:5:15","nodeType":"YulTypedName","src":"5075:5:15","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5085:7:15","nodeType":"YulTypedName","src":"5085:7:15","type":""}],"src":"5050:86:15"},{"body":{"nativeSrc":"5203:51:15","nodeType":"YulBlock","src":"5203:51:15","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5220:3:15","nodeType":"YulIdentifier","src":"5220:3:15"},{"arguments":[{"name":"value","nativeSrc":"5241:5:15","nodeType":"YulIdentifier","src":"5241:5:15"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"5225:15:15","nodeType":"YulIdentifier","src":"5225:15:15"},"nativeSrc":"5225:22:15","nodeType":"YulFunctionCall","src":"5225:22:15"}],"functionName":{"name":"mstore","nativeSrc":"5213:6:15","nodeType":"YulIdentifier","src":"5213:6:15"},"nativeSrc":"5213:35:15","nodeType":"YulFunctionCall","src":"5213:35:15"},"nativeSrc":"5213:35:15","nodeType":"YulExpressionStatement","src":"5213:35:15"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"5142:112:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5191:5:15","nodeType":"YulTypedName","src":"5191:5:15","type":""},{"name":"pos","nativeSrc":"5198:3:15","nodeType":"YulTypedName","src":"5198:3:15","type":""}],"src":"5142:112:15"},{"body":{"nativeSrc":"5354:120:15","nodeType":"YulBlock","src":"5354:120:15","statements":[{"nativeSrc":"5364:26:15","nodeType":"YulAssignment","src":"5364:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"5376:9:15","nodeType":"YulIdentifier","src":"5376:9:15"},{"kind":"number","nativeSrc":"5387:2:15","nodeType":"YulLiteral","src":"5387:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5372:3:15","nodeType":"YulIdentifier","src":"5372:3:15"},"nativeSrc":"5372:18:15","nodeType":"YulFunctionCall","src":"5372:18:15"},"variableNames":[{"name":"tail","nativeSrc":"5364:4:15","nodeType":"YulIdentifier","src":"5364:4:15"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5440:6:15","nodeType":"YulIdentifier","src":"5440:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"5453:9:15","nodeType":"YulIdentifier","src":"5453:9:15"},{"kind":"number","nativeSrc":"5464:1:15","nodeType":"YulLiteral","src":"5464:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5449:3:15","nodeType":"YulIdentifier","src":"5449:3:15"},"nativeSrc":"5449:17:15","nodeType":"YulFunctionCall","src":"5449:17:15"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"5400:39:15","nodeType":"YulIdentifier","src":"5400:39:15"},"nativeSrc":"5400:67:15","nodeType":"YulFunctionCall","src":"5400:67:15"},"nativeSrc":"5400:67:15","nodeType":"YulExpressionStatement","src":"5400:67:15"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"5260:214:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5326:9:15","nodeType":"YulTypedName","src":"5326:9:15","type":""},{"name":"value0","nativeSrc":"5338:6:15","nodeType":"YulTypedName","src":"5338:6:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5349:4:15","nodeType":"YulTypedName","src":"5349:4:15","type":""}],"src":"5260:214:15"},{"body":{"nativeSrc":"5569:28:15","nodeType":"YulBlock","src":"5569:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5586:1:15","nodeType":"YulLiteral","src":"5586:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"5589:1:15","nodeType":"YulLiteral","src":"5589:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5579:6:15","nodeType":"YulIdentifier","src":"5579:6:15"},"nativeSrc":"5579:12:15","nodeType":"YulFunctionCall","src":"5579:12:15"},"nativeSrc":"5579:12:15","nodeType":"YulExpressionStatement","src":"5579:12:15"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"5480:117:15","nodeType":"YulFunctionDefinition","src":"5480:117:15"},{"body":{"nativeSrc":"5692:28:15","nodeType":"YulBlock","src":"5692:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5709:1:15","nodeType":"YulLiteral","src":"5709:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"5712:1:15","nodeType":"YulLiteral","src":"5712:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5702:6:15","nodeType":"YulIdentifier","src":"5702:6:15"},"nativeSrc":"5702:12:15","nodeType":"YulFunctionCall","src":"5702:12:15"},"nativeSrc":"5702:12:15","nodeType":"YulExpressionStatement","src":"5702:12:15"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"5603:117:15","nodeType":"YulFunctionDefinition","src":"5603:117:15"},{"body":{"nativeSrc":"5815:28:15","nodeType":"YulBlock","src":"5815:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5832:1:15","nodeType":"YulLiteral","src":"5832:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"5835:1:15","nodeType":"YulLiteral","src":"5835:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5825:6:15","nodeType":"YulIdentifier","src":"5825:6:15"},"nativeSrc":"5825:12:15","nodeType":"YulFunctionCall","src":"5825:12:15"},"nativeSrc":"5825:12:15","nodeType":"YulExpressionStatement","src":"5825:12:15"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"5726:117:15","nodeType":"YulFunctionDefinition","src":"5726:117:15"},{"body":{"nativeSrc":"5956:478:15","nodeType":"YulBlock","src":"5956:478:15","statements":[{"body":{"nativeSrc":"6005:83:15","nodeType":"YulBlock","src":"6005:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"6007:77:15","nodeType":"YulIdentifier","src":"6007:77:15"},"nativeSrc":"6007:79:15","nodeType":"YulFunctionCall","src":"6007:79:15"},"nativeSrc":"6007:79:15","nodeType":"YulExpressionStatement","src":"6007:79:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5984:6:15","nodeType":"YulIdentifier","src":"5984:6:15"},{"kind":"number","nativeSrc":"5992:4:15","nodeType":"YulLiteral","src":"5992:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5980:3:15","nodeType":"YulIdentifier","src":"5980:3:15"},"nativeSrc":"5980:17:15","nodeType":"YulFunctionCall","src":"5980:17:15"},{"name":"end","nativeSrc":"5999:3:15","nodeType":"YulIdentifier","src":"5999:3:15"}],"functionName":{"name":"slt","nativeSrc":"5976:3:15","nodeType":"YulIdentifier","src":"5976:3:15"},"nativeSrc":"5976:27:15","nodeType":"YulFunctionCall","src":"5976:27:15"}],"functionName":{"name":"iszero","nativeSrc":"5969:6:15","nodeType":"YulIdentifier","src":"5969:6:15"},"nativeSrc":"5969:35:15","nodeType":"YulFunctionCall","src":"5969:35:15"},"nativeSrc":"5966:122:15","nodeType":"YulIf","src":"5966:122:15"},{"nativeSrc":"6097:30:15","nodeType":"YulAssignment","src":"6097:30:15","value":{"arguments":[{"name":"offset","nativeSrc":"6120:6:15","nodeType":"YulIdentifier","src":"6120:6:15"}],"functionName":{"name":"calldataload","nativeSrc":"6107:12:15","nodeType":"YulIdentifier","src":"6107:12:15"},"nativeSrc":"6107:20:15","nodeType":"YulFunctionCall","src":"6107:20:15"},"variableNames":[{"name":"length","nativeSrc":"6097:6:15","nodeType":"YulIdentifier","src":"6097:6:15"}]},{"body":{"nativeSrc":"6170:83:15","nodeType":"YulBlock","src":"6170:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"6172:77:15","nodeType":"YulIdentifier","src":"6172:77:15"},"nativeSrc":"6172:79:15","nodeType":"YulFunctionCall","src":"6172:79:15"},"nativeSrc":"6172:79:15","nodeType":"YulExpressionStatement","src":"6172:79:15"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"6142:6:15","nodeType":"YulIdentifier","src":"6142:6:15"},{"kind":"number","nativeSrc":"6150:18:15","nodeType":"YulLiteral","src":"6150:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6139:2:15","nodeType":"YulIdentifier","src":"6139:2:15"},"nativeSrc":"6139:30:15","nodeType":"YulFunctionCall","src":"6139:30:15"},"nativeSrc":"6136:117:15","nodeType":"YulIf","src":"6136:117:15"},{"nativeSrc":"6262:29:15","nodeType":"YulAssignment","src":"6262:29:15","value":{"arguments":[{"name":"offset","nativeSrc":"6278:6:15","nodeType":"YulIdentifier","src":"6278:6:15"},{"kind":"number","nativeSrc":"6286:4:15","nodeType":"YulLiteral","src":"6286:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6274:3:15","nodeType":"YulIdentifier","src":"6274:3:15"},"nativeSrc":"6274:17:15","nodeType":"YulFunctionCall","src":"6274:17:15"},"variableNames":[{"name":"arrayPos","nativeSrc":"6262:8:15","nodeType":"YulIdentifier","src":"6262:8:15"}]},{"body":{"nativeSrc":"6345:83:15","nodeType":"YulBlock","src":"6345:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"6347:77:15","nodeType":"YulIdentifier","src":"6347:77:15"},"nativeSrc":"6347:79:15","nodeType":"YulFunctionCall","src":"6347:79:15"},"nativeSrc":"6347:79:15","nodeType":"YulExpressionStatement","src":"6347:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"6310:8:15","nodeType":"YulIdentifier","src":"6310:8:15"},{"arguments":[{"name":"length","nativeSrc":"6324:6:15","nodeType":"YulIdentifier","src":"6324:6:15"},{"kind":"number","nativeSrc":"6332:4:15","nodeType":"YulLiteral","src":"6332:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"6320:3:15","nodeType":"YulIdentifier","src":"6320:3:15"},"nativeSrc":"6320:17:15","nodeType":"YulFunctionCall","src":"6320:17:15"}],"functionName":{"name":"add","nativeSrc":"6306:3:15","nodeType":"YulIdentifier","src":"6306:3:15"},"nativeSrc":"6306:32:15","nodeType":"YulFunctionCall","src":"6306:32:15"},{"name":"end","nativeSrc":"6340:3:15","nodeType":"YulIdentifier","src":"6340:3:15"}],"functionName":{"name":"gt","nativeSrc":"6303:2:15","nodeType":"YulIdentifier","src":"6303:2:15"},"nativeSrc":"6303:41:15","nodeType":"YulFunctionCall","src":"6303:41:15"},"nativeSrc":"6300:128:15","nodeType":"YulIf","src":"6300:128:15"}]},"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"5866:568:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5923:6:15","nodeType":"YulTypedName","src":"5923:6:15","type":""},{"name":"end","nativeSrc":"5931:3:15","nodeType":"YulTypedName","src":"5931:3:15","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"5939:8:15","nodeType":"YulTypedName","src":"5939:8:15","type":""},{"name":"length","nativeSrc":"5949:6:15","nodeType":"YulTypedName","src":"5949:6:15","type":""}],"src":"5866:568:15"},{"body":{"nativeSrc":"6609:972:15","nodeType":"YulBlock","src":"6609:972:15","statements":[{"body":{"nativeSrc":"6656:83:15","nodeType":"YulBlock","src":"6656:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6658:77:15","nodeType":"YulIdentifier","src":"6658:77:15"},"nativeSrc":"6658:79:15","nodeType":"YulFunctionCall","src":"6658:79:15"},"nativeSrc":"6658:79:15","nodeType":"YulExpressionStatement","src":"6658:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6630:7:15","nodeType":"YulIdentifier","src":"6630:7:15"},{"name":"headStart","nativeSrc":"6639:9:15","nodeType":"YulIdentifier","src":"6639:9:15"}],"functionName":{"name":"sub","nativeSrc":"6626:3:15","nodeType":"YulIdentifier","src":"6626:3:15"},"nativeSrc":"6626:23:15","nodeType":"YulFunctionCall","src":"6626:23:15"},{"kind":"number","nativeSrc":"6651:3:15","nodeType":"YulLiteral","src":"6651:3:15","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"6622:3:15","nodeType":"YulIdentifier","src":"6622:3:15"},"nativeSrc":"6622:33:15","nodeType":"YulFunctionCall","src":"6622:33:15"},"nativeSrc":"6619:120:15","nodeType":"YulIf","src":"6619:120:15"},{"nativeSrc":"6749:117:15","nodeType":"YulBlock","src":"6749:117:15","statements":[{"nativeSrc":"6764:15:15","nodeType":"YulVariableDeclaration","src":"6764:15:15","value":{"kind":"number","nativeSrc":"6778:1:15","nodeType":"YulLiteral","src":"6778:1:15","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6768:6:15","nodeType":"YulTypedName","src":"6768:6:15","type":""}]},{"nativeSrc":"6793:63:15","nodeType":"YulAssignment","src":"6793:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6828:9:15","nodeType":"YulIdentifier","src":"6828:9:15"},{"name":"offset","nativeSrc":"6839:6:15","nodeType":"YulIdentifier","src":"6839:6:15"}],"functionName":{"name":"add","nativeSrc":"6824:3:15","nodeType":"YulIdentifier","src":"6824:3:15"},"nativeSrc":"6824:22:15","nodeType":"YulFunctionCall","src":"6824:22:15"},{"name":"dataEnd","nativeSrc":"6848:7:15","nodeType":"YulIdentifier","src":"6848:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6803:20:15","nodeType":"YulIdentifier","src":"6803:20:15"},"nativeSrc":"6803:53:15","nodeType":"YulFunctionCall","src":"6803:53:15"},"variableNames":[{"name":"value0","nativeSrc":"6793:6:15","nodeType":"YulIdentifier","src":"6793:6:15"}]}]},{"nativeSrc":"6876:118:15","nodeType":"YulBlock","src":"6876:118:15","statements":[{"nativeSrc":"6891:16:15","nodeType":"YulVariableDeclaration","src":"6891:16:15","value":{"kind":"number","nativeSrc":"6905:2:15","nodeType":"YulLiteral","src":"6905:2:15","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6895:6:15","nodeType":"YulTypedName","src":"6895:6:15","type":""}]},{"nativeSrc":"6921:63:15","nodeType":"YulAssignment","src":"6921:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6956:9:15","nodeType":"YulIdentifier","src":"6956:9:15"},{"name":"offset","nativeSrc":"6967:6:15","nodeType":"YulIdentifier","src":"6967:6:15"}],"functionName":{"name":"add","nativeSrc":"6952:3:15","nodeType":"YulIdentifier","src":"6952:3:15"},"nativeSrc":"6952:22:15","nodeType":"YulFunctionCall","src":"6952:22:15"},{"name":"dataEnd","nativeSrc":"6976:7:15","nodeType":"YulIdentifier","src":"6976:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6931:20:15","nodeType":"YulIdentifier","src":"6931:20:15"},"nativeSrc":"6931:53:15","nodeType":"YulFunctionCall","src":"6931:53:15"},"variableNames":[{"name":"value1","nativeSrc":"6921:6:15","nodeType":"YulIdentifier","src":"6921:6:15"}]}]},{"nativeSrc":"7004:313:15","nodeType":"YulBlock","src":"7004:313:15","statements":[{"nativeSrc":"7019:46:15","nodeType":"YulVariableDeclaration","src":"7019:46:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7050:9:15","nodeType":"YulIdentifier","src":"7050:9:15"},{"kind":"number","nativeSrc":"7061:2:15","nodeType":"YulLiteral","src":"7061:2:15","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7046:3:15","nodeType":"YulIdentifier","src":"7046:3:15"},"nativeSrc":"7046:18:15","nodeType":"YulFunctionCall","src":"7046:18:15"}],"functionName":{"name":"calldataload","nativeSrc":"7033:12:15","nodeType":"YulIdentifier","src":"7033:12:15"},"nativeSrc":"7033:32:15","nodeType":"YulFunctionCall","src":"7033:32:15"},"variables":[{"name":"offset","nativeSrc":"7023:6:15","nodeType":"YulTypedName","src":"7023:6:15","type":""}]},{"body":{"nativeSrc":"7112:83:15","nodeType":"YulBlock","src":"7112:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"7114:77:15","nodeType":"YulIdentifier","src":"7114:77:15"},"nativeSrc":"7114:79:15","nodeType":"YulFunctionCall","src":"7114:79:15"},"nativeSrc":"7114:79:15","nodeType":"YulExpressionStatement","src":"7114:79:15"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"7084:6:15","nodeType":"YulIdentifier","src":"7084:6:15"},{"kind":"number","nativeSrc":"7092:18:15","nodeType":"YulLiteral","src":"7092:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7081:2:15","nodeType":"YulIdentifier","src":"7081:2:15"},"nativeSrc":"7081:30:15","nodeType":"YulFunctionCall","src":"7081:30:15"},"nativeSrc":"7078:117:15","nodeType":"YulIf","src":"7078:117:15"},{"nativeSrc":"7209:98:15","nodeType":"YulAssignment","src":"7209:98:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7279:9:15","nodeType":"YulIdentifier","src":"7279:9:15"},{"name":"offset","nativeSrc":"7290:6:15","nodeType":"YulIdentifier","src":"7290:6:15"}],"functionName":{"name":"add","nativeSrc":"7275:3:15","nodeType":"YulIdentifier","src":"7275:3:15"},"nativeSrc":"7275:22:15","nodeType":"YulFunctionCall","src":"7275:22:15"},{"name":"dataEnd","nativeSrc":"7299:7:15","nodeType":"YulIdentifier","src":"7299:7:15"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"7227:47:15","nodeType":"YulIdentifier","src":"7227:47:15"},"nativeSrc":"7227:80:15","nodeType":"YulFunctionCall","src":"7227:80:15"},"variableNames":[{"name":"value2","nativeSrc":"7209:6:15","nodeType":"YulIdentifier","src":"7209:6:15"},{"name":"value3","nativeSrc":"7217:6:15","nodeType":"YulIdentifier","src":"7217:6:15"}]}]},{"nativeSrc":"7327:118:15","nodeType":"YulBlock","src":"7327:118:15","statements":[{"nativeSrc":"7342:16:15","nodeType":"YulVariableDeclaration","src":"7342:16:15","value":{"kind":"number","nativeSrc":"7356:2:15","nodeType":"YulLiteral","src":"7356:2:15","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"7346:6:15","nodeType":"YulTypedName","src":"7346:6:15","type":""}]},{"nativeSrc":"7372:63:15","nodeType":"YulAssignment","src":"7372:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7407:9:15","nodeType":"YulIdentifier","src":"7407:9:15"},{"name":"offset","nativeSrc":"7418:6:15","nodeType":"YulIdentifier","src":"7418:6:15"}],"functionName":{"name":"add","nativeSrc":"7403:3:15","nodeType":"YulIdentifier","src":"7403:3:15"},"nativeSrc":"7403:22:15","nodeType":"YulFunctionCall","src":"7403:22:15"},{"name":"dataEnd","nativeSrc":"7427:7:15","nodeType":"YulIdentifier","src":"7427:7:15"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7382:20:15","nodeType":"YulIdentifier","src":"7382:20:15"},"nativeSrc":"7382:53:15","nodeType":"YulFunctionCall","src":"7382:53:15"},"variableNames":[{"name":"value4","nativeSrc":"7372:6:15","nodeType":"YulIdentifier","src":"7372:6:15"}]}]},{"nativeSrc":"7455:119:15","nodeType":"YulBlock","src":"7455:119:15","statements":[{"nativeSrc":"7470:17:15","nodeType":"YulVariableDeclaration","src":"7470:17:15","value":{"kind":"number","nativeSrc":"7484:3:15","nodeType":"YulLiteral","src":"7484:3:15","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"7474:6:15","nodeType":"YulTypedName","src":"7474:6:15","type":""}]},{"nativeSrc":"7501:63:15","nodeType":"YulAssignment","src":"7501:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7536:9:15","nodeType":"YulIdentifier","src":"7536:9:15"},{"name":"offset","nativeSrc":"7547:6:15","nodeType":"YulIdentifier","src":"7547:6:15"}],"functionName":{"name":"add","nativeSrc":"7532:3:15","nodeType":"YulIdentifier","src":"7532:3:15"},"nativeSrc":"7532:22:15","nodeType":"YulFunctionCall","src":"7532:22:15"},{"name":"dataEnd","nativeSrc":"7556:7:15","nodeType":"YulIdentifier","src":"7556:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"7511:20:15","nodeType":"YulIdentifier","src":"7511:20:15"},"nativeSrc":"7511:53:15","nodeType":"YulFunctionCall","src":"7511:53:15"},"variableNames":[{"name":"value5","nativeSrc":"7501:6:15","nodeType":"YulIdentifier","src":"7501:6:15"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256","nativeSrc":"6440:1141:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6539:9:15","nodeType":"YulTypedName","src":"6539:9:15","type":""},{"name":"dataEnd","nativeSrc":"6550:7:15","nodeType":"YulTypedName","src":"6550:7:15","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6562:6:15","nodeType":"YulTypedName","src":"6562:6:15","type":""},{"name":"value1","nativeSrc":"6570:6:15","nodeType":"YulTypedName","src":"6570:6:15","type":""},{"name":"value2","nativeSrc":"6578:6:15","nodeType":"YulTypedName","src":"6578:6:15","type":""},{"name":"value3","nativeSrc":"6586:6:15","nodeType":"YulTypedName","src":"6586:6:15","type":""},{"name":"value4","nativeSrc":"6594:6:15","nodeType":"YulTypedName","src":"6594:6:15","type":""},{"name":"value5","nativeSrc":"6602:6:15","nodeType":"YulTypedName","src":"6602:6:15","type":""}],"src":"6440:1141:15"},{"body":{"nativeSrc":"7652:53:15","nodeType":"YulBlock","src":"7652:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7669:3:15","nodeType":"YulIdentifier","src":"7669:3:15"},{"arguments":[{"name":"value","nativeSrc":"7692:5:15","nodeType":"YulIdentifier","src":"7692:5:15"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"7674:17:15","nodeType":"YulIdentifier","src":"7674:17:15"},"nativeSrc":"7674:24:15","nodeType":"YulFunctionCall","src":"7674:24:15"}],"functionName":{"name":"mstore","nativeSrc":"7662:6:15","nodeType":"YulIdentifier","src":"7662:6:15"},"nativeSrc":"7662:37:15","nodeType":"YulFunctionCall","src":"7662:37:15"},"nativeSrc":"7662:37:15","nodeType":"YulExpressionStatement","src":"7662:37:15"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7587:118:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7640:5:15","nodeType":"YulTypedName","src":"7640:5:15","type":""},{"name":"pos","nativeSrc":"7647:3:15","nodeType":"YulTypedName","src":"7647:3:15","type":""}],"src":"7587:118:15"},{"body":{"nativeSrc":"7809:124:15","nodeType":"YulBlock","src":"7809:124:15","statements":[{"nativeSrc":"7819:26:15","nodeType":"YulAssignment","src":"7819:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"7831:9:15","nodeType":"YulIdentifier","src":"7831:9:15"},{"kind":"number","nativeSrc":"7842:2:15","nodeType":"YulLiteral","src":"7842:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7827:3:15","nodeType":"YulIdentifier","src":"7827:3:15"},"nativeSrc":"7827:18:15","nodeType":"YulFunctionCall","src":"7827:18:15"},"variableNames":[{"name":"tail","nativeSrc":"7819:4:15","nodeType":"YulIdentifier","src":"7819:4:15"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7899:6:15","nodeType":"YulIdentifier","src":"7899:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"7912:9:15","nodeType":"YulIdentifier","src":"7912:9:15"},{"kind":"number","nativeSrc":"7923:1:15","nodeType":"YulLiteral","src":"7923:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7908:3:15","nodeType":"YulIdentifier","src":"7908:3:15"},"nativeSrc":"7908:17:15","nodeType":"YulFunctionCall","src":"7908:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7855:43:15","nodeType":"YulIdentifier","src":"7855:43:15"},"nativeSrc":"7855:71:15","nodeType":"YulFunctionCall","src":"7855:71:15"},"nativeSrc":"7855:71:15","nodeType":"YulExpressionStatement","src":"7855:71:15"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"7711:222:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7781:9:15","nodeType":"YulTypedName","src":"7781:9:15","type":""},{"name":"value0","nativeSrc":"7793:6:15","nodeType":"YulTypedName","src":"7793:6:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7804:4:15","nodeType":"YulTypedName","src":"7804:4:15","type":""}],"src":"7711:222:15"},{"body":{"nativeSrc":"8005:263:15","nodeType":"YulBlock","src":"8005:263:15","statements":[{"body":{"nativeSrc":"8051:83:15","nodeType":"YulBlock","src":"8051:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8053:77:15","nodeType":"YulIdentifier","src":"8053:77:15"},"nativeSrc":"8053:79:15","nodeType":"YulFunctionCall","src":"8053:79:15"},"nativeSrc":"8053:79:15","nodeType":"YulExpressionStatement","src":"8053:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8026:7:15","nodeType":"YulIdentifier","src":"8026:7:15"},{"name":"headStart","nativeSrc":"8035:9:15","nodeType":"YulIdentifier","src":"8035:9:15"}],"functionName":{"name":"sub","nativeSrc":"8022:3:15","nodeType":"YulIdentifier","src":"8022:3:15"},"nativeSrc":"8022:23:15","nodeType":"YulFunctionCall","src":"8022:23:15"},{"kind":"number","nativeSrc":"8047:2:15","nodeType":"YulLiteral","src":"8047:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"8018:3:15","nodeType":"YulIdentifier","src":"8018:3:15"},"nativeSrc":"8018:32:15","nodeType":"YulFunctionCall","src":"8018:32:15"},"nativeSrc":"8015:119:15","nodeType":"YulIf","src":"8015:119:15"},{"nativeSrc":"8144:117:15","nodeType":"YulBlock","src":"8144:117:15","statements":[{"nativeSrc":"8159:15:15","nodeType":"YulVariableDeclaration","src":"8159:15:15","value":{"kind":"number","nativeSrc":"8173:1:15","nodeType":"YulLiteral","src":"8173:1:15","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8163:6:15","nodeType":"YulTypedName","src":"8163:6:15","type":""}]},{"nativeSrc":"8188:63:15","nodeType":"YulAssignment","src":"8188:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8223:9:15","nodeType":"YulIdentifier","src":"8223:9:15"},{"name":"offset","nativeSrc":"8234:6:15","nodeType":"YulIdentifier","src":"8234:6:15"}],"functionName":{"name":"add","nativeSrc":"8219:3:15","nodeType":"YulIdentifier","src":"8219:3:15"},"nativeSrc":"8219:22:15","nodeType":"YulFunctionCall","src":"8219:22:15"},{"name":"dataEnd","nativeSrc":"8243:7:15","nodeType":"YulIdentifier","src":"8243:7:15"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8198:20:15","nodeType":"YulIdentifier","src":"8198:20:15"},"nativeSrc":"8198:53:15","nodeType":"YulFunctionCall","src":"8198:53:15"},"variableNames":[{"name":"value0","nativeSrc":"8188:6:15","nodeType":"YulIdentifier","src":"8188:6:15"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"7939:329:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7975:9:15","nodeType":"YulTypedName","src":"7975:9:15","type":""},{"name":"dataEnd","nativeSrc":"7986:7:15","nodeType":"YulTypedName","src":"7986:7:15","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7998:6:15","nodeType":"YulTypedName","src":"7998:6:15","type":""}],"src":"7939:329:15"},{"body":{"nativeSrc":"8357:391:15","nodeType":"YulBlock","src":"8357:391:15","statements":[{"body":{"nativeSrc":"8403:83:15","nodeType":"YulBlock","src":"8403:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8405:77:15","nodeType":"YulIdentifier","src":"8405:77:15"},"nativeSrc":"8405:79:15","nodeType":"YulFunctionCall","src":"8405:79:15"},"nativeSrc":"8405:79:15","nodeType":"YulExpressionStatement","src":"8405:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8378:7:15","nodeType":"YulIdentifier","src":"8378:7:15"},{"name":"headStart","nativeSrc":"8387:9:15","nodeType":"YulIdentifier","src":"8387:9:15"}],"functionName":{"name":"sub","nativeSrc":"8374:3:15","nodeType":"YulIdentifier","src":"8374:3:15"},"nativeSrc":"8374:23:15","nodeType":"YulFunctionCall","src":"8374:23:15"},{"kind":"number","nativeSrc":"8399:2:15","nodeType":"YulLiteral","src":"8399:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"8370:3:15","nodeType":"YulIdentifier","src":"8370:3:15"},"nativeSrc":"8370:32:15","nodeType":"YulFunctionCall","src":"8370:32:15"},"nativeSrc":"8367:119:15","nodeType":"YulIf","src":"8367:119:15"},{"nativeSrc":"8496:117:15","nodeType":"YulBlock","src":"8496:117:15","statements":[{"nativeSrc":"8511:15:15","nodeType":"YulVariableDeclaration","src":"8511:15:15","value":{"kind":"number","nativeSrc":"8525:1:15","nodeType":"YulLiteral","src":"8525:1:15","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8515:6:15","nodeType":"YulTypedName","src":"8515:6:15","type":""}]},{"nativeSrc":"8540:63:15","nodeType":"YulAssignment","src":"8540:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8575:9:15","nodeType":"YulIdentifier","src":"8575:9:15"},{"name":"offset","nativeSrc":"8586:6:15","nodeType":"YulIdentifier","src":"8586:6:15"}],"functionName":{"name":"add","nativeSrc":"8571:3:15","nodeType":"YulIdentifier","src":"8571:3:15"},"nativeSrc":"8571:22:15","nodeType":"YulFunctionCall","src":"8571:22:15"},{"name":"dataEnd","nativeSrc":"8595:7:15","nodeType":"YulIdentifier","src":"8595:7:15"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8550:20:15","nodeType":"YulIdentifier","src":"8550:20:15"},"nativeSrc":"8550:53:15","nodeType":"YulFunctionCall","src":"8550:53:15"},"variableNames":[{"name":"value0","nativeSrc":"8540:6:15","nodeType":"YulIdentifier","src":"8540:6:15"}]}]},{"nativeSrc":"8623:118:15","nodeType":"YulBlock","src":"8623:118:15","statements":[{"nativeSrc":"8638:16:15","nodeType":"YulVariableDeclaration","src":"8638:16:15","value":{"kind":"number","nativeSrc":"8652:2:15","nodeType":"YulLiteral","src":"8652:2:15","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"8642:6:15","nodeType":"YulTypedName","src":"8642:6:15","type":""}]},{"nativeSrc":"8668:63:15","nodeType":"YulAssignment","src":"8668:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8703:9:15","nodeType":"YulIdentifier","src":"8703:9:15"},{"name":"offset","nativeSrc":"8714:6:15","nodeType":"YulIdentifier","src":"8714:6:15"}],"functionName":{"name":"add","nativeSrc":"8699:3:15","nodeType":"YulIdentifier","src":"8699:3:15"},"nativeSrc":"8699:22:15","nodeType":"YulFunctionCall","src":"8699:22:15"},{"name":"dataEnd","nativeSrc":"8723:7:15","nodeType":"YulIdentifier","src":"8723:7:15"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8678:20:15","nodeType":"YulIdentifier","src":"8678:20:15"},"nativeSrc":"8678:53:15","nodeType":"YulFunctionCall","src":"8678:53:15"},"variableNames":[{"name":"value1","nativeSrc":"8668:6:15","nodeType":"YulIdentifier","src":"8668:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"8274:474:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8319:9:15","nodeType":"YulTypedName","src":"8319:9:15","type":""},{"name":"dataEnd","nativeSrc":"8330:7:15","nodeType":"YulTypedName","src":"8330:7:15","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8342:6:15","nodeType":"YulTypedName","src":"8342:6:15","type":""},{"name":"value1","nativeSrc":"8350:6:15","nodeType":"YulTypedName","src":"8350:6:15","type":""}],"src":"8274:474:15"},{"body":{"nativeSrc":"8922:1035:15","nodeType":"YulBlock","src":"8922:1035:15","statements":[{"body":{"nativeSrc":"8969:83:15","nodeType":"YulBlock","src":"8969:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8971:77:15","nodeType":"YulIdentifier","src":"8971:77:15"},"nativeSrc":"8971:79:15","nodeType":"YulFunctionCall","src":"8971:79:15"},"nativeSrc":"8971:79:15","nodeType":"YulExpressionStatement","src":"8971:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8943:7:15","nodeType":"YulIdentifier","src":"8943:7:15"},{"name":"headStart","nativeSrc":"8952:9:15","nodeType":"YulIdentifier","src":"8952:9:15"}],"functionName":{"name":"sub","nativeSrc":"8939:3:15","nodeType":"YulIdentifier","src":"8939:3:15"},"nativeSrc":"8939:23:15","nodeType":"YulFunctionCall","src":"8939:23:15"},{"kind":"number","nativeSrc":"8964:3:15","nodeType":"YulLiteral","src":"8964:3:15","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"8935:3:15","nodeType":"YulIdentifier","src":"8935:3:15"},"nativeSrc":"8935:33:15","nodeType":"YulFunctionCall","src":"8935:33:15"},"nativeSrc":"8932:120:15","nodeType":"YulIf","src":"8932:120:15"},{"nativeSrc":"9062:117:15","nodeType":"YulBlock","src":"9062:117:15","statements":[{"nativeSrc":"9077:15:15","nodeType":"YulVariableDeclaration","src":"9077:15:15","value":{"kind":"number","nativeSrc":"9091:1:15","nodeType":"YulLiteral","src":"9091:1:15","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9081:6:15","nodeType":"YulTypedName","src":"9081:6:15","type":""}]},{"nativeSrc":"9106:63:15","nodeType":"YulAssignment","src":"9106:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9141:9:15","nodeType":"YulIdentifier","src":"9141:9:15"},{"name":"offset","nativeSrc":"9152:6:15","nodeType":"YulIdentifier","src":"9152:6:15"}],"functionName":{"name":"add","nativeSrc":"9137:3:15","nodeType":"YulIdentifier","src":"9137:3:15"},"nativeSrc":"9137:22:15","nodeType":"YulFunctionCall","src":"9137:22:15"},{"name":"dataEnd","nativeSrc":"9161:7:15","nodeType":"YulIdentifier","src":"9161:7:15"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9116:20:15","nodeType":"YulIdentifier","src":"9116:20:15"},"nativeSrc":"9116:53:15","nodeType":"YulFunctionCall","src":"9116:53:15"},"variableNames":[{"name":"value0","nativeSrc":"9106:6:15","nodeType":"YulIdentifier","src":"9106:6:15"}]}]},{"nativeSrc":"9189:118:15","nodeType":"YulBlock","src":"9189:118:15","statements":[{"nativeSrc":"9204:16:15","nodeType":"YulVariableDeclaration","src":"9204:16:15","value":{"kind":"number","nativeSrc":"9218:2:15","nodeType":"YulLiteral","src":"9218:2:15","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"9208:6:15","nodeType":"YulTypedName","src":"9208:6:15","type":""}]},{"nativeSrc":"9234:63:15","nodeType":"YulAssignment","src":"9234:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9269:9:15","nodeType":"YulIdentifier","src":"9269:9:15"},{"name":"offset","nativeSrc":"9280:6:15","nodeType":"YulIdentifier","src":"9280:6:15"}],"functionName":{"name":"add","nativeSrc":"9265:3:15","nodeType":"YulIdentifier","src":"9265:3:15"},"nativeSrc":"9265:22:15","nodeType":"YulFunctionCall","src":"9265:22:15"},{"name":"dataEnd","nativeSrc":"9289:7:15","nodeType":"YulIdentifier","src":"9289:7:15"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9244:20:15","nodeType":"YulIdentifier","src":"9244:20:15"},"nativeSrc":"9244:53:15","nodeType":"YulFunctionCall","src":"9244:53:15"},"variableNames":[{"name":"value1","nativeSrc":"9234:6:15","nodeType":"YulIdentifier","src":"9234:6:15"}]}]},{"nativeSrc":"9317:118:15","nodeType":"YulBlock","src":"9317:118:15","statements":[{"nativeSrc":"9332:16:15","nodeType":"YulVariableDeclaration","src":"9332:16:15","value":{"kind":"number","nativeSrc":"9346:2:15","nodeType":"YulLiteral","src":"9346:2:15","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"9336:6:15","nodeType":"YulTypedName","src":"9336:6:15","type":""}]},{"nativeSrc":"9362:63:15","nodeType":"YulAssignment","src":"9362:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9397:9:15","nodeType":"YulIdentifier","src":"9397:9:15"},{"name":"offset","nativeSrc":"9408:6:15","nodeType":"YulIdentifier","src":"9408:6:15"}],"functionName":{"name":"add","nativeSrc":"9393:3:15","nodeType":"YulIdentifier","src":"9393:3:15"},"nativeSrc":"9393:22:15","nodeType":"YulFunctionCall","src":"9393:22:15"},{"name":"dataEnd","nativeSrc":"9417:7:15","nodeType":"YulIdentifier","src":"9417:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9372:20:15","nodeType":"YulIdentifier","src":"9372:20:15"},"nativeSrc":"9372:53:15","nodeType":"YulFunctionCall","src":"9372:53:15"},"variableNames":[{"name":"value2","nativeSrc":"9362:6:15","nodeType":"YulIdentifier","src":"9362:6:15"}]}]},{"nativeSrc":"9445:118:15","nodeType":"YulBlock","src":"9445:118:15","statements":[{"nativeSrc":"9460:16:15","nodeType":"YulVariableDeclaration","src":"9460:16:15","value":{"kind":"number","nativeSrc":"9474:2:15","nodeType":"YulLiteral","src":"9474:2:15","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"9464:6:15","nodeType":"YulTypedName","src":"9464:6:15","type":""}]},{"nativeSrc":"9490:63:15","nodeType":"YulAssignment","src":"9490:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9525:9:15","nodeType":"YulIdentifier","src":"9525:9:15"},{"name":"offset","nativeSrc":"9536:6:15","nodeType":"YulIdentifier","src":"9536:6:15"}],"functionName":{"name":"add","nativeSrc":"9521:3:15","nodeType":"YulIdentifier","src":"9521:3:15"},"nativeSrc":"9521:22:15","nodeType":"YulFunctionCall","src":"9521:22:15"},{"name":"dataEnd","nativeSrc":"9545:7:15","nodeType":"YulIdentifier","src":"9545:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9500:20:15","nodeType":"YulIdentifier","src":"9500:20:15"},"nativeSrc":"9500:53:15","nodeType":"YulFunctionCall","src":"9500:53:15"},"variableNames":[{"name":"value3","nativeSrc":"9490:6:15","nodeType":"YulIdentifier","src":"9490:6:15"}]}]},{"nativeSrc":"9573:119:15","nodeType":"YulBlock","src":"9573:119:15","statements":[{"nativeSrc":"9588:17:15","nodeType":"YulVariableDeclaration","src":"9588:17:15","value":{"kind":"number","nativeSrc":"9602:3:15","nodeType":"YulLiteral","src":"9602:3:15","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"9592:6:15","nodeType":"YulTypedName","src":"9592:6:15","type":""}]},{"nativeSrc":"9619:63:15","nodeType":"YulAssignment","src":"9619:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9654:9:15","nodeType":"YulIdentifier","src":"9654:9:15"},{"name":"offset","nativeSrc":"9665:6:15","nodeType":"YulIdentifier","src":"9665:6:15"}],"functionName":{"name":"add","nativeSrc":"9650:3:15","nodeType":"YulIdentifier","src":"9650:3:15"},"nativeSrc":"9650:22:15","nodeType":"YulFunctionCall","src":"9650:22:15"},{"name":"dataEnd","nativeSrc":"9674:7:15","nodeType":"YulIdentifier","src":"9674:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9629:20:15","nodeType":"YulIdentifier","src":"9629:20:15"},"nativeSrc":"9629:53:15","nodeType":"YulFunctionCall","src":"9629:53:15"},"variableNames":[{"name":"value4","nativeSrc":"9619:6:15","nodeType":"YulIdentifier","src":"9619:6:15"}]}]},{"nativeSrc":"9702:119:15","nodeType":"YulBlock","src":"9702:119:15","statements":[{"nativeSrc":"9717:17:15","nodeType":"YulVariableDeclaration","src":"9717:17:15","value":{"kind":"number","nativeSrc":"9731:3:15","nodeType":"YulLiteral","src":"9731:3:15","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"9721:6:15","nodeType":"YulTypedName","src":"9721:6:15","type":""}]},{"nativeSrc":"9748:63:15","nodeType":"YulAssignment","src":"9748:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9783:9:15","nodeType":"YulIdentifier","src":"9783:9:15"},{"name":"offset","nativeSrc":"9794:6:15","nodeType":"YulIdentifier","src":"9794:6:15"}],"functionName":{"name":"add","nativeSrc":"9779:3:15","nodeType":"YulIdentifier","src":"9779:3:15"},"nativeSrc":"9779:22:15","nodeType":"YulFunctionCall","src":"9779:22:15"},{"name":"dataEnd","nativeSrc":"9803:7:15","nodeType":"YulIdentifier","src":"9803:7:15"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9758:20:15","nodeType":"YulIdentifier","src":"9758:20:15"},"nativeSrc":"9758:53:15","nodeType":"YulFunctionCall","src":"9758:53:15"},"variableNames":[{"name":"value5","nativeSrc":"9748:6:15","nodeType":"YulIdentifier","src":"9748:6:15"}]}]},{"nativeSrc":"9831:119:15","nodeType":"YulBlock","src":"9831:119:15","statements":[{"nativeSrc":"9846:17:15","nodeType":"YulVariableDeclaration","src":"9846:17:15","value":{"kind":"number","nativeSrc":"9860:3:15","nodeType":"YulLiteral","src":"9860:3:15","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"9850:6:15","nodeType":"YulTypedName","src":"9850:6:15","type":""}]},{"nativeSrc":"9877:63:15","nodeType":"YulAssignment","src":"9877:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9912:9:15","nodeType":"YulIdentifier","src":"9912:9:15"},{"name":"offset","nativeSrc":"9923:6:15","nodeType":"YulIdentifier","src":"9923:6:15"}],"functionName":{"name":"add","nativeSrc":"9908:3:15","nodeType":"YulIdentifier","src":"9908:3:15"},"nativeSrc":"9908:22:15","nodeType":"YulFunctionCall","src":"9908:22:15"},{"name":"dataEnd","nativeSrc":"9932:7:15","nodeType":"YulIdentifier","src":"9932:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9887:20:15","nodeType":"YulIdentifier","src":"9887:20:15"},"nativeSrc":"9887:53:15","nodeType":"YulFunctionCall","src":"9887:53:15"},"variableNames":[{"name":"value6","nativeSrc":"9877:6:15","nodeType":"YulIdentifier","src":"9877:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256","nativeSrc":"8754:1203:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8844:9:15","nodeType":"YulTypedName","src":"8844:9:15","type":""},{"name":"dataEnd","nativeSrc":"8855:7:15","nodeType":"YulTypedName","src":"8855:7:15","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8867:6:15","nodeType":"YulTypedName","src":"8867:6:15","type":""},{"name":"value1","nativeSrc":"8875:6:15","nodeType":"YulTypedName","src":"8875:6:15","type":""},{"name":"value2","nativeSrc":"8883:6:15","nodeType":"YulTypedName","src":"8883:6:15","type":""},{"name":"value3","nativeSrc":"8891:6:15","nodeType":"YulTypedName","src":"8891:6:15","type":""},{"name":"value4","nativeSrc":"8899:6:15","nodeType":"YulTypedName","src":"8899:6:15","type":""},{"name":"value5","nativeSrc":"8907:6:15","nodeType":"YulTypedName","src":"8907:6:15","type":""},{"name":"value6","nativeSrc":"8915:6:15","nodeType":"YulTypedName","src":"8915:6:15","type":""}],"src":"8754:1203:15"},{"body":{"nativeSrc":"10089:206:15","nodeType":"YulBlock","src":"10089:206:15","statements":[{"nativeSrc":"10099:26:15","nodeType":"YulAssignment","src":"10099:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"10111:9:15","nodeType":"YulIdentifier","src":"10111:9:15"},{"kind":"number","nativeSrc":"10122:2:15","nodeType":"YulLiteral","src":"10122:2:15","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10107:3:15","nodeType":"YulIdentifier","src":"10107:3:15"},"nativeSrc":"10107:18:15","nodeType":"YulFunctionCall","src":"10107:18:15"},"variableNames":[{"name":"tail","nativeSrc":"10099:4:15","nodeType":"YulIdentifier","src":"10099:4:15"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10179:6:15","nodeType":"YulIdentifier","src":"10179:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"10192:9:15","nodeType":"YulIdentifier","src":"10192:9:15"},{"kind":"number","nativeSrc":"10203:1:15","nodeType":"YulLiteral","src":"10203:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10188:3:15","nodeType":"YulIdentifier","src":"10188:3:15"},"nativeSrc":"10188:17:15","nodeType":"YulFunctionCall","src":"10188:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10135:43:15","nodeType":"YulIdentifier","src":"10135:43:15"},"nativeSrc":"10135:71:15","nodeType":"YulFunctionCall","src":"10135:71:15"},"nativeSrc":"10135:71:15","nodeType":"YulExpressionStatement","src":"10135:71:15"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10260:6:15","nodeType":"YulIdentifier","src":"10260:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"10273:9:15","nodeType":"YulIdentifier","src":"10273:9:15"},{"kind":"number","nativeSrc":"10284:2:15","nodeType":"YulLiteral","src":"10284:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10269:3:15","nodeType":"YulIdentifier","src":"10269:3:15"},"nativeSrc":"10269:18:15","nodeType":"YulFunctionCall","src":"10269:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10216:43:15","nodeType":"YulIdentifier","src":"10216:43:15"},"nativeSrc":"10216:72:15","nodeType":"YulFunctionCall","src":"10216:72:15"},"nativeSrc":"10216:72:15","nodeType":"YulExpressionStatement","src":"10216:72:15"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"9963:332:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10053:9:15","nodeType":"YulTypedName","src":"10053:9:15","type":""},{"name":"value1","nativeSrc":"10065:6:15","nodeType":"YulTypedName","src":"10065:6:15","type":""},{"name":"value0","nativeSrc":"10073:6:15","nodeType":"YulTypedName","src":"10073:6:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10084:4:15","nodeType":"YulTypedName","src":"10084:4:15","type":""}],"src":"9963:332:15"},{"body":{"nativeSrc":"10486:1164:15","nodeType":"YulBlock","src":"10486:1164:15","statements":[{"body":{"nativeSrc":"10533:83:15","nodeType":"YulBlock","src":"10533:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10535:77:15","nodeType":"YulIdentifier","src":"10535:77:15"},"nativeSrc":"10535:79:15","nodeType":"YulFunctionCall","src":"10535:79:15"},"nativeSrc":"10535:79:15","nodeType":"YulExpressionStatement","src":"10535:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10507:7:15","nodeType":"YulIdentifier","src":"10507:7:15"},{"name":"headStart","nativeSrc":"10516:9:15","nodeType":"YulIdentifier","src":"10516:9:15"}],"functionName":{"name":"sub","nativeSrc":"10503:3:15","nodeType":"YulIdentifier","src":"10503:3:15"},"nativeSrc":"10503:23:15","nodeType":"YulFunctionCall","src":"10503:23:15"},{"kind":"number","nativeSrc":"10528:3:15","nodeType":"YulLiteral","src":"10528:3:15","type":"","value":"256"}],"functionName":{"name":"slt","nativeSrc":"10499:3:15","nodeType":"YulIdentifier","src":"10499:3:15"},"nativeSrc":"10499:33:15","nodeType":"YulFunctionCall","src":"10499:33:15"},"nativeSrc":"10496:120:15","nodeType":"YulIf","src":"10496:120:15"},{"nativeSrc":"10626:117:15","nodeType":"YulBlock","src":"10626:117:15","statements":[{"nativeSrc":"10641:15:15","nodeType":"YulVariableDeclaration","src":"10641:15:15","value":{"kind":"number","nativeSrc":"10655:1:15","nodeType":"YulLiteral","src":"10655:1:15","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10645:6:15","nodeType":"YulTypedName","src":"10645:6:15","type":""}]},{"nativeSrc":"10670:63:15","nodeType":"YulAssignment","src":"10670:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10705:9:15","nodeType":"YulIdentifier","src":"10705:9:15"},{"name":"offset","nativeSrc":"10716:6:15","nodeType":"YulIdentifier","src":"10716:6:15"}],"functionName":{"name":"add","nativeSrc":"10701:3:15","nodeType":"YulIdentifier","src":"10701:3:15"},"nativeSrc":"10701:22:15","nodeType":"YulFunctionCall","src":"10701:22:15"},{"name":"dataEnd","nativeSrc":"10725:7:15","nodeType":"YulIdentifier","src":"10725:7:15"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10680:20:15","nodeType":"YulIdentifier","src":"10680:20:15"},"nativeSrc":"10680:53:15","nodeType":"YulFunctionCall","src":"10680:53:15"},"variableNames":[{"name":"value0","nativeSrc":"10670:6:15","nodeType":"YulIdentifier","src":"10670:6:15"}]}]},{"nativeSrc":"10753:118:15","nodeType":"YulBlock","src":"10753:118:15","statements":[{"nativeSrc":"10768:16:15","nodeType":"YulVariableDeclaration","src":"10768:16:15","value":{"kind":"number","nativeSrc":"10782:2:15","nodeType":"YulLiteral","src":"10782:2:15","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"10772:6:15","nodeType":"YulTypedName","src":"10772:6:15","type":""}]},{"nativeSrc":"10798:63:15","nodeType":"YulAssignment","src":"10798:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10833:9:15","nodeType":"YulIdentifier","src":"10833:9:15"},{"name":"offset","nativeSrc":"10844:6:15","nodeType":"YulIdentifier","src":"10844:6:15"}],"functionName":{"name":"add","nativeSrc":"10829:3:15","nodeType":"YulIdentifier","src":"10829:3:15"},"nativeSrc":"10829:22:15","nodeType":"YulFunctionCall","src":"10829:22:15"},{"name":"dataEnd","nativeSrc":"10853:7:15","nodeType":"YulIdentifier","src":"10853:7:15"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10808:20:15","nodeType":"YulIdentifier","src":"10808:20:15"},"nativeSrc":"10808:53:15","nodeType":"YulFunctionCall","src":"10808:53:15"},"variableNames":[{"name":"value1","nativeSrc":"10798:6:15","nodeType":"YulIdentifier","src":"10798:6:15"}]}]},{"nativeSrc":"10881:118:15","nodeType":"YulBlock","src":"10881:118:15","statements":[{"nativeSrc":"10896:16:15","nodeType":"YulVariableDeclaration","src":"10896:16:15","value":{"kind":"number","nativeSrc":"10910:2:15","nodeType":"YulLiteral","src":"10910:2:15","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"10900:6:15","nodeType":"YulTypedName","src":"10900:6:15","type":""}]},{"nativeSrc":"10926:63:15","nodeType":"YulAssignment","src":"10926:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10961:9:15","nodeType":"YulIdentifier","src":"10961:9:15"},{"name":"offset","nativeSrc":"10972:6:15","nodeType":"YulIdentifier","src":"10972:6:15"}],"functionName":{"name":"add","nativeSrc":"10957:3:15","nodeType":"YulIdentifier","src":"10957:3:15"},"nativeSrc":"10957:22:15","nodeType":"YulFunctionCall","src":"10957:22:15"},{"name":"dataEnd","nativeSrc":"10981:7:15","nodeType":"YulIdentifier","src":"10981:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"10936:20:15","nodeType":"YulIdentifier","src":"10936:20:15"},"nativeSrc":"10936:53:15","nodeType":"YulFunctionCall","src":"10936:53:15"},"variableNames":[{"name":"value2","nativeSrc":"10926:6:15","nodeType":"YulIdentifier","src":"10926:6:15"}]}]},{"nativeSrc":"11009:118:15","nodeType":"YulBlock","src":"11009:118:15","statements":[{"nativeSrc":"11024:16:15","nodeType":"YulVariableDeclaration","src":"11024:16:15","value":{"kind":"number","nativeSrc":"11038:2:15","nodeType":"YulLiteral","src":"11038:2:15","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"11028:6:15","nodeType":"YulTypedName","src":"11028:6:15","type":""}]},{"nativeSrc":"11054:63:15","nodeType":"YulAssignment","src":"11054:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11089:9:15","nodeType":"YulIdentifier","src":"11089:9:15"},{"name":"offset","nativeSrc":"11100:6:15","nodeType":"YulIdentifier","src":"11100:6:15"}],"functionName":{"name":"add","nativeSrc":"11085:3:15","nodeType":"YulIdentifier","src":"11085:3:15"},"nativeSrc":"11085:22:15","nodeType":"YulFunctionCall","src":"11085:22:15"},{"name":"dataEnd","nativeSrc":"11109:7:15","nodeType":"YulIdentifier","src":"11109:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"11064:20:15","nodeType":"YulIdentifier","src":"11064:20:15"},"nativeSrc":"11064:53:15","nodeType":"YulFunctionCall","src":"11064:53:15"},"variableNames":[{"name":"value3","nativeSrc":"11054:6:15","nodeType":"YulIdentifier","src":"11054:6:15"}]}]},{"nativeSrc":"11137:119:15","nodeType":"YulBlock","src":"11137:119:15","statements":[{"nativeSrc":"11152:17:15","nodeType":"YulVariableDeclaration","src":"11152:17:15","value":{"kind":"number","nativeSrc":"11166:3:15","nodeType":"YulLiteral","src":"11166:3:15","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"11156:6:15","nodeType":"YulTypedName","src":"11156:6:15","type":""}]},{"nativeSrc":"11183:63:15","nodeType":"YulAssignment","src":"11183:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11218:9:15","nodeType":"YulIdentifier","src":"11218:9:15"},{"name":"offset","nativeSrc":"11229:6:15","nodeType":"YulIdentifier","src":"11229:6:15"}],"functionName":{"name":"add","nativeSrc":"11214:3:15","nodeType":"YulIdentifier","src":"11214:3:15"},"nativeSrc":"11214:22:15","nodeType":"YulFunctionCall","src":"11214:22:15"},{"name":"dataEnd","nativeSrc":"11238:7:15","nodeType":"YulIdentifier","src":"11238:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"11193:20:15","nodeType":"YulIdentifier","src":"11193:20:15"},"nativeSrc":"11193:53:15","nodeType":"YulFunctionCall","src":"11193:53:15"},"variableNames":[{"name":"value4","nativeSrc":"11183:6:15","nodeType":"YulIdentifier","src":"11183:6:15"}]}]},{"nativeSrc":"11266:119:15","nodeType":"YulBlock","src":"11266:119:15","statements":[{"nativeSrc":"11281:17:15","nodeType":"YulVariableDeclaration","src":"11281:17:15","value":{"kind":"number","nativeSrc":"11295:3:15","nodeType":"YulLiteral","src":"11295:3:15","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"11285:6:15","nodeType":"YulTypedName","src":"11285:6:15","type":""}]},{"nativeSrc":"11312:63:15","nodeType":"YulAssignment","src":"11312:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11347:9:15","nodeType":"YulIdentifier","src":"11347:9:15"},{"name":"offset","nativeSrc":"11358:6:15","nodeType":"YulIdentifier","src":"11358:6:15"}],"functionName":{"name":"add","nativeSrc":"11343:3:15","nodeType":"YulIdentifier","src":"11343:3:15"},"nativeSrc":"11343:22:15","nodeType":"YulFunctionCall","src":"11343:22:15"},{"name":"dataEnd","nativeSrc":"11367:7:15","nodeType":"YulIdentifier","src":"11367:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"11322:20:15","nodeType":"YulIdentifier","src":"11322:20:15"},"nativeSrc":"11322:53:15","nodeType":"YulFunctionCall","src":"11322:53:15"},"variableNames":[{"name":"value5","nativeSrc":"11312:6:15","nodeType":"YulIdentifier","src":"11312:6:15"}]}]},{"nativeSrc":"11395:119:15","nodeType":"YulBlock","src":"11395:119:15","statements":[{"nativeSrc":"11410:17:15","nodeType":"YulVariableDeclaration","src":"11410:17:15","value":{"kind":"number","nativeSrc":"11424:3:15","nodeType":"YulLiteral","src":"11424:3:15","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"11414:6:15","nodeType":"YulTypedName","src":"11414:6:15","type":""}]},{"nativeSrc":"11441:63:15","nodeType":"YulAssignment","src":"11441:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11476:9:15","nodeType":"YulIdentifier","src":"11476:9:15"},{"name":"offset","nativeSrc":"11487:6:15","nodeType":"YulIdentifier","src":"11487:6:15"}],"functionName":{"name":"add","nativeSrc":"11472:3:15","nodeType":"YulIdentifier","src":"11472:3:15"},"nativeSrc":"11472:22:15","nodeType":"YulFunctionCall","src":"11472:22:15"},{"name":"dataEnd","nativeSrc":"11496:7:15","nodeType":"YulIdentifier","src":"11496:7:15"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11451:20:15","nodeType":"YulIdentifier","src":"11451:20:15"},"nativeSrc":"11451:53:15","nodeType":"YulFunctionCall","src":"11451:53:15"},"variableNames":[{"name":"value6","nativeSrc":"11441:6:15","nodeType":"YulIdentifier","src":"11441:6:15"}]}]},{"nativeSrc":"11524:119:15","nodeType":"YulBlock","src":"11524:119:15","statements":[{"nativeSrc":"11539:17:15","nodeType":"YulVariableDeclaration","src":"11539:17:15","value":{"kind":"number","nativeSrc":"11553:3:15","nodeType":"YulLiteral","src":"11553:3:15","type":"","value":"224"},"variables":[{"name":"offset","nativeSrc":"11543:6:15","nodeType":"YulTypedName","src":"11543:6:15","type":""}]},{"nativeSrc":"11570:63:15","nodeType":"YulAssignment","src":"11570:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11605:9:15","nodeType":"YulIdentifier","src":"11605:9:15"},{"name":"offset","nativeSrc":"11616:6:15","nodeType":"YulIdentifier","src":"11616:6:15"}],"functionName":{"name":"add","nativeSrc":"11601:3:15","nodeType":"YulIdentifier","src":"11601:3:15"},"nativeSrc":"11601:22:15","nodeType":"YulFunctionCall","src":"11601:22:15"},{"name":"dataEnd","nativeSrc":"11625:7:15","nodeType":"YulIdentifier","src":"11625:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"11580:20:15","nodeType":"YulIdentifier","src":"11580:20:15"},"nativeSrc":"11580:53:15","nodeType":"YulFunctionCall","src":"11580:53:15"},"variableNames":[{"name":"value7","nativeSrc":"11570:6:15","nodeType":"YulIdentifier","src":"11570:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256","nativeSrc":"10301:1349:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10400:9:15","nodeType":"YulTypedName","src":"10400:9:15","type":""},{"name":"dataEnd","nativeSrc":"10411:7:15","nodeType":"YulTypedName","src":"10411:7:15","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10423:6:15","nodeType":"YulTypedName","src":"10423:6:15","type":""},{"name":"value1","nativeSrc":"10431:6:15","nodeType":"YulTypedName","src":"10431:6:15","type":""},{"name":"value2","nativeSrc":"10439:6:15","nodeType":"YulTypedName","src":"10439:6:15","type":""},{"name":"value3","nativeSrc":"10447:6:15","nodeType":"YulTypedName","src":"10447:6:15","type":""},{"name":"value4","nativeSrc":"10455:6:15","nodeType":"YulTypedName","src":"10455:6:15","type":""},{"name":"value5","nativeSrc":"10463:6:15","nodeType":"YulTypedName","src":"10463:6:15","type":""},{"name":"value6","nativeSrc":"10471:6:15","nodeType":"YulTypedName","src":"10471:6:15","type":""},{"name":"value7","nativeSrc":"10479:6:15","nodeType":"YulTypedName","src":"10479:6:15","type":""}],"src":"10301:1349:15"},{"body":{"nativeSrc":"11810:288:15","nodeType":"YulBlock","src":"11810:288:15","statements":[{"nativeSrc":"11820:26:15","nodeType":"YulAssignment","src":"11820:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"11832:9:15","nodeType":"YulIdentifier","src":"11832:9:15"},{"kind":"number","nativeSrc":"11843:2:15","nodeType":"YulLiteral","src":"11843:2:15","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11828:3:15","nodeType":"YulIdentifier","src":"11828:3:15"},"nativeSrc":"11828:18:15","nodeType":"YulFunctionCall","src":"11828:18:15"},"variableNames":[{"name":"tail","nativeSrc":"11820:4:15","nodeType":"YulIdentifier","src":"11820:4:15"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11900:6:15","nodeType":"YulIdentifier","src":"11900:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"11913:9:15","nodeType":"YulIdentifier","src":"11913:9:15"},{"kind":"number","nativeSrc":"11924:1:15","nodeType":"YulLiteral","src":"11924:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11909:3:15","nodeType":"YulIdentifier","src":"11909:3:15"},"nativeSrc":"11909:17:15","nodeType":"YulFunctionCall","src":"11909:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11856:43:15","nodeType":"YulIdentifier","src":"11856:43:15"},"nativeSrc":"11856:71:15","nodeType":"YulFunctionCall","src":"11856:71:15"},"nativeSrc":"11856:71:15","nodeType":"YulExpressionStatement","src":"11856:71:15"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"11981:6:15","nodeType":"YulIdentifier","src":"11981:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"11994:9:15","nodeType":"YulIdentifier","src":"11994:9:15"},{"kind":"number","nativeSrc":"12005:2:15","nodeType":"YulLiteral","src":"12005:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11990:3:15","nodeType":"YulIdentifier","src":"11990:3:15"},"nativeSrc":"11990:18:15","nodeType":"YulFunctionCall","src":"11990:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11937:43:15","nodeType":"YulIdentifier","src":"11937:43:15"},"nativeSrc":"11937:72:15","nodeType":"YulFunctionCall","src":"11937:72:15"},"nativeSrc":"11937:72:15","nodeType":"YulExpressionStatement","src":"11937:72:15"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12063:6:15","nodeType":"YulIdentifier","src":"12063:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"12076:9:15","nodeType":"YulIdentifier","src":"12076:9:15"},{"kind":"number","nativeSrc":"12087:2:15","nodeType":"YulLiteral","src":"12087:2:15","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12072:3:15","nodeType":"YulIdentifier","src":"12072:3:15"},"nativeSrc":"12072:18:15","nodeType":"YulFunctionCall","src":"12072:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12019:43:15","nodeType":"YulIdentifier","src":"12019:43:15"},"nativeSrc":"12019:72:15","nodeType":"YulFunctionCall","src":"12019:72:15"},"nativeSrc":"12019:72:15","nodeType":"YulExpressionStatement","src":"12019:72:15"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"11656:442:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11766:9:15","nodeType":"YulTypedName","src":"11766:9:15","type":""},{"name":"value2","nativeSrc":"11778:6:15","nodeType":"YulTypedName","src":"11778:6:15","type":""},{"name":"value1","nativeSrc":"11786:6:15","nodeType":"YulTypedName","src":"11786:6:15","type":""},{"name":"value0","nativeSrc":"11794:6:15","nodeType":"YulTypedName","src":"11794:6:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11805:4:15","nodeType":"YulTypedName","src":"11805:4:15","type":""}],"src":"11656:442:15"},{"body":{"nativeSrc":"12210:54:15","nodeType":"YulBlock","src":"12210:54:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"12232:6:15","nodeType":"YulIdentifier","src":"12232:6:15"},{"kind":"number","nativeSrc":"12240:1:15","nodeType":"YulLiteral","src":"12240:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12228:3:15","nodeType":"YulIdentifier","src":"12228:3:15"},"nativeSrc":"12228:14:15","nodeType":"YulFunctionCall","src":"12228:14:15"},{"hexValue":"5a65726f20696e707574","kind":"string","nativeSrc":"12244:12:15","nodeType":"YulLiteral","src":"12244:12:15","type":"","value":"Zero input"}],"functionName":{"name":"mstore","nativeSrc":"12221:6:15","nodeType":"YulIdentifier","src":"12221:6:15"},"nativeSrc":"12221:36:15","nodeType":"YulFunctionCall","src":"12221:36:15"},"nativeSrc":"12221:36:15","nodeType":"YulExpressionStatement","src":"12221:36:15"}]},"name":"store_literal_in_memory_dc186d373dd540cb9fb96bc11c9900e230b3d537c77cb1630f42b8b4fd4a54f4","nativeSrc":"12104:160:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"12202:6:15","nodeType":"YulTypedName","src":"12202:6:15","type":""}],"src":"12104:160:15"},{"body":{"nativeSrc":"12416:220:15","nodeType":"YulBlock","src":"12416:220:15","statements":[{"nativeSrc":"12426:74:15","nodeType":"YulAssignment","src":"12426:74:15","value":{"arguments":[{"name":"pos","nativeSrc":"12492:3:15","nodeType":"YulIdentifier","src":"12492:3:15"},{"kind":"number","nativeSrc":"12497:2:15","nodeType":"YulLiteral","src":"12497:2:15","type":"","value":"10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"12433:58:15","nodeType":"YulIdentifier","src":"12433:58:15"},"nativeSrc":"12433:67:15","nodeType":"YulFunctionCall","src":"12433:67:15"},"variableNames":[{"name":"pos","nativeSrc":"12426:3:15","nodeType":"YulIdentifier","src":"12426:3:15"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"12598:3:15","nodeType":"YulIdentifier","src":"12598:3:15"}],"functionName":{"name":"store_literal_in_memory_dc186d373dd540cb9fb96bc11c9900e230b3d537c77cb1630f42b8b4fd4a54f4","nativeSrc":"12509:88:15","nodeType":"YulIdentifier","src":"12509:88:15"},"nativeSrc":"12509:93:15","nodeType":"YulFunctionCall","src":"12509:93:15"},"nativeSrc":"12509:93:15","nodeType":"YulExpressionStatement","src":"12509:93:15"},{"nativeSrc":"12611:19:15","nodeType":"YulAssignment","src":"12611:19:15","value":{"arguments":[{"name":"pos","nativeSrc":"12622:3:15","nodeType":"YulIdentifier","src":"12622:3:15"},{"kind":"number","nativeSrc":"12627:2:15","nodeType":"YulLiteral","src":"12627:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12618:3:15","nodeType":"YulIdentifier","src":"12618:3:15"},"nativeSrc":"12618:12:15","nodeType":"YulFunctionCall","src":"12618:12:15"},"variableNames":[{"name":"end","nativeSrc":"12611:3:15","nodeType":"YulIdentifier","src":"12611:3:15"}]}]},"name":"abi_encode_t_stringliteral_dc186d373dd540cb9fb96bc11c9900e230b3d537c77cb1630f42b8b4fd4a54f4_to_t_string_memory_ptr_fromStack","nativeSrc":"12270:366:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12404:3:15","nodeType":"YulTypedName","src":"12404:3:15","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12412:3:15","nodeType":"YulTypedName","src":"12412:3:15","type":""}],"src":"12270:366:15"},{"body":{"nativeSrc":"12813:248:15","nodeType":"YulBlock","src":"12813:248:15","statements":[{"nativeSrc":"12823:26:15","nodeType":"YulAssignment","src":"12823:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"12835:9:15","nodeType":"YulIdentifier","src":"12835:9:15"},{"kind":"number","nativeSrc":"12846:2:15","nodeType":"YulLiteral","src":"12846:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12831:3:15","nodeType":"YulIdentifier","src":"12831:3:15"},"nativeSrc":"12831:18:15","nodeType":"YulFunctionCall","src":"12831:18:15"},"variableNames":[{"name":"tail","nativeSrc":"12823:4:15","nodeType":"YulIdentifier","src":"12823:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12870:9:15","nodeType":"YulIdentifier","src":"12870:9:15"},{"kind":"number","nativeSrc":"12881:1:15","nodeType":"YulLiteral","src":"12881:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12866:3:15","nodeType":"YulIdentifier","src":"12866:3:15"},"nativeSrc":"12866:17:15","nodeType":"YulFunctionCall","src":"12866:17:15"},{"arguments":[{"name":"tail","nativeSrc":"12889:4:15","nodeType":"YulIdentifier","src":"12889:4:15"},{"name":"headStart","nativeSrc":"12895:9:15","nodeType":"YulIdentifier","src":"12895:9:15"}],"functionName":{"name":"sub","nativeSrc":"12885:3:15","nodeType":"YulIdentifier","src":"12885:3:15"},"nativeSrc":"12885:20:15","nodeType":"YulFunctionCall","src":"12885:20:15"}],"functionName":{"name":"mstore","nativeSrc":"12859:6:15","nodeType":"YulIdentifier","src":"12859:6:15"},"nativeSrc":"12859:47:15","nodeType":"YulFunctionCall","src":"12859:47:15"},"nativeSrc":"12859:47:15","nodeType":"YulExpressionStatement","src":"12859:47:15"},{"nativeSrc":"12915:139:15","nodeType":"YulAssignment","src":"12915:139:15","value":{"arguments":[{"name":"tail","nativeSrc":"13049:4:15","nodeType":"YulIdentifier","src":"13049:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_dc186d373dd540cb9fb96bc11c9900e230b3d537c77cb1630f42b8b4fd4a54f4_to_t_string_memory_ptr_fromStack","nativeSrc":"12923:124:15","nodeType":"YulIdentifier","src":"12923:124:15"},"nativeSrc":"12923:131:15","nodeType":"YulFunctionCall","src":"12923:131:15"},"variableNames":[{"name":"tail","nativeSrc":"12915:4:15","nodeType":"YulIdentifier","src":"12915:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_dc186d373dd540cb9fb96bc11c9900e230b3d537c77cb1630f42b8b4fd4a54f4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12642:419:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12793:9:15","nodeType":"YulTypedName","src":"12793:9:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12808:4:15","nodeType":"YulTypedName","src":"12808:4:15","type":""}],"src":"12642:419:15"},{"body":{"nativeSrc":"13173:58:15","nodeType":"YulBlock","src":"13173:58:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"13195:6:15","nodeType":"YulIdentifier","src":"13195:6:15"},{"kind":"number","nativeSrc":"13203:1:15","nodeType":"YulLiteral","src":"13203:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13191:3:15","nodeType":"YulIdentifier","src":"13191:3:15"},"nativeSrc":"13191:14:15","nodeType":"YulFunctionCall","src":"13191:14:15"},{"hexValue":"456d707479207265736572766573","kind":"string","nativeSrc":"13207:16:15","nodeType":"YulLiteral","src":"13207:16:15","type":"","value":"Empty reserves"}],"functionName":{"name":"mstore","nativeSrc":"13184:6:15","nodeType":"YulIdentifier","src":"13184:6:15"},"nativeSrc":"13184:40:15","nodeType":"YulFunctionCall","src":"13184:40:15"},"nativeSrc":"13184:40:15","nodeType":"YulExpressionStatement","src":"13184:40:15"}]},"name":"store_literal_in_memory_971080a6c04a1c3be1ce1e8552e0d8e01640a734e3641d0b551c42f40a93241a","nativeSrc":"13067:164:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"13165:6:15","nodeType":"YulTypedName","src":"13165:6:15","type":""}],"src":"13067:164:15"},{"body":{"nativeSrc":"13383:220:15","nodeType":"YulBlock","src":"13383:220:15","statements":[{"nativeSrc":"13393:74:15","nodeType":"YulAssignment","src":"13393:74:15","value":{"arguments":[{"name":"pos","nativeSrc":"13459:3:15","nodeType":"YulIdentifier","src":"13459:3:15"},{"kind":"number","nativeSrc":"13464:2:15","nodeType":"YulLiteral","src":"13464:2:15","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"13400:58:15","nodeType":"YulIdentifier","src":"13400:58:15"},"nativeSrc":"13400:67:15","nodeType":"YulFunctionCall","src":"13400:67:15"},"variableNames":[{"name":"pos","nativeSrc":"13393:3:15","nodeType":"YulIdentifier","src":"13393:3:15"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"13565:3:15","nodeType":"YulIdentifier","src":"13565:3:15"}],"functionName":{"name":"store_literal_in_memory_971080a6c04a1c3be1ce1e8552e0d8e01640a734e3641d0b551c42f40a93241a","nativeSrc":"13476:88:15","nodeType":"YulIdentifier","src":"13476:88:15"},"nativeSrc":"13476:93:15","nodeType":"YulFunctionCall","src":"13476:93:15"},"nativeSrc":"13476:93:15","nodeType":"YulExpressionStatement","src":"13476:93:15"},{"nativeSrc":"13578:19:15","nodeType":"YulAssignment","src":"13578:19:15","value":{"arguments":[{"name":"pos","nativeSrc":"13589:3:15","nodeType":"YulIdentifier","src":"13589:3:15"},{"kind":"number","nativeSrc":"13594:2:15","nodeType":"YulLiteral","src":"13594:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13585:3:15","nodeType":"YulIdentifier","src":"13585:3:15"},"nativeSrc":"13585:12:15","nodeType":"YulFunctionCall","src":"13585:12:15"},"variableNames":[{"name":"end","nativeSrc":"13578:3:15","nodeType":"YulIdentifier","src":"13578:3:15"}]}]},"name":"abi_encode_t_stringliteral_971080a6c04a1c3be1ce1e8552e0d8e01640a734e3641d0b551c42f40a93241a_to_t_string_memory_ptr_fromStack","nativeSrc":"13237:366:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13371:3:15","nodeType":"YulTypedName","src":"13371:3:15","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13379:3:15","nodeType":"YulTypedName","src":"13379:3:15","type":""}],"src":"13237:366:15"},{"body":{"nativeSrc":"13780:248:15","nodeType":"YulBlock","src":"13780:248:15","statements":[{"nativeSrc":"13790:26:15","nodeType":"YulAssignment","src":"13790:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"13802:9:15","nodeType":"YulIdentifier","src":"13802:9:15"},{"kind":"number","nativeSrc":"13813:2:15","nodeType":"YulLiteral","src":"13813:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13798:3:15","nodeType":"YulIdentifier","src":"13798:3:15"},"nativeSrc":"13798:18:15","nodeType":"YulFunctionCall","src":"13798:18:15"},"variableNames":[{"name":"tail","nativeSrc":"13790:4:15","nodeType":"YulIdentifier","src":"13790:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13837:9:15","nodeType":"YulIdentifier","src":"13837:9:15"},{"kind":"number","nativeSrc":"13848:1:15","nodeType":"YulLiteral","src":"13848:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13833:3:15","nodeType":"YulIdentifier","src":"13833:3:15"},"nativeSrc":"13833:17:15","nodeType":"YulFunctionCall","src":"13833:17:15"},{"arguments":[{"name":"tail","nativeSrc":"13856:4:15","nodeType":"YulIdentifier","src":"13856:4:15"},{"name":"headStart","nativeSrc":"13862:9:15","nodeType":"YulIdentifier","src":"13862:9:15"}],"functionName":{"name":"sub","nativeSrc":"13852:3:15","nodeType":"YulIdentifier","src":"13852:3:15"},"nativeSrc":"13852:20:15","nodeType":"YulFunctionCall","src":"13852:20:15"}],"functionName":{"name":"mstore","nativeSrc":"13826:6:15","nodeType":"YulIdentifier","src":"13826:6:15"},"nativeSrc":"13826:47:15","nodeType":"YulFunctionCall","src":"13826:47:15"},"nativeSrc":"13826:47:15","nodeType":"YulExpressionStatement","src":"13826:47:15"},{"nativeSrc":"13882:139:15","nodeType":"YulAssignment","src":"13882:139:15","value":{"arguments":[{"name":"tail","nativeSrc":"14016:4:15","nodeType":"YulIdentifier","src":"14016:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_971080a6c04a1c3be1ce1e8552e0d8e01640a734e3641d0b551c42f40a93241a_to_t_string_memory_ptr_fromStack","nativeSrc":"13890:124:15","nodeType":"YulIdentifier","src":"13890:124:15"},"nativeSrc":"13890:131:15","nodeType":"YulFunctionCall","src":"13890:131:15"},"variableNames":[{"name":"tail","nativeSrc":"13882:4:15","nodeType":"YulIdentifier","src":"13882:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_971080a6c04a1c3be1ce1e8552e0d8e01640a734e3641d0b551c42f40a93241a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13609:419:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13760:9:15","nodeType":"YulTypedName","src":"13760:9:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13775:4:15","nodeType":"YulTypedName","src":"13775:4:15","type":""}],"src":"13609:419:15"},{"body":{"nativeSrc":"14062:152:15","nodeType":"YulBlock","src":"14062:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14079:1:15","nodeType":"YulLiteral","src":"14079:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"14082:77:15","nodeType":"YulLiteral","src":"14082:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"14072:6:15","nodeType":"YulIdentifier","src":"14072:6:15"},"nativeSrc":"14072:88:15","nodeType":"YulFunctionCall","src":"14072:88:15"},"nativeSrc":"14072:88:15","nodeType":"YulExpressionStatement","src":"14072:88:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14176:1:15","nodeType":"YulLiteral","src":"14176:1:15","type":"","value":"4"},{"kind":"number","nativeSrc":"14179:4:15","nodeType":"YulLiteral","src":"14179:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"14169:6:15","nodeType":"YulIdentifier","src":"14169:6:15"},"nativeSrc":"14169:15:15","nodeType":"YulFunctionCall","src":"14169:15:15"},"nativeSrc":"14169:15:15","nodeType":"YulExpressionStatement","src":"14169:15:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14200:1:15","nodeType":"YulLiteral","src":"14200:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"14203:4:15","nodeType":"YulLiteral","src":"14203:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"14193:6:15","nodeType":"YulIdentifier","src":"14193:6:15"},"nativeSrc":"14193:15:15","nodeType":"YulFunctionCall","src":"14193:15:15"},"nativeSrc":"14193:15:15","nodeType":"YulExpressionStatement","src":"14193:15:15"}]},"name":"panic_error_0x11","nativeSrc":"14034:180:15","nodeType":"YulFunctionDefinition","src":"14034:180:15"},{"body":{"nativeSrc":"14264:147:15","nodeType":"YulBlock","src":"14264:147:15","statements":[{"nativeSrc":"14274:25:15","nodeType":"YulAssignment","src":"14274:25:15","value":{"arguments":[{"name":"x","nativeSrc":"14297:1:15","nodeType":"YulIdentifier","src":"14297:1:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14279:17:15","nodeType":"YulIdentifier","src":"14279:17:15"},"nativeSrc":"14279:20:15","nodeType":"YulFunctionCall","src":"14279:20:15"},"variableNames":[{"name":"x","nativeSrc":"14274:1:15","nodeType":"YulIdentifier","src":"14274:1:15"}]},{"nativeSrc":"14308:25:15","nodeType":"YulAssignment","src":"14308:25:15","value":{"arguments":[{"name":"y","nativeSrc":"14331:1:15","nodeType":"YulIdentifier","src":"14331:1:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14313:17:15","nodeType":"YulIdentifier","src":"14313:17:15"},"nativeSrc":"14313:20:15","nodeType":"YulFunctionCall","src":"14313:20:15"},"variableNames":[{"name":"y","nativeSrc":"14308:1:15","nodeType":"YulIdentifier","src":"14308:1:15"}]},{"nativeSrc":"14342:16:15","nodeType":"YulAssignment","src":"14342:16:15","value":{"arguments":[{"name":"x","nativeSrc":"14353:1:15","nodeType":"YulIdentifier","src":"14353:1:15"},{"name":"y","nativeSrc":"14356:1:15","nodeType":"YulIdentifier","src":"14356:1:15"}],"functionName":{"name":"add","nativeSrc":"14349:3:15","nodeType":"YulIdentifier","src":"14349:3:15"},"nativeSrc":"14349:9:15","nodeType":"YulFunctionCall","src":"14349:9:15"},"variableNames":[{"name":"sum","nativeSrc":"14342:3:15","nodeType":"YulIdentifier","src":"14342:3:15"}]},{"body":{"nativeSrc":"14382:22:15","nodeType":"YulBlock","src":"14382:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"14384:16:15","nodeType":"YulIdentifier","src":"14384:16:15"},"nativeSrc":"14384:18:15","nodeType":"YulFunctionCall","src":"14384:18:15"},"nativeSrc":"14384:18:15","nodeType":"YulExpressionStatement","src":"14384:18:15"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"14374:1:15","nodeType":"YulIdentifier","src":"14374:1:15"},{"name":"sum","nativeSrc":"14377:3:15","nodeType":"YulIdentifier","src":"14377:3:15"}],"functionName":{"name":"gt","nativeSrc":"14371:2:15","nodeType":"YulIdentifier","src":"14371:2:15"},"nativeSrc":"14371:10:15","nodeType":"YulFunctionCall","src":"14371:10:15"},"nativeSrc":"14368:36:15","nodeType":"YulIf","src":"14368:36:15"}]},"name":"checked_add_t_uint256","nativeSrc":"14220:191:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"14251:1:15","nodeType":"YulTypedName","src":"14251:1:15","type":""},{"name":"y","nativeSrc":"14254:1:15","nodeType":"YulTypedName","src":"14254:1:15","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"14260:3:15","nodeType":"YulTypedName","src":"14260:3:15","type":""}],"src":"14220:191:15"},{"body":{"nativeSrc":"14465:362:15","nodeType":"YulBlock","src":"14465:362:15","statements":[{"nativeSrc":"14475:25:15","nodeType":"YulAssignment","src":"14475:25:15","value":{"arguments":[{"name":"x","nativeSrc":"14498:1:15","nodeType":"YulIdentifier","src":"14498:1:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14480:17:15","nodeType":"YulIdentifier","src":"14480:17:15"},"nativeSrc":"14480:20:15","nodeType":"YulFunctionCall","src":"14480:20:15"},"variableNames":[{"name":"x","nativeSrc":"14475:1:15","nodeType":"YulIdentifier","src":"14475:1:15"}]},{"nativeSrc":"14509:25:15","nodeType":"YulAssignment","src":"14509:25:15","value":{"arguments":[{"name":"y","nativeSrc":"14532:1:15","nodeType":"YulIdentifier","src":"14532:1:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14514:17:15","nodeType":"YulIdentifier","src":"14514:17:15"},"nativeSrc":"14514:20:15","nodeType":"YulFunctionCall","src":"14514:20:15"},"variableNames":[{"name":"y","nativeSrc":"14509:1:15","nodeType":"YulIdentifier","src":"14509:1:15"}]},{"nativeSrc":"14543:28:15","nodeType":"YulVariableDeclaration","src":"14543:28:15","value":{"arguments":[{"name":"x","nativeSrc":"14566:1:15","nodeType":"YulIdentifier","src":"14566:1:15"},{"name":"y","nativeSrc":"14569:1:15","nodeType":"YulIdentifier","src":"14569:1:15"}],"functionName":{"name":"mul","nativeSrc":"14562:3:15","nodeType":"YulIdentifier","src":"14562:3:15"},"nativeSrc":"14562:9:15","nodeType":"YulFunctionCall","src":"14562:9:15"},"variables":[{"name":"product_raw","nativeSrc":"14547:11:15","nodeType":"YulTypedName","src":"14547:11:15","type":""}]},{"nativeSrc":"14580:41:15","nodeType":"YulAssignment","src":"14580:41:15","value":{"arguments":[{"name":"product_raw","nativeSrc":"14609:11:15","nodeType":"YulIdentifier","src":"14609:11:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14591:17:15","nodeType":"YulIdentifier","src":"14591:17:15"},"nativeSrc":"14591:30:15","nodeType":"YulFunctionCall","src":"14591:30:15"},"variableNames":[{"name":"product","nativeSrc":"14580:7:15","nodeType":"YulIdentifier","src":"14580:7:15"}]},{"body":{"nativeSrc":"14798:22:15","nodeType":"YulBlock","src":"14798:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"14800:16:15","nodeType":"YulIdentifier","src":"14800:16:15"},"nativeSrc":"14800:18:15","nodeType":"YulFunctionCall","src":"14800:18:15"},"nativeSrc":"14800:18:15","nodeType":"YulExpressionStatement","src":"14800:18:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"14731:1:15","nodeType":"YulIdentifier","src":"14731:1:15"}],"functionName":{"name":"iszero","nativeSrc":"14724:6:15","nodeType":"YulIdentifier","src":"14724:6:15"},"nativeSrc":"14724:9:15","nodeType":"YulFunctionCall","src":"14724:9:15"},{"arguments":[{"name":"y","nativeSrc":"14754:1:15","nodeType":"YulIdentifier","src":"14754:1:15"},{"arguments":[{"name":"product","nativeSrc":"14761:7:15","nodeType":"YulIdentifier","src":"14761:7:15"},{"name":"x","nativeSrc":"14770:1:15","nodeType":"YulIdentifier","src":"14770:1:15"}],"functionName":{"name":"div","nativeSrc":"14757:3:15","nodeType":"YulIdentifier","src":"14757:3:15"},"nativeSrc":"14757:15:15","nodeType":"YulFunctionCall","src":"14757:15:15"}],"functionName":{"name":"eq","nativeSrc":"14751:2:15","nodeType":"YulIdentifier","src":"14751:2:15"},"nativeSrc":"14751:22:15","nodeType":"YulFunctionCall","src":"14751:22:15"}],"functionName":{"name":"or","nativeSrc":"14704:2:15","nodeType":"YulIdentifier","src":"14704:2:15"},"nativeSrc":"14704:83:15","nodeType":"YulFunctionCall","src":"14704:83:15"}],"functionName":{"name":"iszero","nativeSrc":"14684:6:15","nodeType":"YulIdentifier","src":"14684:6:15"},"nativeSrc":"14684:113:15","nodeType":"YulFunctionCall","src":"14684:113:15"},"nativeSrc":"14681:139:15","nodeType":"YulIf","src":"14681:139:15"}]},"name":"checked_mul_t_uint256","nativeSrc":"14417:410:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"14448:1:15","nodeType":"YulTypedName","src":"14448:1:15","type":""},{"name":"y","nativeSrc":"14451:1:15","nodeType":"YulTypedName","src":"14451:1:15","type":""}],"returnVariables":[{"name":"product","nativeSrc":"14457:7:15","nodeType":"YulTypedName","src":"14457:7:15","type":""}],"src":"14417:410:15"},{"body":{"nativeSrc":"14861:152:15","nodeType":"YulBlock","src":"14861:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14878:1:15","nodeType":"YulLiteral","src":"14878:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"14881:77:15","nodeType":"YulLiteral","src":"14881:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"14871:6:15","nodeType":"YulIdentifier","src":"14871:6:15"},"nativeSrc":"14871:88:15","nodeType":"YulFunctionCall","src":"14871:88:15"},"nativeSrc":"14871:88:15","nodeType":"YulExpressionStatement","src":"14871:88:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14975:1:15","nodeType":"YulLiteral","src":"14975:1:15","type":"","value":"4"},{"kind":"number","nativeSrc":"14978:4:15","nodeType":"YulLiteral","src":"14978:4:15","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"14968:6:15","nodeType":"YulIdentifier","src":"14968:6:15"},"nativeSrc":"14968:15:15","nodeType":"YulFunctionCall","src":"14968:15:15"},"nativeSrc":"14968:15:15","nodeType":"YulExpressionStatement","src":"14968:15:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14999:1:15","nodeType":"YulLiteral","src":"14999:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"15002:4:15","nodeType":"YulLiteral","src":"15002:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"14992:6:15","nodeType":"YulIdentifier","src":"14992:6:15"},"nativeSrc":"14992:15:15","nodeType":"YulFunctionCall","src":"14992:15:15"},"nativeSrc":"14992:15:15","nodeType":"YulExpressionStatement","src":"14992:15:15"}]},"name":"panic_error_0x12","nativeSrc":"14833:180:15","nodeType":"YulFunctionDefinition","src":"14833:180:15"},{"body":{"nativeSrc":"15061:143:15","nodeType":"YulBlock","src":"15061:143:15","statements":[{"nativeSrc":"15071:25:15","nodeType":"YulAssignment","src":"15071:25:15","value":{"arguments":[{"name":"x","nativeSrc":"15094:1:15","nodeType":"YulIdentifier","src":"15094:1:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15076:17:15","nodeType":"YulIdentifier","src":"15076:17:15"},"nativeSrc":"15076:20:15","nodeType":"YulFunctionCall","src":"15076:20:15"},"variableNames":[{"name":"x","nativeSrc":"15071:1:15","nodeType":"YulIdentifier","src":"15071:1:15"}]},{"nativeSrc":"15105:25:15","nodeType":"YulAssignment","src":"15105:25:15","value":{"arguments":[{"name":"y","nativeSrc":"15128:1:15","nodeType":"YulIdentifier","src":"15128:1:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15110:17:15","nodeType":"YulIdentifier","src":"15110:17:15"},"nativeSrc":"15110:20:15","nodeType":"YulFunctionCall","src":"15110:20:15"},"variableNames":[{"name":"y","nativeSrc":"15105:1:15","nodeType":"YulIdentifier","src":"15105:1:15"}]},{"body":{"nativeSrc":"15152:22:15","nodeType":"YulBlock","src":"15152:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"15154:16:15","nodeType":"YulIdentifier","src":"15154:16:15"},"nativeSrc":"15154:18:15","nodeType":"YulFunctionCall","src":"15154:18:15"},"nativeSrc":"15154:18:15","nodeType":"YulExpressionStatement","src":"15154:18:15"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"15149:1:15","nodeType":"YulIdentifier","src":"15149:1:15"}],"functionName":{"name":"iszero","nativeSrc":"15142:6:15","nodeType":"YulIdentifier","src":"15142:6:15"},"nativeSrc":"15142:9:15","nodeType":"YulFunctionCall","src":"15142:9:15"},"nativeSrc":"15139:35:15","nodeType":"YulIf","src":"15139:35:15"},{"nativeSrc":"15184:14:15","nodeType":"YulAssignment","src":"15184:14:15","value":{"arguments":[{"name":"x","nativeSrc":"15193:1:15","nodeType":"YulIdentifier","src":"15193:1:15"},{"name":"y","nativeSrc":"15196:1:15","nodeType":"YulIdentifier","src":"15196:1:15"}],"functionName":{"name":"div","nativeSrc":"15189:3:15","nodeType":"YulIdentifier","src":"15189:3:15"},"nativeSrc":"15189:9:15","nodeType":"YulFunctionCall","src":"15189:9:15"},"variableNames":[{"name":"r","nativeSrc":"15184:1:15","nodeType":"YulIdentifier","src":"15184:1:15"}]}]},"name":"checked_div_t_uint256","nativeSrc":"15019:185:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"15050:1:15","nodeType":"YulTypedName","src":"15050:1:15","type":""},{"name":"y","nativeSrc":"15053:1:15","nodeType":"YulTypedName","src":"15053:1:15","type":""}],"returnVariables":[{"name":"r","nativeSrc":"15059:1:15","nodeType":"YulTypedName","src":"15059:1:15","type":""}],"src":"15019:185:15"},{"body":{"nativeSrc":"15238:152:15","nodeType":"YulBlock","src":"15238:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15255:1:15","nodeType":"YulLiteral","src":"15255:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"15258:77:15","nodeType":"YulLiteral","src":"15258:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"15248:6:15","nodeType":"YulIdentifier","src":"15248:6:15"},"nativeSrc":"15248:88:15","nodeType":"YulFunctionCall","src":"15248:88:15"},"nativeSrc":"15248:88:15","nodeType":"YulExpressionStatement","src":"15248:88:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15352:1:15","nodeType":"YulLiteral","src":"15352:1:15","type":"","value":"4"},{"kind":"number","nativeSrc":"15355:4:15","nodeType":"YulLiteral","src":"15355:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"15345:6:15","nodeType":"YulIdentifier","src":"15345:6:15"},"nativeSrc":"15345:15:15","nodeType":"YulFunctionCall","src":"15345:15:15"},"nativeSrc":"15345:15:15","nodeType":"YulExpressionStatement","src":"15345:15:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15376:1:15","nodeType":"YulLiteral","src":"15376:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"15379:4:15","nodeType":"YulLiteral","src":"15379:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"15369:6:15","nodeType":"YulIdentifier","src":"15369:6:15"},"nativeSrc":"15369:15:15","nodeType":"YulFunctionCall","src":"15369:15:15"},"nativeSrc":"15369:15:15","nodeType":"YulExpressionStatement","src":"15369:15:15"}]},"name":"panic_error_0x22","nativeSrc":"15210:180:15","nodeType":"YulFunctionDefinition","src":"15210:180:15"},{"body":{"nativeSrc":"15447:269:15","nodeType":"YulBlock","src":"15447:269:15","statements":[{"nativeSrc":"15457:22:15","nodeType":"YulAssignment","src":"15457:22:15","value":{"arguments":[{"name":"data","nativeSrc":"15471:4:15","nodeType":"YulIdentifier","src":"15471:4:15"},{"kind":"number","nativeSrc":"15477:1:15","nodeType":"YulLiteral","src":"15477:1:15","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"15467:3:15","nodeType":"YulIdentifier","src":"15467:3:15"},"nativeSrc":"15467:12:15","nodeType":"YulFunctionCall","src":"15467:12:15"},"variableNames":[{"name":"length","nativeSrc":"15457:6:15","nodeType":"YulIdentifier","src":"15457:6:15"}]},{"nativeSrc":"15488:38:15","nodeType":"YulVariableDeclaration","src":"15488:38:15","value":{"arguments":[{"name":"data","nativeSrc":"15518:4:15","nodeType":"YulIdentifier","src":"15518:4:15"},{"kind":"number","nativeSrc":"15524:1:15","nodeType":"YulLiteral","src":"15524:1:15","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"15514:3:15","nodeType":"YulIdentifier","src":"15514:3:15"},"nativeSrc":"15514:12:15","nodeType":"YulFunctionCall","src":"15514:12:15"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"15492:18:15","nodeType":"YulTypedName","src":"15492:18:15","type":""}]},{"body":{"nativeSrc":"15565:51:15","nodeType":"YulBlock","src":"15565:51:15","statements":[{"nativeSrc":"15579:27:15","nodeType":"YulAssignment","src":"15579:27:15","value":{"arguments":[{"name":"length","nativeSrc":"15593:6:15","nodeType":"YulIdentifier","src":"15593:6:15"},{"kind":"number","nativeSrc":"15601:4:15","nodeType":"YulLiteral","src":"15601:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"15589:3:15","nodeType":"YulIdentifier","src":"15589:3:15"},"nativeSrc":"15589:17:15","nodeType":"YulFunctionCall","src":"15589:17:15"},"variableNames":[{"name":"length","nativeSrc":"15579:6:15","nodeType":"YulIdentifier","src":"15579:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"15545:18:15","nodeType":"YulIdentifier","src":"15545:18:15"}],"functionName":{"name":"iszero","nativeSrc":"15538:6:15","nodeType":"YulIdentifier","src":"15538:6:15"},"nativeSrc":"15538:26:15","nodeType":"YulFunctionCall","src":"15538:26:15"},"nativeSrc":"15535:81:15","nodeType":"YulIf","src":"15535:81:15"},{"body":{"nativeSrc":"15668:42:15","nodeType":"YulBlock","src":"15668:42:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"15682:16:15","nodeType":"YulIdentifier","src":"15682:16:15"},"nativeSrc":"15682:18:15","nodeType":"YulFunctionCall","src":"15682:18:15"},"nativeSrc":"15682:18:15","nodeType":"YulExpressionStatement","src":"15682:18:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"15632:18:15","nodeType":"YulIdentifier","src":"15632:18:15"},{"arguments":[{"name":"length","nativeSrc":"15655:6:15","nodeType":"YulIdentifier","src":"15655:6:15"},{"kind":"number","nativeSrc":"15663:2:15","nodeType":"YulLiteral","src":"15663:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"15652:2:15","nodeType":"YulIdentifier","src":"15652:2:15"},"nativeSrc":"15652:14:15","nodeType":"YulFunctionCall","src":"15652:14:15"}],"functionName":{"name":"eq","nativeSrc":"15629:2:15","nodeType":"YulIdentifier","src":"15629:2:15"},"nativeSrc":"15629:38:15","nodeType":"YulFunctionCall","src":"15629:38:15"},"nativeSrc":"15626:84:15","nodeType":"YulIf","src":"15626:84:15"}]},"name":"extract_byte_array_length","nativeSrc":"15396:320:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"15431:4:15","nodeType":"YulTypedName","src":"15431:4:15","type":""}],"returnVariables":[{"name":"length","nativeSrc":"15440:6:15","nodeType":"YulTypedName","src":"15440:6:15","type":""}],"src":"15396:320:15"},{"body":{"nativeSrc":"15828:51:15","nodeType":"YulBlock","src":"15828:51:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"15850:6:15","nodeType":"YulIdentifier","src":"15850:6:15"},{"kind":"number","nativeSrc":"15858:1:15","nodeType":"YulLiteral","src":"15858:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15846:3:15","nodeType":"YulIdentifier","src":"15846:3:15"},"nativeSrc":"15846:14:15","nodeType":"YulFunctionCall","src":"15846:14:15"},{"hexValue":"45787069726564","kind":"string","nativeSrc":"15862:9:15","nodeType":"YulLiteral","src":"15862:9:15","type":"","value":"Expired"}],"functionName":{"name":"mstore","nativeSrc":"15839:6:15","nodeType":"YulIdentifier","src":"15839:6:15"},"nativeSrc":"15839:33:15","nodeType":"YulFunctionCall","src":"15839:33:15"},"nativeSrc":"15839:33:15","nodeType":"YulExpressionStatement","src":"15839:33:15"}]},"name":"store_literal_in_memory_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13","nativeSrc":"15722:157:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"15820:6:15","nodeType":"YulTypedName","src":"15820:6:15","type":""}],"src":"15722:157:15"},{"body":{"nativeSrc":"16031:219:15","nodeType":"YulBlock","src":"16031:219:15","statements":[{"nativeSrc":"16041:73:15","nodeType":"YulAssignment","src":"16041:73:15","value":{"arguments":[{"name":"pos","nativeSrc":"16107:3:15","nodeType":"YulIdentifier","src":"16107:3:15"},{"kind":"number","nativeSrc":"16112:1:15","nodeType":"YulLiteral","src":"16112:1:15","type":"","value":"7"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"16048:58:15","nodeType":"YulIdentifier","src":"16048:58:15"},"nativeSrc":"16048:66:15","nodeType":"YulFunctionCall","src":"16048:66:15"},"variableNames":[{"name":"pos","nativeSrc":"16041:3:15","nodeType":"YulIdentifier","src":"16041:3:15"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"16212:3:15","nodeType":"YulIdentifier","src":"16212:3:15"}],"functionName":{"name":"store_literal_in_memory_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13","nativeSrc":"16123:88:15","nodeType":"YulIdentifier","src":"16123:88:15"},"nativeSrc":"16123:93:15","nodeType":"YulFunctionCall","src":"16123:93:15"},"nativeSrc":"16123:93:15","nodeType":"YulExpressionStatement","src":"16123:93:15"},{"nativeSrc":"16225:19:15","nodeType":"YulAssignment","src":"16225:19:15","value":{"arguments":[{"name":"pos","nativeSrc":"16236:3:15","nodeType":"YulIdentifier","src":"16236:3:15"},{"kind":"number","nativeSrc":"16241:2:15","nodeType":"YulLiteral","src":"16241:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16232:3:15","nodeType":"YulIdentifier","src":"16232:3:15"},"nativeSrc":"16232:12:15","nodeType":"YulFunctionCall","src":"16232:12:15"},"variableNames":[{"name":"end","nativeSrc":"16225:3:15","nodeType":"YulIdentifier","src":"16225:3:15"}]}]},"name":"abi_encode_t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13_to_t_string_memory_ptr_fromStack","nativeSrc":"15885:365:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16019:3:15","nodeType":"YulTypedName","src":"16019:3:15","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16027:3:15","nodeType":"YulTypedName","src":"16027:3:15","type":""}],"src":"15885:365:15"},{"body":{"nativeSrc":"16427:248:15","nodeType":"YulBlock","src":"16427:248:15","statements":[{"nativeSrc":"16437:26:15","nodeType":"YulAssignment","src":"16437:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"16449:9:15","nodeType":"YulIdentifier","src":"16449:9:15"},{"kind":"number","nativeSrc":"16460:2:15","nodeType":"YulLiteral","src":"16460:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16445:3:15","nodeType":"YulIdentifier","src":"16445:3:15"},"nativeSrc":"16445:18:15","nodeType":"YulFunctionCall","src":"16445:18:15"},"variableNames":[{"name":"tail","nativeSrc":"16437:4:15","nodeType":"YulIdentifier","src":"16437:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16484:9:15","nodeType":"YulIdentifier","src":"16484:9:15"},{"kind":"number","nativeSrc":"16495:1:15","nodeType":"YulLiteral","src":"16495:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16480:3:15","nodeType":"YulIdentifier","src":"16480:3:15"},"nativeSrc":"16480:17:15","nodeType":"YulFunctionCall","src":"16480:17:15"},{"arguments":[{"name":"tail","nativeSrc":"16503:4:15","nodeType":"YulIdentifier","src":"16503:4:15"},{"name":"headStart","nativeSrc":"16509:9:15","nodeType":"YulIdentifier","src":"16509:9:15"}],"functionName":{"name":"sub","nativeSrc":"16499:3:15","nodeType":"YulIdentifier","src":"16499:3:15"},"nativeSrc":"16499:20:15","nodeType":"YulFunctionCall","src":"16499:20:15"}],"functionName":{"name":"mstore","nativeSrc":"16473:6:15","nodeType":"YulIdentifier","src":"16473:6:15"},"nativeSrc":"16473:47:15","nodeType":"YulFunctionCall","src":"16473:47:15"},"nativeSrc":"16473:47:15","nodeType":"YulExpressionStatement","src":"16473:47:15"},{"nativeSrc":"16529:139:15","nodeType":"YulAssignment","src":"16529:139:15","value":{"arguments":[{"name":"tail","nativeSrc":"16663:4:15","nodeType":"YulIdentifier","src":"16663:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13_to_t_string_memory_ptr_fromStack","nativeSrc":"16537:124:15","nodeType":"YulIdentifier","src":"16537:124:15"},"nativeSrc":"16537:131:15","nodeType":"YulFunctionCall","src":"16537:131:15"},"variableNames":[{"name":"tail","nativeSrc":"16529:4:15","nodeType":"YulIdentifier","src":"16529:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16256:419:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16407:9:15","nodeType":"YulTypedName","src":"16407:9:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16422:4:15","nodeType":"YulTypedName","src":"16422:4:15","type":""}],"src":"16256:419:15"},{"body":{"nativeSrc":"16787:62:15","nodeType":"YulBlock","src":"16787:62:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"16809:6:15","nodeType":"YulIdentifier","src":"16809:6:15"},{"kind":"number","nativeSrc":"16817:1:15","nodeType":"YulLiteral","src":"16817:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16805:3:15","nodeType":"YulIdentifier","src":"16805:3:15"},"nativeSrc":"16805:14:15","nodeType":"YulFunctionCall","src":"16805:14:15"},{"hexValue":"4f6e6c7920322d746f6b656e207377617073","kind":"string","nativeSrc":"16821:20:15","nodeType":"YulLiteral","src":"16821:20:15","type":"","value":"Only 2-token swaps"}],"functionName":{"name":"mstore","nativeSrc":"16798:6:15","nodeType":"YulIdentifier","src":"16798:6:15"},"nativeSrc":"16798:44:15","nodeType":"YulFunctionCall","src":"16798:44:15"},"nativeSrc":"16798:44:15","nodeType":"YulExpressionStatement","src":"16798:44:15"}]},"name":"store_literal_in_memory_8dbe54bde5d74da7b886f685b9256abb22ad8758ccefb76323dd451857c1a8e0","nativeSrc":"16681:168:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"16779:6:15","nodeType":"YulTypedName","src":"16779:6:15","type":""}],"src":"16681:168:15"},{"body":{"nativeSrc":"17001:220:15","nodeType":"YulBlock","src":"17001:220:15","statements":[{"nativeSrc":"17011:74:15","nodeType":"YulAssignment","src":"17011:74:15","value":{"arguments":[{"name":"pos","nativeSrc":"17077:3:15","nodeType":"YulIdentifier","src":"17077:3:15"},{"kind":"number","nativeSrc":"17082:2:15","nodeType":"YulLiteral","src":"17082:2:15","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"17018:58:15","nodeType":"YulIdentifier","src":"17018:58:15"},"nativeSrc":"17018:67:15","nodeType":"YulFunctionCall","src":"17018:67:15"},"variableNames":[{"name":"pos","nativeSrc":"17011:3:15","nodeType":"YulIdentifier","src":"17011:3:15"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"17183:3:15","nodeType":"YulIdentifier","src":"17183:3:15"}],"functionName":{"name":"store_literal_in_memory_8dbe54bde5d74da7b886f685b9256abb22ad8758ccefb76323dd451857c1a8e0","nativeSrc":"17094:88:15","nodeType":"YulIdentifier","src":"17094:88:15"},"nativeSrc":"17094:93:15","nodeType":"YulFunctionCall","src":"17094:93:15"},"nativeSrc":"17094:93:15","nodeType":"YulExpressionStatement","src":"17094:93:15"},{"nativeSrc":"17196:19:15","nodeType":"YulAssignment","src":"17196:19:15","value":{"arguments":[{"name":"pos","nativeSrc":"17207:3:15","nodeType":"YulIdentifier","src":"17207:3:15"},{"kind":"number","nativeSrc":"17212:2:15","nodeType":"YulLiteral","src":"17212:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17203:3:15","nodeType":"YulIdentifier","src":"17203:3:15"},"nativeSrc":"17203:12:15","nodeType":"YulFunctionCall","src":"17203:12:15"},"variableNames":[{"name":"end","nativeSrc":"17196:3:15","nodeType":"YulIdentifier","src":"17196:3:15"}]}]},"name":"abi_encode_t_stringliteral_8dbe54bde5d74da7b886f685b9256abb22ad8758ccefb76323dd451857c1a8e0_to_t_string_memory_ptr_fromStack","nativeSrc":"16855:366:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16989:3:15","nodeType":"YulTypedName","src":"16989:3:15","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16997:3:15","nodeType":"YulTypedName","src":"16997:3:15","type":""}],"src":"16855:366:15"},{"body":{"nativeSrc":"17398:248:15","nodeType":"YulBlock","src":"17398:248:15","statements":[{"nativeSrc":"17408:26:15","nodeType":"YulAssignment","src":"17408:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"17420:9:15","nodeType":"YulIdentifier","src":"17420:9:15"},{"kind":"number","nativeSrc":"17431:2:15","nodeType":"YulLiteral","src":"17431:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17416:3:15","nodeType":"YulIdentifier","src":"17416:3:15"},"nativeSrc":"17416:18:15","nodeType":"YulFunctionCall","src":"17416:18:15"},"variableNames":[{"name":"tail","nativeSrc":"17408:4:15","nodeType":"YulIdentifier","src":"17408:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17455:9:15","nodeType":"YulIdentifier","src":"17455:9:15"},{"kind":"number","nativeSrc":"17466:1:15","nodeType":"YulLiteral","src":"17466:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17451:3:15","nodeType":"YulIdentifier","src":"17451:3:15"},"nativeSrc":"17451:17:15","nodeType":"YulFunctionCall","src":"17451:17:15"},{"arguments":[{"name":"tail","nativeSrc":"17474:4:15","nodeType":"YulIdentifier","src":"17474:4:15"},{"name":"headStart","nativeSrc":"17480:9:15","nodeType":"YulIdentifier","src":"17480:9:15"}],"functionName":{"name":"sub","nativeSrc":"17470:3:15","nodeType":"YulIdentifier","src":"17470:3:15"},"nativeSrc":"17470:20:15","nodeType":"YulFunctionCall","src":"17470:20:15"}],"functionName":{"name":"mstore","nativeSrc":"17444:6:15","nodeType":"YulIdentifier","src":"17444:6:15"},"nativeSrc":"17444:47:15","nodeType":"YulFunctionCall","src":"17444:47:15"},"nativeSrc":"17444:47:15","nodeType":"YulExpressionStatement","src":"17444:47:15"},{"nativeSrc":"17500:139:15","nodeType":"YulAssignment","src":"17500:139:15","value":{"arguments":[{"name":"tail","nativeSrc":"17634:4:15","nodeType":"YulIdentifier","src":"17634:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_8dbe54bde5d74da7b886f685b9256abb22ad8758ccefb76323dd451857c1a8e0_to_t_string_memory_ptr_fromStack","nativeSrc":"17508:124:15","nodeType":"YulIdentifier","src":"17508:124:15"},"nativeSrc":"17508:131:15","nodeType":"YulFunctionCall","src":"17508:131:15"},"variableNames":[{"name":"tail","nativeSrc":"17500:4:15","nodeType":"YulIdentifier","src":"17500:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_8dbe54bde5d74da7b886f685b9256abb22ad8758ccefb76323dd451857c1a8e0__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17227:419:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17378:9:15","nodeType":"YulTypedName","src":"17378:9:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17393:4:15","nodeType":"YulTypedName","src":"17393:4:15","type":""}],"src":"17227:419:15"},{"body":{"nativeSrc":"17680:152:15","nodeType":"YulBlock","src":"17680:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17697:1:15","nodeType":"YulLiteral","src":"17697:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"17700:77:15","nodeType":"YulLiteral","src":"17700:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"17690:6:15","nodeType":"YulIdentifier","src":"17690:6:15"},"nativeSrc":"17690:88:15","nodeType":"YulFunctionCall","src":"17690:88:15"},"nativeSrc":"17690:88:15","nodeType":"YulExpressionStatement","src":"17690:88:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17794:1:15","nodeType":"YulLiteral","src":"17794:1:15","type":"","value":"4"},{"kind":"number","nativeSrc":"17797:4:15","nodeType":"YulLiteral","src":"17797:4:15","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"17787:6:15","nodeType":"YulIdentifier","src":"17787:6:15"},"nativeSrc":"17787:15:15","nodeType":"YulFunctionCall","src":"17787:15:15"},"nativeSrc":"17787:15:15","nodeType":"YulExpressionStatement","src":"17787:15:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17818:1:15","nodeType":"YulLiteral","src":"17818:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"17821:4:15","nodeType":"YulLiteral","src":"17821:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"17811:6:15","nodeType":"YulIdentifier","src":"17811:6:15"},"nativeSrc":"17811:15:15","nodeType":"YulFunctionCall","src":"17811:15:15"},"nativeSrc":"17811:15:15","nodeType":"YulExpressionStatement","src":"17811:15:15"}]},"name":"panic_error_0x32","nativeSrc":"17652:180:15","nodeType":"YulFunctionDefinition","src":"17652:180:15"},{"body":{"nativeSrc":"17944:61:15","nodeType":"YulBlock","src":"17944:61:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"17966:6:15","nodeType":"YulIdentifier","src":"17966:6:15"},{"kind":"number","nativeSrc":"17974:1:15","nodeType":"YulLiteral","src":"17974:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17962:3:15","nodeType":"YulIdentifier","src":"17962:3:15"},"nativeSrc":"17962:14:15","nodeType":"YulFunctionCall","src":"17962:14:15"},{"hexValue":"496e76616c696420737761702070617468","kind":"string","nativeSrc":"17978:19:15","nodeType":"YulLiteral","src":"17978:19:15","type":"","value":"Invalid swap path"}],"functionName":{"name":"mstore","nativeSrc":"17955:6:15","nodeType":"YulIdentifier","src":"17955:6:15"},"nativeSrc":"17955:43:15","nodeType":"YulFunctionCall","src":"17955:43:15"},"nativeSrc":"17955:43:15","nodeType":"YulExpressionStatement","src":"17955:43:15"}]},"name":"store_literal_in_memory_9c0f63e8972d14555ea708444bdb7eac702c84db57e478aac11f5f962855928a","nativeSrc":"17838:167:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"17936:6:15","nodeType":"YulTypedName","src":"17936:6:15","type":""}],"src":"17838:167:15"},{"body":{"nativeSrc":"18157:220:15","nodeType":"YulBlock","src":"18157:220:15","statements":[{"nativeSrc":"18167:74:15","nodeType":"YulAssignment","src":"18167:74:15","value":{"arguments":[{"name":"pos","nativeSrc":"18233:3:15","nodeType":"YulIdentifier","src":"18233:3:15"},{"kind":"number","nativeSrc":"18238:2:15","nodeType":"YulLiteral","src":"18238:2:15","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"18174:58:15","nodeType":"YulIdentifier","src":"18174:58:15"},"nativeSrc":"18174:67:15","nodeType":"YulFunctionCall","src":"18174:67:15"},"variableNames":[{"name":"pos","nativeSrc":"18167:3:15","nodeType":"YulIdentifier","src":"18167:3:15"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"18339:3:15","nodeType":"YulIdentifier","src":"18339:3:15"}],"functionName":{"name":"store_literal_in_memory_9c0f63e8972d14555ea708444bdb7eac702c84db57e478aac11f5f962855928a","nativeSrc":"18250:88:15","nodeType":"YulIdentifier","src":"18250:88:15"},"nativeSrc":"18250:93:15","nodeType":"YulFunctionCall","src":"18250:93:15"},"nativeSrc":"18250:93:15","nodeType":"YulExpressionStatement","src":"18250:93:15"},{"nativeSrc":"18352:19:15","nodeType":"YulAssignment","src":"18352:19:15","value":{"arguments":[{"name":"pos","nativeSrc":"18363:3:15","nodeType":"YulIdentifier","src":"18363:3:15"},{"kind":"number","nativeSrc":"18368:2:15","nodeType":"YulLiteral","src":"18368:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18359:3:15","nodeType":"YulIdentifier","src":"18359:3:15"},"nativeSrc":"18359:12:15","nodeType":"YulFunctionCall","src":"18359:12:15"},"variableNames":[{"name":"end","nativeSrc":"18352:3:15","nodeType":"YulIdentifier","src":"18352:3:15"}]}]},"name":"abi_encode_t_stringliteral_9c0f63e8972d14555ea708444bdb7eac702c84db57e478aac11f5f962855928a_to_t_string_memory_ptr_fromStack","nativeSrc":"18011:366:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"18145:3:15","nodeType":"YulTypedName","src":"18145:3:15","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18153:3:15","nodeType":"YulTypedName","src":"18153:3:15","type":""}],"src":"18011:366:15"},{"body":{"nativeSrc":"18554:248:15","nodeType":"YulBlock","src":"18554:248:15","statements":[{"nativeSrc":"18564:26:15","nodeType":"YulAssignment","src":"18564:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"18576:9:15","nodeType":"YulIdentifier","src":"18576:9:15"},{"kind":"number","nativeSrc":"18587:2:15","nodeType":"YulLiteral","src":"18587:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18572:3:15","nodeType":"YulIdentifier","src":"18572:3:15"},"nativeSrc":"18572:18:15","nodeType":"YulFunctionCall","src":"18572:18:15"},"variableNames":[{"name":"tail","nativeSrc":"18564:4:15","nodeType":"YulIdentifier","src":"18564:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18611:9:15","nodeType":"YulIdentifier","src":"18611:9:15"},{"kind":"number","nativeSrc":"18622:1:15","nodeType":"YulLiteral","src":"18622:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18607:3:15","nodeType":"YulIdentifier","src":"18607:3:15"},"nativeSrc":"18607:17:15","nodeType":"YulFunctionCall","src":"18607:17:15"},{"arguments":[{"name":"tail","nativeSrc":"18630:4:15","nodeType":"YulIdentifier","src":"18630:4:15"},{"name":"headStart","nativeSrc":"18636:9:15","nodeType":"YulIdentifier","src":"18636:9:15"}],"functionName":{"name":"sub","nativeSrc":"18626:3:15","nodeType":"YulIdentifier","src":"18626:3:15"},"nativeSrc":"18626:20:15","nodeType":"YulFunctionCall","src":"18626:20:15"}],"functionName":{"name":"mstore","nativeSrc":"18600:6:15","nodeType":"YulIdentifier","src":"18600:6:15"},"nativeSrc":"18600:47:15","nodeType":"YulFunctionCall","src":"18600:47:15"},"nativeSrc":"18600:47:15","nodeType":"YulExpressionStatement","src":"18600:47:15"},{"nativeSrc":"18656:139:15","nodeType":"YulAssignment","src":"18656:139:15","value":{"arguments":[{"name":"tail","nativeSrc":"18790:4:15","nodeType":"YulIdentifier","src":"18790:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_9c0f63e8972d14555ea708444bdb7eac702c84db57e478aac11f5f962855928a_to_t_string_memory_ptr_fromStack","nativeSrc":"18664:124:15","nodeType":"YulIdentifier","src":"18664:124:15"},"nativeSrc":"18664:131:15","nodeType":"YulFunctionCall","src":"18664:131:15"},"variableNames":[{"name":"tail","nativeSrc":"18656:4:15","nodeType":"YulIdentifier","src":"18656:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_9c0f63e8972d14555ea708444bdb7eac702c84db57e478aac11f5f962855928a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18383:419:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18534:9:15","nodeType":"YulTypedName","src":"18534:9:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18549:4:15","nodeType":"YulTypedName","src":"18549:4:15","type":""}],"src":"18383:419:15"},{"body":{"nativeSrc":"18914:52:15","nodeType":"YulBlock","src":"18914:52:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"18936:6:15","nodeType":"YulIdentifier","src":"18936:6:15"},{"kind":"number","nativeSrc":"18944:1:15","nodeType":"YulLiteral","src":"18944:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18932:3:15","nodeType":"YulIdentifier","src":"18932:3:15"},"nativeSrc":"18932:14:15","nodeType":"YulFunctionCall","src":"18932:14:15"},{"hexValue":"536c697070616765","kind":"string","nativeSrc":"18948:10:15","nodeType":"YulLiteral","src":"18948:10:15","type":"","value":"Slippage"}],"functionName":{"name":"mstore","nativeSrc":"18925:6:15","nodeType":"YulIdentifier","src":"18925:6:15"},"nativeSrc":"18925:34:15","nodeType":"YulFunctionCall","src":"18925:34:15"},"nativeSrc":"18925:34:15","nodeType":"YulExpressionStatement","src":"18925:34:15"}]},"name":"store_literal_in_memory_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114","nativeSrc":"18808:158:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"18906:6:15","nodeType":"YulTypedName","src":"18906:6:15","type":""}],"src":"18808:158:15"},{"body":{"nativeSrc":"19118:219:15","nodeType":"YulBlock","src":"19118:219:15","statements":[{"nativeSrc":"19128:73:15","nodeType":"YulAssignment","src":"19128:73:15","value":{"arguments":[{"name":"pos","nativeSrc":"19194:3:15","nodeType":"YulIdentifier","src":"19194:3:15"},{"kind":"number","nativeSrc":"19199:1:15","nodeType":"YulLiteral","src":"19199:1:15","type":"","value":"8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"19135:58:15","nodeType":"YulIdentifier","src":"19135:58:15"},"nativeSrc":"19135:66:15","nodeType":"YulFunctionCall","src":"19135:66:15"},"variableNames":[{"name":"pos","nativeSrc":"19128:3:15","nodeType":"YulIdentifier","src":"19128:3:15"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"19299:3:15","nodeType":"YulIdentifier","src":"19299:3:15"}],"functionName":{"name":"store_literal_in_memory_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114","nativeSrc":"19210:88:15","nodeType":"YulIdentifier","src":"19210:88:15"},"nativeSrc":"19210:93:15","nodeType":"YulFunctionCall","src":"19210:93:15"},"nativeSrc":"19210:93:15","nodeType":"YulExpressionStatement","src":"19210:93:15"},{"nativeSrc":"19312:19:15","nodeType":"YulAssignment","src":"19312:19:15","value":{"arguments":[{"name":"pos","nativeSrc":"19323:3:15","nodeType":"YulIdentifier","src":"19323:3:15"},{"kind":"number","nativeSrc":"19328:2:15","nodeType":"YulLiteral","src":"19328:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19319:3:15","nodeType":"YulIdentifier","src":"19319:3:15"},"nativeSrc":"19319:12:15","nodeType":"YulFunctionCall","src":"19319:12:15"},"variableNames":[{"name":"end","nativeSrc":"19312:3:15","nodeType":"YulIdentifier","src":"19312:3:15"}]}]},"name":"abi_encode_t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114_to_t_string_memory_ptr_fromStack","nativeSrc":"18972:365:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"19106:3:15","nodeType":"YulTypedName","src":"19106:3:15","type":""}],"returnVariables":[{"name":"end","nativeSrc":"19114:3:15","nodeType":"YulTypedName","src":"19114:3:15","type":""}],"src":"18972:365:15"},{"body":{"nativeSrc":"19514:248:15","nodeType":"YulBlock","src":"19514:248:15","statements":[{"nativeSrc":"19524:26:15","nodeType":"YulAssignment","src":"19524:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"19536:9:15","nodeType":"YulIdentifier","src":"19536:9:15"},{"kind":"number","nativeSrc":"19547:2:15","nodeType":"YulLiteral","src":"19547:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19532:3:15","nodeType":"YulIdentifier","src":"19532:3:15"},"nativeSrc":"19532:18:15","nodeType":"YulFunctionCall","src":"19532:18:15"},"variableNames":[{"name":"tail","nativeSrc":"19524:4:15","nodeType":"YulIdentifier","src":"19524:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19571:9:15","nodeType":"YulIdentifier","src":"19571:9:15"},{"kind":"number","nativeSrc":"19582:1:15","nodeType":"YulLiteral","src":"19582:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19567:3:15","nodeType":"YulIdentifier","src":"19567:3:15"},"nativeSrc":"19567:17:15","nodeType":"YulFunctionCall","src":"19567:17:15"},{"arguments":[{"name":"tail","nativeSrc":"19590:4:15","nodeType":"YulIdentifier","src":"19590:4:15"},{"name":"headStart","nativeSrc":"19596:9:15","nodeType":"YulIdentifier","src":"19596:9:15"}],"functionName":{"name":"sub","nativeSrc":"19586:3:15","nodeType":"YulIdentifier","src":"19586:3:15"},"nativeSrc":"19586:20:15","nodeType":"YulFunctionCall","src":"19586:20:15"}],"functionName":{"name":"mstore","nativeSrc":"19560:6:15","nodeType":"YulIdentifier","src":"19560:6:15"},"nativeSrc":"19560:47:15","nodeType":"YulFunctionCall","src":"19560:47:15"},"nativeSrc":"19560:47:15","nodeType":"YulExpressionStatement","src":"19560:47:15"},{"nativeSrc":"19616:139:15","nodeType":"YulAssignment","src":"19616:139:15","value":{"arguments":[{"name":"tail","nativeSrc":"19750:4:15","nodeType":"YulIdentifier","src":"19750:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114_to_t_string_memory_ptr_fromStack","nativeSrc":"19624:124:15","nodeType":"YulIdentifier","src":"19624:124:15"},"nativeSrc":"19624:131:15","nodeType":"YulFunctionCall","src":"19624:131:15"},"variableNames":[{"name":"tail","nativeSrc":"19616:4:15","nodeType":"YulIdentifier","src":"19616:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"19343:419:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19494:9:15","nodeType":"YulTypedName","src":"19494:9:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19509:4:15","nodeType":"YulTypedName","src":"19509:4:15","type":""}],"src":"19343:419:15"},{"body":{"nativeSrc":"19813:149:15","nodeType":"YulBlock","src":"19813:149:15","statements":[{"nativeSrc":"19823:25:15","nodeType":"YulAssignment","src":"19823:25:15","value":{"arguments":[{"name":"x","nativeSrc":"19846:1:15","nodeType":"YulIdentifier","src":"19846:1:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19828:17:15","nodeType":"YulIdentifier","src":"19828:17:15"},"nativeSrc":"19828:20:15","nodeType":"YulFunctionCall","src":"19828:20:15"},"variableNames":[{"name":"x","nativeSrc":"19823:1:15","nodeType":"YulIdentifier","src":"19823:1:15"}]},{"nativeSrc":"19857:25:15","nodeType":"YulAssignment","src":"19857:25:15","value":{"arguments":[{"name":"y","nativeSrc":"19880:1:15","nodeType":"YulIdentifier","src":"19880:1:15"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19862:17:15","nodeType":"YulIdentifier","src":"19862:17:15"},"nativeSrc":"19862:20:15","nodeType":"YulFunctionCall","src":"19862:20:15"},"variableNames":[{"name":"y","nativeSrc":"19857:1:15","nodeType":"YulIdentifier","src":"19857:1:15"}]},{"nativeSrc":"19891:17:15","nodeType":"YulAssignment","src":"19891:17:15","value":{"arguments":[{"name":"x","nativeSrc":"19903:1:15","nodeType":"YulIdentifier","src":"19903:1:15"},{"name":"y","nativeSrc":"19906:1:15","nodeType":"YulIdentifier","src":"19906:1:15"}],"functionName":{"name":"sub","nativeSrc":"19899:3:15","nodeType":"YulIdentifier","src":"19899:3:15"},"nativeSrc":"19899:9:15","nodeType":"YulFunctionCall","src":"19899:9:15"},"variableNames":[{"name":"diff","nativeSrc":"19891:4:15","nodeType":"YulIdentifier","src":"19891:4:15"}]},{"body":{"nativeSrc":"19933:22:15","nodeType":"YulBlock","src":"19933:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"19935:16:15","nodeType":"YulIdentifier","src":"19935:16:15"},"nativeSrc":"19935:18:15","nodeType":"YulFunctionCall","src":"19935:18:15"},"nativeSrc":"19935:18:15","nodeType":"YulExpressionStatement","src":"19935:18:15"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"19924:4:15","nodeType":"YulIdentifier","src":"19924:4:15"},{"name":"x","nativeSrc":"19930:1:15","nodeType":"YulIdentifier","src":"19930:1:15"}],"functionName":{"name":"gt","nativeSrc":"19921:2:15","nodeType":"YulIdentifier","src":"19921:2:15"},"nativeSrc":"19921:11:15","nodeType":"YulFunctionCall","src":"19921:11:15"},"nativeSrc":"19918:37:15","nodeType":"YulIf","src":"19918:37:15"}]},"name":"checked_sub_t_uint256","nativeSrc":"19768:194:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"19799:1:15","nodeType":"YulTypedName","src":"19799:1:15","type":""},{"name":"y","nativeSrc":"19802:1:15","nodeType":"YulTypedName","src":"19802:1:15","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"19808:4:15","nodeType":"YulTypedName","src":"19808:4:15","type":""}],"src":"19768:194:15"},{"body":{"nativeSrc":"20074:62:15","nodeType":"YulBlock","src":"20074:62:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"20096:6:15","nodeType":"YulIdentifier","src":"20096:6:15"},{"kind":"number","nativeSrc":"20104:1:15","nodeType":"YulLiteral","src":"20104:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20092:3:15","nodeType":"YulIdentifier","src":"20092:3:15"},"nativeSrc":"20092:14:15","nodeType":"YulFunctionCall","src":"20092:14:15"},{"hexValue":"496e76616c696420746f6b656e2070616972","kind":"string","nativeSrc":"20108:20:15","nodeType":"YulLiteral","src":"20108:20:15","type":"","value":"Invalid token pair"}],"functionName":{"name":"mstore","nativeSrc":"20085:6:15","nodeType":"YulIdentifier","src":"20085:6:15"},"nativeSrc":"20085:44:15","nodeType":"YulFunctionCall","src":"20085:44:15"},"nativeSrc":"20085:44:15","nodeType":"YulExpressionStatement","src":"20085:44:15"}]},"name":"store_literal_in_memory_4a0f3a6fe4f2b4139e5c19fc0123996c3c606f417a7c4425be97431d9fd20ea0","nativeSrc":"19968:168:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"20066:6:15","nodeType":"YulTypedName","src":"20066:6:15","type":""}],"src":"19968:168:15"},{"body":{"nativeSrc":"20288:220:15","nodeType":"YulBlock","src":"20288:220:15","statements":[{"nativeSrc":"20298:74:15","nodeType":"YulAssignment","src":"20298:74:15","value":{"arguments":[{"name":"pos","nativeSrc":"20364:3:15","nodeType":"YulIdentifier","src":"20364:3:15"},{"kind":"number","nativeSrc":"20369:2:15","nodeType":"YulLiteral","src":"20369:2:15","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"20305:58:15","nodeType":"YulIdentifier","src":"20305:58:15"},"nativeSrc":"20305:67:15","nodeType":"YulFunctionCall","src":"20305:67:15"},"variableNames":[{"name":"pos","nativeSrc":"20298:3:15","nodeType":"YulIdentifier","src":"20298:3:15"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"20470:3:15","nodeType":"YulIdentifier","src":"20470:3:15"}],"functionName":{"name":"store_literal_in_memory_4a0f3a6fe4f2b4139e5c19fc0123996c3c606f417a7c4425be97431d9fd20ea0","nativeSrc":"20381:88:15","nodeType":"YulIdentifier","src":"20381:88:15"},"nativeSrc":"20381:93:15","nodeType":"YulFunctionCall","src":"20381:93:15"},"nativeSrc":"20381:93:15","nodeType":"YulExpressionStatement","src":"20381:93:15"},{"nativeSrc":"20483:19:15","nodeType":"YulAssignment","src":"20483:19:15","value":{"arguments":[{"name":"pos","nativeSrc":"20494:3:15","nodeType":"YulIdentifier","src":"20494:3:15"},{"kind":"number","nativeSrc":"20499:2:15","nodeType":"YulLiteral","src":"20499:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20490:3:15","nodeType":"YulIdentifier","src":"20490:3:15"},"nativeSrc":"20490:12:15","nodeType":"YulFunctionCall","src":"20490:12:15"},"variableNames":[{"name":"end","nativeSrc":"20483:3:15","nodeType":"YulIdentifier","src":"20483:3:15"}]}]},"name":"abi_encode_t_stringliteral_4a0f3a6fe4f2b4139e5c19fc0123996c3c606f417a7c4425be97431d9fd20ea0_to_t_string_memory_ptr_fromStack","nativeSrc":"20142:366:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"20276:3:15","nodeType":"YulTypedName","src":"20276:3:15","type":""}],"returnVariables":[{"name":"end","nativeSrc":"20284:3:15","nodeType":"YulTypedName","src":"20284:3:15","type":""}],"src":"20142:366:15"},{"body":{"nativeSrc":"20685:248:15","nodeType":"YulBlock","src":"20685:248:15","statements":[{"nativeSrc":"20695:26:15","nodeType":"YulAssignment","src":"20695:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"20707:9:15","nodeType":"YulIdentifier","src":"20707:9:15"},{"kind":"number","nativeSrc":"20718:2:15","nodeType":"YulLiteral","src":"20718:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20703:3:15","nodeType":"YulIdentifier","src":"20703:3:15"},"nativeSrc":"20703:18:15","nodeType":"YulFunctionCall","src":"20703:18:15"},"variableNames":[{"name":"tail","nativeSrc":"20695:4:15","nodeType":"YulIdentifier","src":"20695:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20742:9:15","nodeType":"YulIdentifier","src":"20742:9:15"},{"kind":"number","nativeSrc":"20753:1:15","nodeType":"YulLiteral","src":"20753:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20738:3:15","nodeType":"YulIdentifier","src":"20738:3:15"},"nativeSrc":"20738:17:15","nodeType":"YulFunctionCall","src":"20738:17:15"},{"arguments":[{"name":"tail","nativeSrc":"20761:4:15","nodeType":"YulIdentifier","src":"20761:4:15"},{"name":"headStart","nativeSrc":"20767:9:15","nodeType":"YulIdentifier","src":"20767:9:15"}],"functionName":{"name":"sub","nativeSrc":"20757:3:15","nodeType":"YulIdentifier","src":"20757:3:15"},"nativeSrc":"20757:20:15","nodeType":"YulFunctionCall","src":"20757:20:15"}],"functionName":{"name":"mstore","nativeSrc":"20731:6:15","nodeType":"YulIdentifier","src":"20731:6:15"},"nativeSrc":"20731:47:15","nodeType":"YulFunctionCall","src":"20731:47:15"},"nativeSrc":"20731:47:15","nodeType":"YulExpressionStatement","src":"20731:47:15"},{"nativeSrc":"20787:139:15","nodeType":"YulAssignment","src":"20787:139:15","value":{"arguments":[{"name":"tail","nativeSrc":"20921:4:15","nodeType":"YulIdentifier","src":"20921:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_4a0f3a6fe4f2b4139e5c19fc0123996c3c606f417a7c4425be97431d9fd20ea0_to_t_string_memory_ptr_fromStack","nativeSrc":"20795:124:15","nodeType":"YulIdentifier","src":"20795:124:15"},"nativeSrc":"20795:131:15","nodeType":"YulFunctionCall","src":"20795:131:15"},"variableNames":[{"name":"tail","nativeSrc":"20787:4:15","nodeType":"YulIdentifier","src":"20787:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_4a0f3a6fe4f2b4139e5c19fc0123996c3c606f417a7c4425be97431d9fd20ea0__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"20514:419:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20665:9:15","nodeType":"YulTypedName","src":"20665:9:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20680:4:15","nodeType":"YulTypedName","src":"20680:4:15","type":""}],"src":"20514:419:15"},{"body":{"nativeSrc":"21045:55:15","nodeType":"YulBlock","src":"21045:55:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"21067:6:15","nodeType":"YulIdentifier","src":"21067:6:15"},{"kind":"number","nativeSrc":"21075:1:15","nodeType":"YulLiteral","src":"21075:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21063:3:15","nodeType":"YulIdentifier","src":"21063:3:15"},"nativeSrc":"21063:14:15","nodeType":"YulFunctionCall","src":"21063:14:15"},{"hexValue":"4e6f207265736572766573","kind":"string","nativeSrc":"21079:13:15","nodeType":"YulLiteral","src":"21079:13:15","type":"","value":"No reserves"}],"functionName":{"name":"mstore","nativeSrc":"21056:6:15","nodeType":"YulIdentifier","src":"21056:6:15"},"nativeSrc":"21056:37:15","nodeType":"YulFunctionCall","src":"21056:37:15"},"nativeSrc":"21056:37:15","nodeType":"YulExpressionStatement","src":"21056:37:15"}]},"name":"store_literal_in_memory_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766","nativeSrc":"20939:161:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"21037:6:15","nodeType":"YulTypedName","src":"21037:6:15","type":""}],"src":"20939:161:15"},{"body":{"nativeSrc":"21252:220:15","nodeType":"YulBlock","src":"21252:220:15","statements":[{"nativeSrc":"21262:74:15","nodeType":"YulAssignment","src":"21262:74:15","value":{"arguments":[{"name":"pos","nativeSrc":"21328:3:15","nodeType":"YulIdentifier","src":"21328:3:15"},{"kind":"number","nativeSrc":"21333:2:15","nodeType":"YulLiteral","src":"21333:2:15","type":"","value":"11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"21269:58:15","nodeType":"YulIdentifier","src":"21269:58:15"},"nativeSrc":"21269:67:15","nodeType":"YulFunctionCall","src":"21269:67:15"},"variableNames":[{"name":"pos","nativeSrc":"21262:3:15","nodeType":"YulIdentifier","src":"21262:3:15"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"21434:3:15","nodeType":"YulIdentifier","src":"21434:3:15"}],"functionName":{"name":"store_literal_in_memory_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766","nativeSrc":"21345:88:15","nodeType":"YulIdentifier","src":"21345:88:15"},"nativeSrc":"21345:93:15","nodeType":"YulFunctionCall","src":"21345:93:15"},"nativeSrc":"21345:93:15","nodeType":"YulExpressionStatement","src":"21345:93:15"},{"nativeSrc":"21447:19:15","nodeType":"YulAssignment","src":"21447:19:15","value":{"arguments":[{"name":"pos","nativeSrc":"21458:3:15","nodeType":"YulIdentifier","src":"21458:3:15"},{"kind":"number","nativeSrc":"21463:2:15","nodeType":"YulLiteral","src":"21463:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21454:3:15","nodeType":"YulIdentifier","src":"21454:3:15"},"nativeSrc":"21454:12:15","nodeType":"YulFunctionCall","src":"21454:12:15"},"variableNames":[{"name":"end","nativeSrc":"21447:3:15","nodeType":"YulIdentifier","src":"21447:3:15"}]}]},"name":"abi_encode_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766_to_t_string_memory_ptr_fromStack","nativeSrc":"21106:366:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"21240:3:15","nodeType":"YulTypedName","src":"21240:3:15","type":""}],"returnVariables":[{"name":"end","nativeSrc":"21248:3:15","nodeType":"YulTypedName","src":"21248:3:15","type":""}],"src":"21106:366:15"},{"body":{"nativeSrc":"21649:248:15","nodeType":"YulBlock","src":"21649:248:15","statements":[{"nativeSrc":"21659:26:15","nodeType":"YulAssignment","src":"21659:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"21671:9:15","nodeType":"YulIdentifier","src":"21671:9:15"},{"kind":"number","nativeSrc":"21682:2:15","nodeType":"YulLiteral","src":"21682:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21667:3:15","nodeType":"YulIdentifier","src":"21667:3:15"},"nativeSrc":"21667:18:15","nodeType":"YulFunctionCall","src":"21667:18:15"},"variableNames":[{"name":"tail","nativeSrc":"21659:4:15","nodeType":"YulIdentifier","src":"21659:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21706:9:15","nodeType":"YulIdentifier","src":"21706:9:15"},{"kind":"number","nativeSrc":"21717:1:15","nodeType":"YulLiteral","src":"21717:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21702:3:15","nodeType":"YulIdentifier","src":"21702:3:15"},"nativeSrc":"21702:17:15","nodeType":"YulFunctionCall","src":"21702:17:15"},{"arguments":[{"name":"tail","nativeSrc":"21725:4:15","nodeType":"YulIdentifier","src":"21725:4:15"},{"name":"headStart","nativeSrc":"21731:9:15","nodeType":"YulIdentifier","src":"21731:9:15"}],"functionName":{"name":"sub","nativeSrc":"21721:3:15","nodeType":"YulIdentifier","src":"21721:3:15"},"nativeSrc":"21721:20:15","nodeType":"YulFunctionCall","src":"21721:20:15"}],"functionName":{"name":"mstore","nativeSrc":"21695:6:15","nodeType":"YulIdentifier","src":"21695:6:15"},"nativeSrc":"21695:47:15","nodeType":"YulFunctionCall","src":"21695:47:15"},"nativeSrc":"21695:47:15","nodeType":"YulExpressionStatement","src":"21695:47:15"},{"nativeSrc":"21751:139:15","nodeType":"YulAssignment","src":"21751:139:15","value":{"arguments":[{"name":"tail","nativeSrc":"21885:4:15","nodeType":"YulIdentifier","src":"21885:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766_to_t_string_memory_ptr_fromStack","nativeSrc":"21759:124:15","nodeType":"YulIdentifier","src":"21759:124:15"},"nativeSrc":"21759:131:15","nodeType":"YulFunctionCall","src":"21759:131:15"},"variableNames":[{"name":"tail","nativeSrc":"21751:4:15","nodeType":"YulIdentifier","src":"21751:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"21478:419:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21629:9:15","nodeType":"YulTypedName","src":"21629:9:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21644:4:15","nodeType":"YulTypedName","src":"21644:4:15","type":""}],"src":"21478:419:15"},{"body":{"nativeSrc":"22009:57:15","nodeType":"YulBlock","src":"22009:57:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"22031:6:15","nodeType":"YulIdentifier","src":"22031:6:15"},{"kind":"number","nativeSrc":"22039:1:15","nodeType":"YulLiteral","src":"22039:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22027:3:15","nodeType":"YulIdentifier","src":"22027:3:15"},"nativeSrc":"22027:14:15","nodeType":"YulFunctionCall","src":"22027:14:15"},{"hexValue":"4e6f7420656e6f756768204c50","kind":"string","nativeSrc":"22043:15:15","nodeType":"YulLiteral","src":"22043:15:15","type":"","value":"Not enough LP"}],"functionName":{"name":"mstore","nativeSrc":"22020:6:15","nodeType":"YulIdentifier","src":"22020:6:15"},"nativeSrc":"22020:39:15","nodeType":"YulFunctionCall","src":"22020:39:15"},"nativeSrc":"22020:39:15","nodeType":"YulExpressionStatement","src":"22020:39:15"}]},"name":"store_literal_in_memory_a93d804a59195ce513d1e630391944a5504763fe44cb40791850992ca75b1c1d","nativeSrc":"21903:163:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"22001:6:15","nodeType":"YulTypedName","src":"22001:6:15","type":""}],"src":"21903:163:15"},{"body":{"nativeSrc":"22218:220:15","nodeType":"YulBlock","src":"22218:220:15","statements":[{"nativeSrc":"22228:74:15","nodeType":"YulAssignment","src":"22228:74:15","value":{"arguments":[{"name":"pos","nativeSrc":"22294:3:15","nodeType":"YulIdentifier","src":"22294:3:15"},{"kind":"number","nativeSrc":"22299:2:15","nodeType":"YulLiteral","src":"22299:2:15","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"22235:58:15","nodeType":"YulIdentifier","src":"22235:58:15"},"nativeSrc":"22235:67:15","nodeType":"YulFunctionCall","src":"22235:67:15"},"variableNames":[{"name":"pos","nativeSrc":"22228:3:15","nodeType":"YulIdentifier","src":"22228:3:15"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"22400:3:15","nodeType":"YulIdentifier","src":"22400:3:15"}],"functionName":{"name":"store_literal_in_memory_a93d804a59195ce513d1e630391944a5504763fe44cb40791850992ca75b1c1d","nativeSrc":"22311:88:15","nodeType":"YulIdentifier","src":"22311:88:15"},"nativeSrc":"22311:93:15","nodeType":"YulFunctionCall","src":"22311:93:15"},"nativeSrc":"22311:93:15","nodeType":"YulExpressionStatement","src":"22311:93:15"},{"nativeSrc":"22413:19:15","nodeType":"YulAssignment","src":"22413:19:15","value":{"arguments":[{"name":"pos","nativeSrc":"22424:3:15","nodeType":"YulIdentifier","src":"22424:3:15"},{"kind":"number","nativeSrc":"22429:2:15","nodeType":"YulLiteral","src":"22429:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22420:3:15","nodeType":"YulIdentifier","src":"22420:3:15"},"nativeSrc":"22420:12:15","nodeType":"YulFunctionCall","src":"22420:12:15"},"variableNames":[{"name":"end","nativeSrc":"22413:3:15","nodeType":"YulIdentifier","src":"22413:3:15"}]}]},"name":"abi_encode_t_stringliteral_a93d804a59195ce513d1e630391944a5504763fe44cb40791850992ca75b1c1d_to_t_string_memory_ptr_fromStack","nativeSrc":"22072:366:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"22206:3:15","nodeType":"YulTypedName","src":"22206:3:15","type":""}],"returnVariables":[{"name":"end","nativeSrc":"22214:3:15","nodeType":"YulTypedName","src":"22214:3:15","type":""}],"src":"22072:366:15"},{"body":{"nativeSrc":"22615:248:15","nodeType":"YulBlock","src":"22615:248:15","statements":[{"nativeSrc":"22625:26:15","nodeType":"YulAssignment","src":"22625:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"22637:9:15","nodeType":"YulIdentifier","src":"22637:9:15"},{"kind":"number","nativeSrc":"22648:2:15","nodeType":"YulLiteral","src":"22648:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22633:3:15","nodeType":"YulIdentifier","src":"22633:3:15"},"nativeSrc":"22633:18:15","nodeType":"YulFunctionCall","src":"22633:18:15"},"variableNames":[{"name":"tail","nativeSrc":"22625:4:15","nodeType":"YulIdentifier","src":"22625:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22672:9:15","nodeType":"YulIdentifier","src":"22672:9:15"},{"kind":"number","nativeSrc":"22683:1:15","nodeType":"YulLiteral","src":"22683:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22668:3:15","nodeType":"YulIdentifier","src":"22668:3:15"},"nativeSrc":"22668:17:15","nodeType":"YulFunctionCall","src":"22668:17:15"},{"arguments":[{"name":"tail","nativeSrc":"22691:4:15","nodeType":"YulIdentifier","src":"22691:4:15"},{"name":"headStart","nativeSrc":"22697:9:15","nodeType":"YulIdentifier","src":"22697:9:15"}],"functionName":{"name":"sub","nativeSrc":"22687:3:15","nodeType":"YulIdentifier","src":"22687:3:15"},"nativeSrc":"22687:20:15","nodeType":"YulFunctionCall","src":"22687:20:15"}],"functionName":{"name":"mstore","nativeSrc":"22661:6:15","nodeType":"YulIdentifier","src":"22661:6:15"},"nativeSrc":"22661:47:15","nodeType":"YulFunctionCall","src":"22661:47:15"},"nativeSrc":"22661:47:15","nodeType":"YulExpressionStatement","src":"22661:47:15"},{"nativeSrc":"22717:139:15","nodeType":"YulAssignment","src":"22717:139:15","value":{"arguments":[{"name":"tail","nativeSrc":"22851:4:15","nodeType":"YulIdentifier","src":"22851:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_a93d804a59195ce513d1e630391944a5504763fe44cb40791850992ca75b1c1d_to_t_string_memory_ptr_fromStack","nativeSrc":"22725:124:15","nodeType":"YulIdentifier","src":"22725:124:15"},"nativeSrc":"22725:131:15","nodeType":"YulFunctionCall","src":"22725:131:15"},"variableNames":[{"name":"tail","nativeSrc":"22717:4:15","nodeType":"YulIdentifier","src":"22717:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_a93d804a59195ce513d1e630391944a5504763fe44cb40791850992ca75b1c1d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"22444:419:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22595:9:15","nodeType":"YulTypedName","src":"22595:9:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22610:4:15","nodeType":"YulTypedName","src":"22610:4:15","type":""}],"src":"22444:419:15"},{"body":{"nativeSrc":"22975:49:15","nodeType":"YulBlock","src":"22975:49:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"22997:6:15","nodeType":"YulIdentifier","src":"22997:6:15"},{"kind":"number","nativeSrc":"23005:1:15","nodeType":"YulLiteral","src":"23005:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22993:3:15","nodeType":"YulIdentifier","src":"22993:3:15"},"nativeSrc":"22993:14:15","nodeType":"YulFunctionCall","src":"22993:14:15"},{"hexValue":"4c6f772041","kind":"string","nativeSrc":"23009:7:15","nodeType":"YulLiteral","src":"23009:7:15","type":"","value":"Low A"}],"functionName":{"name":"mstore","nativeSrc":"22986:6:15","nodeType":"YulIdentifier","src":"22986:6:15"},"nativeSrc":"22986:31:15","nodeType":"YulFunctionCall","src":"22986:31:15"},"nativeSrc":"22986:31:15","nodeType":"YulExpressionStatement","src":"22986:31:15"}]},"name":"store_literal_in_memory_69902dfe75c7b10b3f4c7f15ab3035e10d37d1252e7958f42e3561a4fdcf702e","nativeSrc":"22869:155:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"22967:6:15","nodeType":"YulTypedName","src":"22967:6:15","type":""}],"src":"22869:155:15"},{"body":{"nativeSrc":"23176:219:15","nodeType":"YulBlock","src":"23176:219:15","statements":[{"nativeSrc":"23186:73:15","nodeType":"YulAssignment","src":"23186:73:15","value":{"arguments":[{"name":"pos","nativeSrc":"23252:3:15","nodeType":"YulIdentifier","src":"23252:3:15"},{"kind":"number","nativeSrc":"23257:1:15","nodeType":"YulLiteral","src":"23257:1:15","type":"","value":"5"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"23193:58:15","nodeType":"YulIdentifier","src":"23193:58:15"},"nativeSrc":"23193:66:15","nodeType":"YulFunctionCall","src":"23193:66:15"},"variableNames":[{"name":"pos","nativeSrc":"23186:3:15","nodeType":"YulIdentifier","src":"23186:3:15"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"23357:3:15","nodeType":"YulIdentifier","src":"23357:3:15"}],"functionName":{"name":"store_literal_in_memory_69902dfe75c7b10b3f4c7f15ab3035e10d37d1252e7958f42e3561a4fdcf702e","nativeSrc":"23268:88:15","nodeType":"YulIdentifier","src":"23268:88:15"},"nativeSrc":"23268:93:15","nodeType":"YulFunctionCall","src":"23268:93:15"},"nativeSrc":"23268:93:15","nodeType":"YulExpressionStatement","src":"23268:93:15"},{"nativeSrc":"23370:19:15","nodeType":"YulAssignment","src":"23370:19:15","value":{"arguments":[{"name":"pos","nativeSrc":"23381:3:15","nodeType":"YulIdentifier","src":"23381:3:15"},{"kind":"number","nativeSrc":"23386:2:15","nodeType":"YulLiteral","src":"23386:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23377:3:15","nodeType":"YulIdentifier","src":"23377:3:15"},"nativeSrc":"23377:12:15","nodeType":"YulFunctionCall","src":"23377:12:15"},"variableNames":[{"name":"end","nativeSrc":"23370:3:15","nodeType":"YulIdentifier","src":"23370:3:15"}]}]},"name":"abi_encode_t_stringliteral_69902dfe75c7b10b3f4c7f15ab3035e10d37d1252e7958f42e3561a4fdcf702e_to_t_string_memory_ptr_fromStack","nativeSrc":"23030:365:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"23164:3:15","nodeType":"YulTypedName","src":"23164:3:15","type":""}],"returnVariables":[{"name":"end","nativeSrc":"23172:3:15","nodeType":"YulTypedName","src":"23172:3:15","type":""}],"src":"23030:365:15"},{"body":{"nativeSrc":"23572:248:15","nodeType":"YulBlock","src":"23572:248:15","statements":[{"nativeSrc":"23582:26:15","nodeType":"YulAssignment","src":"23582:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"23594:9:15","nodeType":"YulIdentifier","src":"23594:9:15"},{"kind":"number","nativeSrc":"23605:2:15","nodeType":"YulLiteral","src":"23605:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23590:3:15","nodeType":"YulIdentifier","src":"23590:3:15"},"nativeSrc":"23590:18:15","nodeType":"YulFunctionCall","src":"23590:18:15"},"variableNames":[{"name":"tail","nativeSrc":"23582:4:15","nodeType":"YulIdentifier","src":"23582:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23629:9:15","nodeType":"YulIdentifier","src":"23629:9:15"},{"kind":"number","nativeSrc":"23640:1:15","nodeType":"YulLiteral","src":"23640:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23625:3:15","nodeType":"YulIdentifier","src":"23625:3:15"},"nativeSrc":"23625:17:15","nodeType":"YulFunctionCall","src":"23625:17:15"},{"arguments":[{"name":"tail","nativeSrc":"23648:4:15","nodeType":"YulIdentifier","src":"23648:4:15"},{"name":"headStart","nativeSrc":"23654:9:15","nodeType":"YulIdentifier","src":"23654:9:15"}],"functionName":{"name":"sub","nativeSrc":"23644:3:15","nodeType":"YulIdentifier","src":"23644:3:15"},"nativeSrc":"23644:20:15","nodeType":"YulFunctionCall","src":"23644:20:15"}],"functionName":{"name":"mstore","nativeSrc":"23618:6:15","nodeType":"YulIdentifier","src":"23618:6:15"},"nativeSrc":"23618:47:15","nodeType":"YulFunctionCall","src":"23618:47:15"},"nativeSrc":"23618:47:15","nodeType":"YulExpressionStatement","src":"23618:47:15"},{"nativeSrc":"23674:139:15","nodeType":"YulAssignment","src":"23674:139:15","value":{"arguments":[{"name":"tail","nativeSrc":"23808:4:15","nodeType":"YulIdentifier","src":"23808:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_69902dfe75c7b10b3f4c7f15ab3035e10d37d1252e7958f42e3561a4fdcf702e_to_t_string_memory_ptr_fromStack","nativeSrc":"23682:124:15","nodeType":"YulIdentifier","src":"23682:124:15"},"nativeSrc":"23682:131:15","nodeType":"YulFunctionCall","src":"23682:131:15"},"variableNames":[{"name":"tail","nativeSrc":"23674:4:15","nodeType":"YulIdentifier","src":"23674:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_69902dfe75c7b10b3f4c7f15ab3035e10d37d1252e7958f42e3561a4fdcf702e__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"23401:419:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23552:9:15","nodeType":"YulTypedName","src":"23552:9:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23567:4:15","nodeType":"YulTypedName","src":"23567:4:15","type":""}],"src":"23401:419:15"},{"body":{"nativeSrc":"23932:49:15","nodeType":"YulBlock","src":"23932:49:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"23954:6:15","nodeType":"YulIdentifier","src":"23954:6:15"},{"kind":"number","nativeSrc":"23962:1:15","nodeType":"YulLiteral","src":"23962:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23950:3:15","nodeType":"YulIdentifier","src":"23950:3:15"},"nativeSrc":"23950:14:15","nodeType":"YulFunctionCall","src":"23950:14:15"},{"hexValue":"4c6f772042","kind":"string","nativeSrc":"23966:7:15","nodeType":"YulLiteral","src":"23966:7:15","type":"","value":"Low B"}],"functionName":{"name":"mstore","nativeSrc":"23943:6:15","nodeType":"YulIdentifier","src":"23943:6:15"},"nativeSrc":"23943:31:15","nodeType":"YulFunctionCall","src":"23943:31:15"},"nativeSrc":"23943:31:15","nodeType":"YulExpressionStatement","src":"23943:31:15"}]},"name":"store_literal_in_memory_9b4680a6e5dbafb04d954c8f10ca3a3eab0f67bdabfcc85b02337522a3853c7a","nativeSrc":"23826:155:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"23924:6:15","nodeType":"YulTypedName","src":"23924:6:15","type":""}],"src":"23826:155:15"},{"body":{"nativeSrc":"24133:219:15","nodeType":"YulBlock","src":"24133:219:15","statements":[{"nativeSrc":"24143:73:15","nodeType":"YulAssignment","src":"24143:73:15","value":{"arguments":[{"name":"pos","nativeSrc":"24209:3:15","nodeType":"YulIdentifier","src":"24209:3:15"},{"kind":"number","nativeSrc":"24214:1:15","nodeType":"YulLiteral","src":"24214:1:15","type":"","value":"5"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"24150:58:15","nodeType":"YulIdentifier","src":"24150:58:15"},"nativeSrc":"24150:66:15","nodeType":"YulFunctionCall","src":"24150:66:15"},"variableNames":[{"name":"pos","nativeSrc":"24143:3:15","nodeType":"YulIdentifier","src":"24143:3:15"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"24314:3:15","nodeType":"YulIdentifier","src":"24314:3:15"}],"functionName":{"name":"store_literal_in_memory_9b4680a6e5dbafb04d954c8f10ca3a3eab0f67bdabfcc85b02337522a3853c7a","nativeSrc":"24225:88:15","nodeType":"YulIdentifier","src":"24225:88:15"},"nativeSrc":"24225:93:15","nodeType":"YulFunctionCall","src":"24225:93:15"},"nativeSrc":"24225:93:15","nodeType":"YulExpressionStatement","src":"24225:93:15"},{"nativeSrc":"24327:19:15","nodeType":"YulAssignment","src":"24327:19:15","value":{"arguments":[{"name":"pos","nativeSrc":"24338:3:15","nodeType":"YulIdentifier","src":"24338:3:15"},{"kind":"number","nativeSrc":"24343:2:15","nodeType":"YulLiteral","src":"24343:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24334:3:15","nodeType":"YulIdentifier","src":"24334:3:15"},"nativeSrc":"24334:12:15","nodeType":"YulFunctionCall","src":"24334:12:15"},"variableNames":[{"name":"end","nativeSrc":"24327:3:15","nodeType":"YulIdentifier","src":"24327:3:15"}]}]},"name":"abi_encode_t_stringliteral_9b4680a6e5dbafb04d954c8f10ca3a3eab0f67bdabfcc85b02337522a3853c7a_to_t_string_memory_ptr_fromStack","nativeSrc":"23987:365:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"24121:3:15","nodeType":"YulTypedName","src":"24121:3:15","type":""}],"returnVariables":[{"name":"end","nativeSrc":"24129:3:15","nodeType":"YulTypedName","src":"24129:3:15","type":""}],"src":"23987:365:15"},{"body":{"nativeSrc":"24529:248:15","nodeType":"YulBlock","src":"24529:248:15","statements":[{"nativeSrc":"24539:26:15","nodeType":"YulAssignment","src":"24539:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"24551:9:15","nodeType":"YulIdentifier","src":"24551:9:15"},{"kind":"number","nativeSrc":"24562:2:15","nodeType":"YulLiteral","src":"24562:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24547:3:15","nodeType":"YulIdentifier","src":"24547:3:15"},"nativeSrc":"24547:18:15","nodeType":"YulFunctionCall","src":"24547:18:15"},"variableNames":[{"name":"tail","nativeSrc":"24539:4:15","nodeType":"YulIdentifier","src":"24539:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24586:9:15","nodeType":"YulIdentifier","src":"24586:9:15"},{"kind":"number","nativeSrc":"24597:1:15","nodeType":"YulLiteral","src":"24597:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24582:3:15","nodeType":"YulIdentifier","src":"24582:3:15"},"nativeSrc":"24582:17:15","nodeType":"YulFunctionCall","src":"24582:17:15"},{"arguments":[{"name":"tail","nativeSrc":"24605:4:15","nodeType":"YulIdentifier","src":"24605:4:15"},{"name":"headStart","nativeSrc":"24611:9:15","nodeType":"YulIdentifier","src":"24611:9:15"}],"functionName":{"name":"sub","nativeSrc":"24601:3:15","nodeType":"YulIdentifier","src":"24601:3:15"},"nativeSrc":"24601:20:15","nodeType":"YulFunctionCall","src":"24601:20:15"}],"functionName":{"name":"mstore","nativeSrc":"24575:6:15","nodeType":"YulIdentifier","src":"24575:6:15"},"nativeSrc":"24575:47:15","nodeType":"YulFunctionCall","src":"24575:47:15"},"nativeSrc":"24575:47:15","nodeType":"YulExpressionStatement","src":"24575:47:15"},{"nativeSrc":"24631:139:15","nodeType":"YulAssignment","src":"24631:139:15","value":{"arguments":[{"name":"tail","nativeSrc":"24765:4:15","nodeType":"YulIdentifier","src":"24765:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_9b4680a6e5dbafb04d954c8f10ca3a3eab0f67bdabfcc85b02337522a3853c7a_to_t_string_memory_ptr_fromStack","nativeSrc":"24639:124:15","nodeType":"YulIdentifier","src":"24639:124:15"},"nativeSrc":"24639:131:15","nodeType":"YulFunctionCall","src":"24639:131:15"},"variableNames":[{"name":"tail","nativeSrc":"24631:4:15","nodeType":"YulIdentifier","src":"24631:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_9b4680a6e5dbafb04d954c8f10ca3a3eab0f67bdabfcc85b02337522a3853c7a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"24358:419:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24509:9:15","nodeType":"YulTypedName","src":"24509:9:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24524:4:15","nodeType":"YulTypedName","src":"24524:4:15","type":""}],"src":"24358:419:15"},{"body":{"nativeSrc":"24889:62:15","nodeType":"YulBlock","src":"24889:62:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"24911:6:15","nodeType":"YulIdentifier","src":"24911:6:15"},{"kind":"number","nativeSrc":"24919:1:15","nodeType":"YulLiteral","src":"24919:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24907:3:15","nodeType":"YulIdentifier","src":"24907:3:15"},"nativeSrc":"24907:14:15","nodeType":"YulFunctionCall","src":"24907:14:15"},{"hexValue":"546f6b656e73206d75737420646966666572","kind":"string","nativeSrc":"24923:20:15","nodeType":"YulLiteral","src":"24923:20:15","type":"","value":"Tokens must differ"}],"functionName":{"name":"mstore","nativeSrc":"24900:6:15","nodeType":"YulIdentifier","src":"24900:6:15"},"nativeSrc":"24900:44:15","nodeType":"YulFunctionCall","src":"24900:44:15"},"nativeSrc":"24900:44:15","nodeType":"YulExpressionStatement","src":"24900:44:15"}]},"name":"store_literal_in_memory_aec8de1944c8062853ad7bacb3b254b77bce1c5962bbfbeea01dd017ed24051b","nativeSrc":"24783:168:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"24881:6:15","nodeType":"YulTypedName","src":"24881:6:15","type":""}],"src":"24783:168:15"},{"body":{"nativeSrc":"25103:220:15","nodeType":"YulBlock","src":"25103:220:15","statements":[{"nativeSrc":"25113:74:15","nodeType":"YulAssignment","src":"25113:74:15","value":{"arguments":[{"name":"pos","nativeSrc":"25179:3:15","nodeType":"YulIdentifier","src":"25179:3:15"},{"kind":"number","nativeSrc":"25184:2:15","nodeType":"YulLiteral","src":"25184:2:15","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"25120:58:15","nodeType":"YulIdentifier","src":"25120:58:15"},"nativeSrc":"25120:67:15","nodeType":"YulFunctionCall","src":"25120:67:15"},"variableNames":[{"name":"pos","nativeSrc":"25113:3:15","nodeType":"YulIdentifier","src":"25113:3:15"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"25285:3:15","nodeType":"YulIdentifier","src":"25285:3:15"}],"functionName":{"name":"store_literal_in_memory_aec8de1944c8062853ad7bacb3b254b77bce1c5962bbfbeea01dd017ed24051b","nativeSrc":"25196:88:15","nodeType":"YulIdentifier","src":"25196:88:15"},"nativeSrc":"25196:93:15","nodeType":"YulFunctionCall","src":"25196:93:15"},"nativeSrc":"25196:93:15","nodeType":"YulExpressionStatement","src":"25196:93:15"},{"nativeSrc":"25298:19:15","nodeType":"YulAssignment","src":"25298:19:15","value":{"arguments":[{"name":"pos","nativeSrc":"25309:3:15","nodeType":"YulIdentifier","src":"25309:3:15"},{"kind":"number","nativeSrc":"25314:2:15","nodeType":"YulLiteral","src":"25314:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25305:3:15","nodeType":"YulIdentifier","src":"25305:3:15"},"nativeSrc":"25305:12:15","nodeType":"YulFunctionCall","src":"25305:12:15"},"variableNames":[{"name":"end","nativeSrc":"25298:3:15","nodeType":"YulIdentifier","src":"25298:3:15"}]}]},"name":"abi_encode_t_stringliteral_aec8de1944c8062853ad7bacb3b254b77bce1c5962bbfbeea01dd017ed24051b_to_t_string_memory_ptr_fromStack","nativeSrc":"24957:366:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"25091:3:15","nodeType":"YulTypedName","src":"25091:3:15","type":""}],"returnVariables":[{"name":"end","nativeSrc":"25099:3:15","nodeType":"YulTypedName","src":"25099:3:15","type":""}],"src":"24957:366:15"},{"body":{"nativeSrc":"25500:248:15","nodeType":"YulBlock","src":"25500:248:15","statements":[{"nativeSrc":"25510:26:15","nodeType":"YulAssignment","src":"25510:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"25522:9:15","nodeType":"YulIdentifier","src":"25522:9:15"},{"kind":"number","nativeSrc":"25533:2:15","nodeType":"YulLiteral","src":"25533:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25518:3:15","nodeType":"YulIdentifier","src":"25518:3:15"},"nativeSrc":"25518:18:15","nodeType":"YulFunctionCall","src":"25518:18:15"},"variableNames":[{"name":"tail","nativeSrc":"25510:4:15","nodeType":"YulIdentifier","src":"25510:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25557:9:15","nodeType":"YulIdentifier","src":"25557:9:15"},{"kind":"number","nativeSrc":"25568:1:15","nodeType":"YulLiteral","src":"25568:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25553:3:15","nodeType":"YulIdentifier","src":"25553:3:15"},"nativeSrc":"25553:17:15","nodeType":"YulFunctionCall","src":"25553:17:15"},{"arguments":[{"name":"tail","nativeSrc":"25576:4:15","nodeType":"YulIdentifier","src":"25576:4:15"},{"name":"headStart","nativeSrc":"25582:9:15","nodeType":"YulIdentifier","src":"25582:9:15"}],"functionName":{"name":"sub","nativeSrc":"25572:3:15","nodeType":"YulIdentifier","src":"25572:3:15"},"nativeSrc":"25572:20:15","nodeType":"YulFunctionCall","src":"25572:20:15"}],"functionName":{"name":"mstore","nativeSrc":"25546:6:15","nodeType":"YulIdentifier","src":"25546:6:15"},"nativeSrc":"25546:47:15","nodeType":"YulFunctionCall","src":"25546:47:15"},"nativeSrc":"25546:47:15","nodeType":"YulExpressionStatement","src":"25546:47:15"},{"nativeSrc":"25602:139:15","nodeType":"YulAssignment","src":"25602:139:15","value":{"arguments":[{"name":"tail","nativeSrc":"25736:4:15","nodeType":"YulIdentifier","src":"25736:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_aec8de1944c8062853ad7bacb3b254b77bce1c5962bbfbeea01dd017ed24051b_to_t_string_memory_ptr_fromStack","nativeSrc":"25610:124:15","nodeType":"YulIdentifier","src":"25610:124:15"},"nativeSrc":"25610:131:15","nodeType":"YulFunctionCall","src":"25610:131:15"},"variableNames":[{"name":"tail","nativeSrc":"25602:4:15","nodeType":"YulIdentifier","src":"25602:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_aec8de1944c8062853ad7bacb3b254b77bce1c5962bbfbeea01dd017ed24051b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"25329:419:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25480:9:15","nodeType":"YulTypedName","src":"25480:9:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25495:4:15","nodeType":"YulTypedName","src":"25495:4:15","type":""}],"src":"25329:419:15"},{"body":{"nativeSrc":"25860:54:15","nodeType":"YulBlock","src":"25860:54:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"25882:6:15","nodeType":"YulIdentifier","src":"25882:6:15"},{"kind":"number","nativeSrc":"25890:1:15","nodeType":"YulLiteral","src":"25890:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25878:3:15","nodeType":"YulIdentifier","src":"25878:3:15"},"nativeSrc":"25878:14:15","nodeType":"YulFunctionCall","src":"25878:14:15"},{"hexValue":"546f6f206d7563682042","kind":"string","nativeSrc":"25894:12:15","nodeType":"YulLiteral","src":"25894:12:15","type":"","value":"Too much B"}],"functionName":{"name":"mstore","nativeSrc":"25871:6:15","nodeType":"YulIdentifier","src":"25871:6:15"},"nativeSrc":"25871:36:15","nodeType":"YulFunctionCall","src":"25871:36:15"},"nativeSrc":"25871:36:15","nodeType":"YulExpressionStatement","src":"25871:36:15"}]},"name":"store_literal_in_memory_26f0a2045ce22408683f49e1a133e0a75f723f441317abcc52f73491714cf56c","nativeSrc":"25754:160:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"25852:6:15","nodeType":"YulTypedName","src":"25852:6:15","type":""}],"src":"25754:160:15"},{"body":{"nativeSrc":"26066:220:15","nodeType":"YulBlock","src":"26066:220:15","statements":[{"nativeSrc":"26076:74:15","nodeType":"YulAssignment","src":"26076:74:15","value":{"arguments":[{"name":"pos","nativeSrc":"26142:3:15","nodeType":"YulIdentifier","src":"26142:3:15"},{"kind":"number","nativeSrc":"26147:2:15","nodeType":"YulLiteral","src":"26147:2:15","type":"","value":"10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"26083:58:15","nodeType":"YulIdentifier","src":"26083:58:15"},"nativeSrc":"26083:67:15","nodeType":"YulFunctionCall","src":"26083:67:15"},"variableNames":[{"name":"pos","nativeSrc":"26076:3:15","nodeType":"YulIdentifier","src":"26076:3:15"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"26248:3:15","nodeType":"YulIdentifier","src":"26248:3:15"}],"functionName":{"name":"store_literal_in_memory_26f0a2045ce22408683f49e1a133e0a75f723f441317abcc52f73491714cf56c","nativeSrc":"26159:88:15","nodeType":"YulIdentifier","src":"26159:88:15"},"nativeSrc":"26159:93:15","nodeType":"YulFunctionCall","src":"26159:93:15"},"nativeSrc":"26159:93:15","nodeType":"YulExpressionStatement","src":"26159:93:15"},{"nativeSrc":"26261:19:15","nodeType":"YulAssignment","src":"26261:19:15","value":{"arguments":[{"name":"pos","nativeSrc":"26272:3:15","nodeType":"YulIdentifier","src":"26272:3:15"},{"kind":"number","nativeSrc":"26277:2:15","nodeType":"YulLiteral","src":"26277:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26268:3:15","nodeType":"YulIdentifier","src":"26268:3:15"},"nativeSrc":"26268:12:15","nodeType":"YulFunctionCall","src":"26268:12:15"},"variableNames":[{"name":"end","nativeSrc":"26261:3:15","nodeType":"YulIdentifier","src":"26261:3:15"}]}]},"name":"abi_encode_t_stringliteral_26f0a2045ce22408683f49e1a133e0a75f723f441317abcc52f73491714cf56c_to_t_string_memory_ptr_fromStack","nativeSrc":"25920:366:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"26054:3:15","nodeType":"YulTypedName","src":"26054:3:15","type":""}],"returnVariables":[{"name":"end","nativeSrc":"26062:3:15","nodeType":"YulTypedName","src":"26062:3:15","type":""}],"src":"25920:366:15"},{"body":{"nativeSrc":"26463:248:15","nodeType":"YulBlock","src":"26463:248:15","statements":[{"nativeSrc":"26473:26:15","nodeType":"YulAssignment","src":"26473:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"26485:9:15","nodeType":"YulIdentifier","src":"26485:9:15"},{"kind":"number","nativeSrc":"26496:2:15","nodeType":"YulLiteral","src":"26496:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26481:3:15","nodeType":"YulIdentifier","src":"26481:3:15"},"nativeSrc":"26481:18:15","nodeType":"YulFunctionCall","src":"26481:18:15"},"variableNames":[{"name":"tail","nativeSrc":"26473:4:15","nodeType":"YulIdentifier","src":"26473:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26520:9:15","nodeType":"YulIdentifier","src":"26520:9:15"},{"kind":"number","nativeSrc":"26531:1:15","nodeType":"YulLiteral","src":"26531:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"26516:3:15","nodeType":"YulIdentifier","src":"26516:3:15"},"nativeSrc":"26516:17:15","nodeType":"YulFunctionCall","src":"26516:17:15"},{"arguments":[{"name":"tail","nativeSrc":"26539:4:15","nodeType":"YulIdentifier","src":"26539:4:15"},{"name":"headStart","nativeSrc":"26545:9:15","nodeType":"YulIdentifier","src":"26545:9:15"}],"functionName":{"name":"sub","nativeSrc":"26535:3:15","nodeType":"YulIdentifier","src":"26535:3:15"},"nativeSrc":"26535:20:15","nodeType":"YulFunctionCall","src":"26535:20:15"}],"functionName":{"name":"mstore","nativeSrc":"26509:6:15","nodeType":"YulIdentifier","src":"26509:6:15"},"nativeSrc":"26509:47:15","nodeType":"YulFunctionCall","src":"26509:47:15"},"nativeSrc":"26509:47:15","nodeType":"YulExpressionStatement","src":"26509:47:15"},{"nativeSrc":"26565:139:15","nodeType":"YulAssignment","src":"26565:139:15","value":{"arguments":[{"name":"tail","nativeSrc":"26699:4:15","nodeType":"YulIdentifier","src":"26699:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_26f0a2045ce22408683f49e1a133e0a75f723f441317abcc52f73491714cf56c_to_t_string_memory_ptr_fromStack","nativeSrc":"26573:124:15","nodeType":"YulIdentifier","src":"26573:124:15"},"nativeSrc":"26573:131:15","nodeType":"YulFunctionCall","src":"26573:131:15"},"variableNames":[{"name":"tail","nativeSrc":"26565:4:15","nodeType":"YulIdentifier","src":"26565:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_26f0a2045ce22408683f49e1a133e0a75f723f441317abcc52f73491714cf56c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"26292:419:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26443:9:15","nodeType":"YulTypedName","src":"26443:9:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26458:4:15","nodeType":"YulTypedName","src":"26458:4:15","type":""}],"src":"26292:419:15"},{"body":{"nativeSrc":"26823:58:15","nodeType":"YulBlock","src":"26823:58:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"26845:6:15","nodeType":"YulIdentifier","src":"26845:6:15"},{"kind":"number","nativeSrc":"26853:1:15","nodeType":"YulLiteral","src":"26853:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"26841:3:15","nodeType":"YulIdentifier","src":"26841:3:15"},"nativeSrc":"26841:14:15","nodeType":"YulFunctionCall","src":"26841:14:15"},{"hexValue":"5a65726f206c6971756964697479","kind":"string","nativeSrc":"26857:16:15","nodeType":"YulLiteral","src":"26857:16:15","type":"","value":"Zero liquidity"}],"functionName":{"name":"mstore","nativeSrc":"26834:6:15","nodeType":"YulIdentifier","src":"26834:6:15"},"nativeSrc":"26834:40:15","nodeType":"YulFunctionCall","src":"26834:40:15"},"nativeSrc":"26834:40:15","nodeType":"YulExpressionStatement","src":"26834:40:15"}]},"name":"store_literal_in_memory_b92817ebaa76de1bc1b1ef78878a5feea9c14a36ac8f9eae26db98a6f7f9807c","nativeSrc":"26717:164:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"26815:6:15","nodeType":"YulTypedName","src":"26815:6:15","type":""}],"src":"26717:164:15"},{"body":{"nativeSrc":"27033:220:15","nodeType":"YulBlock","src":"27033:220:15","statements":[{"nativeSrc":"27043:74:15","nodeType":"YulAssignment","src":"27043:74:15","value":{"arguments":[{"name":"pos","nativeSrc":"27109:3:15","nodeType":"YulIdentifier","src":"27109:3:15"},{"kind":"number","nativeSrc":"27114:2:15","nodeType":"YulLiteral","src":"27114:2:15","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"27050:58:15","nodeType":"YulIdentifier","src":"27050:58:15"},"nativeSrc":"27050:67:15","nodeType":"YulFunctionCall","src":"27050:67:15"},"variableNames":[{"name":"pos","nativeSrc":"27043:3:15","nodeType":"YulIdentifier","src":"27043:3:15"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"27215:3:15","nodeType":"YulIdentifier","src":"27215:3:15"}],"functionName":{"name":"store_literal_in_memory_b92817ebaa76de1bc1b1ef78878a5feea9c14a36ac8f9eae26db98a6f7f9807c","nativeSrc":"27126:88:15","nodeType":"YulIdentifier","src":"27126:88:15"},"nativeSrc":"27126:93:15","nodeType":"YulFunctionCall","src":"27126:93:15"},"nativeSrc":"27126:93:15","nodeType":"YulExpressionStatement","src":"27126:93:15"},{"nativeSrc":"27228:19:15","nodeType":"YulAssignment","src":"27228:19:15","value":{"arguments":[{"name":"pos","nativeSrc":"27239:3:15","nodeType":"YulIdentifier","src":"27239:3:15"},{"kind":"number","nativeSrc":"27244:2:15","nodeType":"YulLiteral","src":"27244:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27235:3:15","nodeType":"YulIdentifier","src":"27235:3:15"},"nativeSrc":"27235:12:15","nodeType":"YulFunctionCall","src":"27235:12:15"},"variableNames":[{"name":"end","nativeSrc":"27228:3:15","nodeType":"YulIdentifier","src":"27228:3:15"}]}]},"name":"abi_encode_t_stringliteral_b92817ebaa76de1bc1b1ef78878a5feea9c14a36ac8f9eae26db98a6f7f9807c_to_t_string_memory_ptr_fromStack","nativeSrc":"26887:366:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"27021:3:15","nodeType":"YulTypedName","src":"27021:3:15","type":""}],"returnVariables":[{"name":"end","nativeSrc":"27029:3:15","nodeType":"YulTypedName","src":"27029:3:15","type":""}],"src":"26887:366:15"},{"body":{"nativeSrc":"27430:248:15","nodeType":"YulBlock","src":"27430:248:15","statements":[{"nativeSrc":"27440:26:15","nodeType":"YulAssignment","src":"27440:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"27452:9:15","nodeType":"YulIdentifier","src":"27452:9:15"},{"kind":"number","nativeSrc":"27463:2:15","nodeType":"YulLiteral","src":"27463:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27448:3:15","nodeType":"YulIdentifier","src":"27448:3:15"},"nativeSrc":"27448:18:15","nodeType":"YulFunctionCall","src":"27448:18:15"},"variableNames":[{"name":"tail","nativeSrc":"27440:4:15","nodeType":"YulIdentifier","src":"27440:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27487:9:15","nodeType":"YulIdentifier","src":"27487:9:15"},{"kind":"number","nativeSrc":"27498:1:15","nodeType":"YulLiteral","src":"27498:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27483:3:15","nodeType":"YulIdentifier","src":"27483:3:15"},"nativeSrc":"27483:17:15","nodeType":"YulFunctionCall","src":"27483:17:15"},{"arguments":[{"name":"tail","nativeSrc":"27506:4:15","nodeType":"YulIdentifier","src":"27506:4:15"},{"name":"headStart","nativeSrc":"27512:9:15","nodeType":"YulIdentifier","src":"27512:9:15"}],"functionName":{"name":"sub","nativeSrc":"27502:3:15","nodeType":"YulIdentifier","src":"27502:3:15"},"nativeSrc":"27502:20:15","nodeType":"YulFunctionCall","src":"27502:20:15"}],"functionName":{"name":"mstore","nativeSrc":"27476:6:15","nodeType":"YulIdentifier","src":"27476:6:15"},"nativeSrc":"27476:47:15","nodeType":"YulFunctionCall","src":"27476:47:15"},"nativeSrc":"27476:47:15","nodeType":"YulExpressionStatement","src":"27476:47:15"},{"nativeSrc":"27532:139:15","nodeType":"YulAssignment","src":"27532:139:15","value":{"arguments":[{"name":"tail","nativeSrc":"27666:4:15","nodeType":"YulIdentifier","src":"27666:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_b92817ebaa76de1bc1b1ef78878a5feea9c14a36ac8f9eae26db98a6f7f9807c_to_t_string_memory_ptr_fromStack","nativeSrc":"27540:124:15","nodeType":"YulIdentifier","src":"27540:124:15"},"nativeSrc":"27540:131:15","nodeType":"YulFunctionCall","src":"27540:131:15"},"variableNames":[{"name":"tail","nativeSrc":"27532:4:15","nodeType":"YulIdentifier","src":"27532:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_b92817ebaa76de1bc1b1ef78878a5feea9c14a36ac8f9eae26db98a6f7f9807c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"27259:419:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27410:9:15","nodeType":"YulTypedName","src":"27410:9:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27425:4:15","nodeType":"YulTypedName","src":"27425:4:15","type":""}],"src":"27259:419:15"},{"body":{"nativeSrc":"27838:288:15","nodeType":"YulBlock","src":"27838:288:15","statements":[{"nativeSrc":"27848:26:15","nodeType":"YulAssignment","src":"27848:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"27860:9:15","nodeType":"YulIdentifier","src":"27860:9:15"},{"kind":"number","nativeSrc":"27871:2:15","nodeType":"YulLiteral","src":"27871:2:15","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"27856:3:15","nodeType":"YulIdentifier","src":"27856:3:15"},"nativeSrc":"27856:18:15","nodeType":"YulFunctionCall","src":"27856:18:15"},"variableNames":[{"name":"tail","nativeSrc":"27848:4:15","nodeType":"YulIdentifier","src":"27848:4:15"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"27928:6:15","nodeType":"YulIdentifier","src":"27928:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"27941:9:15","nodeType":"YulIdentifier","src":"27941:9:15"},{"kind":"number","nativeSrc":"27952:1:15","nodeType":"YulLiteral","src":"27952:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27937:3:15","nodeType":"YulIdentifier","src":"27937:3:15"},"nativeSrc":"27937:17:15","nodeType":"YulFunctionCall","src":"27937:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"27884:43:15","nodeType":"YulIdentifier","src":"27884:43:15"},"nativeSrc":"27884:71:15","nodeType":"YulFunctionCall","src":"27884:71:15"},"nativeSrc":"27884:71:15","nodeType":"YulExpressionStatement","src":"27884:71:15"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"28009:6:15","nodeType":"YulIdentifier","src":"28009:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"28022:9:15","nodeType":"YulIdentifier","src":"28022:9:15"},{"kind":"number","nativeSrc":"28033:2:15","nodeType":"YulLiteral","src":"28033:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28018:3:15","nodeType":"YulIdentifier","src":"28018:3:15"},"nativeSrc":"28018:18:15","nodeType":"YulFunctionCall","src":"28018:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"27965:43:15","nodeType":"YulIdentifier","src":"27965:43:15"},"nativeSrc":"27965:72:15","nodeType":"YulFunctionCall","src":"27965:72:15"},"nativeSrc":"27965:72:15","nodeType":"YulExpressionStatement","src":"27965:72:15"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"28091:6:15","nodeType":"YulIdentifier","src":"28091:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"28104:9:15","nodeType":"YulIdentifier","src":"28104:9:15"},{"kind":"number","nativeSrc":"28115:2:15","nodeType":"YulLiteral","src":"28115:2:15","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"28100:3:15","nodeType":"YulIdentifier","src":"28100:3:15"},"nativeSrc":"28100:18:15","nodeType":"YulFunctionCall","src":"28100:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"28047:43:15","nodeType":"YulIdentifier","src":"28047:43:15"},"nativeSrc":"28047:72:15","nodeType":"YulFunctionCall","src":"28047:72:15"},"nativeSrc":"28047:72:15","nodeType":"YulExpressionStatement","src":"28047:72:15"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"27684:442:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27794:9:15","nodeType":"YulTypedName","src":"27794:9:15","type":""},{"name":"value2","nativeSrc":"27806:6:15","nodeType":"YulTypedName","src":"27806:6:15","type":""},{"name":"value1","nativeSrc":"27814:6:15","nodeType":"YulTypedName","src":"27814:6:15","type":""},{"name":"value0","nativeSrc":"27822:6:15","nodeType":"YulTypedName","src":"27822:6:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27833:4:15","nodeType":"YulTypedName","src":"27833:4:15","type":""}],"src":"27684:442:15"},{"body":{"nativeSrc":"28286:288:15","nodeType":"YulBlock","src":"28286:288:15","statements":[{"nativeSrc":"28296:26:15","nodeType":"YulAssignment","src":"28296:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"28308:9:15","nodeType":"YulIdentifier","src":"28308:9:15"},{"kind":"number","nativeSrc":"28319:2:15","nodeType":"YulLiteral","src":"28319:2:15","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"28304:3:15","nodeType":"YulIdentifier","src":"28304:3:15"},"nativeSrc":"28304:18:15","nodeType":"YulFunctionCall","src":"28304:18:15"},"variableNames":[{"name":"tail","nativeSrc":"28296:4:15","nodeType":"YulIdentifier","src":"28296:4:15"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"28376:6:15","nodeType":"YulIdentifier","src":"28376:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"28389:9:15","nodeType":"YulIdentifier","src":"28389:9:15"},{"kind":"number","nativeSrc":"28400:1:15","nodeType":"YulLiteral","src":"28400:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28385:3:15","nodeType":"YulIdentifier","src":"28385:3:15"},"nativeSrc":"28385:17:15","nodeType":"YulFunctionCall","src":"28385:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"28332:43:15","nodeType":"YulIdentifier","src":"28332:43:15"},"nativeSrc":"28332:71:15","nodeType":"YulFunctionCall","src":"28332:71:15"},"nativeSrc":"28332:71:15","nodeType":"YulExpressionStatement","src":"28332:71:15"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"28457:6:15","nodeType":"YulIdentifier","src":"28457:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"28470:9:15","nodeType":"YulIdentifier","src":"28470:9:15"},{"kind":"number","nativeSrc":"28481:2:15","nodeType":"YulLiteral","src":"28481:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28466:3:15","nodeType":"YulIdentifier","src":"28466:3:15"},"nativeSrc":"28466:18:15","nodeType":"YulFunctionCall","src":"28466:18:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"28413:43:15","nodeType":"YulIdentifier","src":"28413:43:15"},"nativeSrc":"28413:72:15","nodeType":"YulFunctionCall","src":"28413:72:15"},"nativeSrc":"28413:72:15","nodeType":"YulExpressionStatement","src":"28413:72:15"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"28539:6:15","nodeType":"YulIdentifier","src":"28539:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"28552:9:15","nodeType":"YulIdentifier","src":"28552:9:15"},{"kind":"number","nativeSrc":"28563:2:15","nodeType":"YulLiteral","src":"28563:2:15","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"28548:3:15","nodeType":"YulIdentifier","src":"28548:3:15"},"nativeSrc":"28548:18:15","nodeType":"YulFunctionCall","src":"28548:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"28495:43:15","nodeType":"YulIdentifier","src":"28495:43:15"},"nativeSrc":"28495:72:15","nodeType":"YulFunctionCall","src":"28495:72:15"},"nativeSrc":"28495:72:15","nodeType":"YulExpressionStatement","src":"28495:72:15"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"28132:442:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"28242:9:15","nodeType":"YulTypedName","src":"28242:9:15","type":""},{"name":"value2","nativeSrc":"28254:6:15","nodeType":"YulTypedName","src":"28254:6:15","type":""},{"name":"value1","nativeSrc":"28262:6:15","nodeType":"YulTypedName","src":"28262:6:15","type":""},{"name":"value0","nativeSrc":"28270:6:15","nodeType":"YulTypedName","src":"28270:6:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"28281:4:15","nodeType":"YulTypedName","src":"28281:4:15","type":""}],"src":"28132:442:15"},{"body":{"nativeSrc":"28706:206:15","nodeType":"YulBlock","src":"28706:206:15","statements":[{"nativeSrc":"28716:26:15","nodeType":"YulAssignment","src":"28716:26:15","value":{"arguments":[{"name":"headStart","nativeSrc":"28728:9:15","nodeType":"YulIdentifier","src":"28728:9:15"},{"kind":"number","nativeSrc":"28739:2:15","nodeType":"YulLiteral","src":"28739:2:15","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"28724:3:15","nodeType":"YulIdentifier","src":"28724:3:15"},"nativeSrc":"28724:18:15","nodeType":"YulFunctionCall","src":"28724:18:15"},"variableNames":[{"name":"tail","nativeSrc":"28716:4:15","nodeType":"YulIdentifier","src":"28716:4:15"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"28796:6:15","nodeType":"YulIdentifier","src":"28796:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"28809:9:15","nodeType":"YulIdentifier","src":"28809:9:15"},{"kind":"number","nativeSrc":"28820:1:15","nodeType":"YulLiteral","src":"28820:1:15","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28805:3:15","nodeType":"YulIdentifier","src":"28805:3:15"},"nativeSrc":"28805:17:15","nodeType":"YulFunctionCall","src":"28805:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"28752:43:15","nodeType":"YulIdentifier","src":"28752:43:15"},"nativeSrc":"28752:71:15","nodeType":"YulFunctionCall","src":"28752:71:15"},"nativeSrc":"28752:71:15","nodeType":"YulExpressionStatement","src":"28752:71:15"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"28877:6:15","nodeType":"YulIdentifier","src":"28877:6:15"},{"arguments":[{"name":"headStart","nativeSrc":"28890:9:15","nodeType":"YulIdentifier","src":"28890:9:15"},{"kind":"number","nativeSrc":"28901:2:15","nodeType":"YulLiteral","src":"28901:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28886:3:15","nodeType":"YulIdentifier","src":"28886:3:15"},"nativeSrc":"28886:18:15","nodeType":"YulFunctionCall","src":"28886:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"28833:43:15","nodeType":"YulIdentifier","src":"28833:43:15"},"nativeSrc":"28833:72:15","nodeType":"YulFunctionCall","src":"28833:72:15"},"nativeSrc":"28833:72:15","nodeType":"YulExpressionStatement","src":"28833:72:15"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"28580:332:15","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"28670:9:15","nodeType":"YulTypedName","src":"28670:9:15","type":""},{"name":"value1","nativeSrc":"28682:6:15","nodeType":"YulTypedName","src":"28682:6:15","type":""},{"name":"value0","nativeSrc":"28690:6:15","nodeType":"YulTypedName","src":"28690:6:15","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"28701:4:15","nodeType":"YulTypedName","src":"28701:4:15","type":""}],"src":"28580:332:15"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_dc186d373dd540cb9fb96bc11c9900e230b3d537c77cb1630f42b8b4fd4a54f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Zero input\")\n\n    }\n\n    function abi_encode_t_stringliteral_dc186d373dd540cb9fb96bc11c9900e230b3d537c77cb1630f42b8b4fd4a54f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_dc186d373dd540cb9fb96bc11c9900e230b3d537c77cb1630f42b8b4fd4a54f4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dc186d373dd540cb9fb96bc11c9900e230b3d537c77cb1630f42b8b4fd4a54f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dc186d373dd540cb9fb96bc11c9900e230b3d537c77cb1630f42b8b4fd4a54f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_971080a6c04a1c3be1ce1e8552e0d8e01640a734e3641d0b551c42f40a93241a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Empty reserves\")\n\n    }\n\n    function abi_encode_t_stringliteral_971080a6c04a1c3be1ce1e8552e0d8e01640a734e3641d0b551c42f40a93241a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_971080a6c04a1c3be1ce1e8552e0d8e01640a734e3641d0b551c42f40a93241a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_971080a6c04a1c3be1ce1e8552e0d8e01640a734e3641d0b551c42f40a93241a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_971080a6c04a1c3be1ce1e8552e0d8e01640a734e3641d0b551c42f40a93241a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13(memPtr) {\n\n        mstore(add(memPtr, 0), \"Expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 7)\n        store_literal_in_memory_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8dbe54bde5d74da7b886f685b9256abb22ad8758ccefb76323dd451857c1a8e0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only 2-token swaps\")\n\n    }\n\n    function abi_encode_t_stringliteral_8dbe54bde5d74da7b886f685b9256abb22ad8758ccefb76323dd451857c1a8e0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_8dbe54bde5d74da7b886f685b9256abb22ad8758ccefb76323dd451857c1a8e0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8dbe54bde5d74da7b886f685b9256abb22ad8758ccefb76323dd451857c1a8e0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8dbe54bde5d74da7b886f685b9256abb22ad8758ccefb76323dd451857c1a8e0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_9c0f63e8972d14555ea708444bdb7eac702c84db57e478aac11f5f962855928a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid swap path\")\n\n    }\n\n    function abi_encode_t_stringliteral_9c0f63e8972d14555ea708444bdb7eac702c84db57e478aac11f5f962855928a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_9c0f63e8972d14555ea708444bdb7eac702c84db57e478aac11f5f962855928a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9c0f63e8972d14555ea708444bdb7eac702c84db57e478aac11f5f962855928a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9c0f63e8972d14555ea708444bdb7eac702c84db57e478aac11f5f962855928a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114(memPtr) {\n\n        mstore(add(memPtr, 0), \"Slippage\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb87c09e63b5ee5d76fa5ada5f7c2fd9de8980c2964f73a791eaef9c4602f114_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_4a0f3a6fe4f2b4139e5c19fc0123996c3c606f417a7c4425be97431d9fd20ea0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token pair\")\n\n    }\n\n    function abi_encode_t_stringliteral_4a0f3a6fe4f2b4139e5c19fc0123996c3c606f417a7c4425be97431d9fd20ea0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_4a0f3a6fe4f2b4139e5c19fc0123996c3c606f417a7c4425be97431d9fd20ea0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4a0f3a6fe4f2b4139e5c19fc0123996c3c606f417a7c4425be97431d9fd20ea0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4a0f3a6fe4f2b4139e5c19fc0123996c3c606f417a7c4425be97431d9fd20ea0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766(memPtr) {\n\n        mstore(add(memPtr, 0), \"No reserves\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8d6698763d2d0ff1e31fa7f43b504a63f09c2932b87b9842c093ff74de4d766_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a93d804a59195ce513d1e630391944a5504763fe44cb40791850992ca75b1c1d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough LP\")\n\n    }\n\n    function abi_encode_t_stringliteral_a93d804a59195ce513d1e630391944a5504763fe44cb40791850992ca75b1c1d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_a93d804a59195ce513d1e630391944a5504763fe44cb40791850992ca75b1c1d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a93d804a59195ce513d1e630391944a5504763fe44cb40791850992ca75b1c1d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a93d804a59195ce513d1e630391944a5504763fe44cb40791850992ca75b1c1d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_69902dfe75c7b10b3f4c7f15ab3035e10d37d1252e7958f42e3561a4fdcf702e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Low A\")\n\n    }\n\n    function abi_encode_t_stringliteral_69902dfe75c7b10b3f4c7f15ab3035e10d37d1252e7958f42e3561a4fdcf702e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 5)\n        store_literal_in_memory_69902dfe75c7b10b3f4c7f15ab3035e10d37d1252e7958f42e3561a4fdcf702e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_69902dfe75c7b10b3f4c7f15ab3035e10d37d1252e7958f42e3561a4fdcf702e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_69902dfe75c7b10b3f4c7f15ab3035e10d37d1252e7958f42e3561a4fdcf702e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9b4680a6e5dbafb04d954c8f10ca3a3eab0f67bdabfcc85b02337522a3853c7a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Low B\")\n\n    }\n\n    function abi_encode_t_stringliteral_9b4680a6e5dbafb04d954c8f10ca3a3eab0f67bdabfcc85b02337522a3853c7a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 5)\n        store_literal_in_memory_9b4680a6e5dbafb04d954c8f10ca3a3eab0f67bdabfcc85b02337522a3853c7a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9b4680a6e5dbafb04d954c8f10ca3a3eab0f67bdabfcc85b02337522a3853c7a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9b4680a6e5dbafb04d954c8f10ca3a3eab0f67bdabfcc85b02337522a3853c7a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_aec8de1944c8062853ad7bacb3b254b77bce1c5962bbfbeea01dd017ed24051b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tokens must differ\")\n\n    }\n\n    function abi_encode_t_stringliteral_aec8de1944c8062853ad7bacb3b254b77bce1c5962bbfbeea01dd017ed24051b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_aec8de1944c8062853ad7bacb3b254b77bce1c5962bbfbeea01dd017ed24051b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_aec8de1944c8062853ad7bacb3b254b77bce1c5962bbfbeea01dd017ed24051b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aec8de1944c8062853ad7bacb3b254b77bce1c5962bbfbeea01dd017ed24051b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_26f0a2045ce22408683f49e1a133e0a75f723f441317abcc52f73491714cf56c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Too much B\")\n\n    }\n\n    function abi_encode_t_stringliteral_26f0a2045ce22408683f49e1a133e0a75f723f441317abcc52f73491714cf56c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_26f0a2045ce22408683f49e1a133e0a75f723f441317abcc52f73491714cf56c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_26f0a2045ce22408683f49e1a133e0a75f723f441317abcc52f73491714cf56c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_26f0a2045ce22408683f49e1a133e0a75f723f441317abcc52f73491714cf56c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b92817ebaa76de1bc1b1ef78878a5feea9c14a36ac8f9eae26db98a6f7f9807c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Zero liquidity\")\n\n    }\n\n    function abi_encode_t_stringliteral_b92817ebaa76de1bc1b1ef78878a5feea9c14a36ac8f9eae26db98a6f7f9807c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_b92817ebaa76de1bc1b1ef78878a5feea9c14a36ac8f9eae26db98a6f7f9807c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b92817ebaa76de1bc1b1ef78878a5feea9c14a36ac8f9eae26db98a6f7f9807c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b92817ebaa76de1bc1b1ef78878a5feea9c14a36ac8f9eae26db98a6f7f9807c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063baa2abde11610071578063baa2abde1461030b578063dc5fa6c51461033c578063dd62ed3e1461035a578063e8e337001461038a578063eed86c96146103bc57610116565b806370a082311461025d57806395d89b411461028d578063a9059cbb146102ab578063ac41865a146102db57610116565b806319e36f3b116100e957806319e36f3b146101b757806323b872dd146101d5578063313ce5671461020557806338ed17391461022357806350430ce41461023f57610116565b8063054d50d41461011b57806306fdde031461014b578063095ea7b31461016957806318160ddd14610199575b600080fd5b61013560048036038101906101309190612008565b6103da565b604051610142919061206a565b60405180910390f35b610153610498565b6040516101609190612115565b60405180910390f35b610183600480360381019061017e9190612195565b61052a565b60405161019091906121f0565b60405180910390f35b6101a161054d565b6040516101ae919061206a565b60405180910390f35b6101bf610557565b6040516101cc919061206a565b60405180910390f35b6101ef60048036038101906101ea919061220b565b61055d565b6040516101fc91906121f0565b60405180910390f35b61020d61058c565b60405161021a919061227a565b60405180910390f35b61023d600480360381019061023891906122fa565b610595565b005b610247610991565b60405161025491906123a3565b60405180910390f35b610277600480360381019061027291906123be565b6109b7565b604051610284919061206a565b60405180910390f35b6102956109ff565b6040516102a29190612115565b60405180910390f35b6102c560048036038101906102c09190612195565b610a91565b6040516102d291906121f0565b60405180910390f35b6102f560048036038101906102f091906123eb565b610ab4565b604051610302919061206a565b60405180910390f35b6103256004803603810190610320919061242b565b610c9d565b6040516103339291906124cd565b60405180910390f35b610344610ff5565b604051610351919061206a565b60405180910390f35b610374600480360381019061036f91906123eb565b610ffb565b604051610381919061206a565b60405180910390f35b6103a4600480360381019061039f91906124f6565b611082565b6040516103b3939291906125ac565b60405180910390f35b6103c46115b3565b6040516103d191906123a3565b60405180910390f35b600080841161041e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104159061262f565b60405180910390fd5b60008311801561042e5750600082115b61046d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104649061269b565b60405180910390fd5b838361047991906126ea565b8285610485919061271e565b61048f919061278f565b90509392505050565b6060600380546104a7906127ef565b80601f01602080910402602001604051908101604052809291908181526020018280546104d3906127ef565b80156105205780601f106104f557610100808354040283529160200191610520565b820191906000526020600020905b81548152906001019060200180831161050357829003601f168201915b5050505050905090565b6000806105356115d9565b90506105428185856115e1565b600191505092915050565b6000600254905090565b60085481565b6000806105686115d9565b90506105758582856115f3565b610580858585611688565b60019150509392505050565b60006012905090565b804211156105d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cf9061286c565b60405180910390fd5b6002848490501461061e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610615906128d8565b60405180910390fd5b600084846000818110610634576106336128f8565b5b905060200201602081019061064991906123be565b9050600085856001818110610661576106606128f8565b5b905060200201602081019061067691906123be565b90506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614801561072c57508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b8061079957508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614801561079857508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b5b6107d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cf90612973565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161461081957600854600754610820565b6007546008545b9150915061085133308e8973ffffffffffffffffffffffffffffffffffffffff1661177c909392919063ffffffff16565b60008c8361085f91906126ea565b828e61086b919061271e565b610875919061278f565b90508b8110156108ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b1906129df565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603610924578c600760008282546108ff91906126ea565b92505081905550806008600082825461091891906129ff565b92505081905550610957565b8c6008600082825461093691906126ea565b92505081905550806007600082825461094f91906129ff565b925050819055505b61098289828873ffffffffffffffffffffffffffffffffffffffff166117fe9092919063ffffffff16565b50505050505050505050505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054610a0e906127ef565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3a906127ef565b8015610a875780601f10610a5c57610100808354040283529160200191610a87565b820191906000526020600020905b815481529060010190602001808311610a6a57829003601f168201915b5050505050905090565b600080610a9c6115d9565b9050610aa9818585611688565b600191505092915050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148015610b6957508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b80610bd657508073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148015610bd557508173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b5b610c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0c90612a7f565b60405180910390fd5b6000600754905060006008549050600082118015610c335750600081115b610c72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6990612aeb565b60405180910390fd5b81670de0b6b3a764000082610c87919061271e565b610c91919061278f565b94505050505092915050565b60008082421115610ce3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cda9061286c565b60405180910390fd5b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff16148015610d9757508073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16145b80610e0457508073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff16148015610e0357508173ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16145b5b610e43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3a90612a7f565b60405180910390fd5b60006007549050600060085490506000610e5b61054d565b90508b610e67336109b7565b1015610ea8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9f90612b57565b60405180910390fd5b80838d610eb5919061271e565b610ebf919061278f565b965080828d610ece919061271e565b610ed8919061278f565b95508a871015610f1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1490612bc3565b60405180910390fd5b89861015610f60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5790612c2f565b60405180910390fd5b610f6a338d61187d565b8683610f7691906129ff565b6007819055508582610f8891906129ff565b600881905550610fb989888773ffffffffffffffffffffffffffffffffffffffff166117fe9092919063ffffffff16565b610fe489878673ffffffffffffffffffffffffffffffffffffffff166117fe9092919063ffffffff16565b505050505097509795505050505050565b60075481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000806000834211156110ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c19061286c565b60405180910390fd5b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480156111805750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b15611280578b73ffffffffffffffffffffffffffffffffffffffff168d73ffffffffffffffffffffffffffffffffffffffff16036111f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ea90612c9b565b60405180910390fd5b8c600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508b600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508c91508b9050611393565b8173ffffffffffffffffffffffffffffffffffffffff168d73ffffffffffffffffffffffffffffffffffffffff161480156112e657508073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff16145b8061135357508073ffffffffffffffffffffffffffffffffffffffff168d73ffffffffffffffffffffffffffffffffffffffff1614801561135257508173ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff16145b5b611392576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138990612a7f565b60405180910390fd5b5b600060075490506000600854905060006113ab61054d565b9050600081036113d6578d97508c96506113cf87896113ca919061271e565b6118ff565b955061144f565b8d97508282896113e6919061271e565b6113f0919061278f565b96508c871115611435576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142c90612d07565b60405180910390fd5b828189611442919061271e565b61144c919061278f565b95505b8b881015611492576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148990612bc3565b60405180910390fd5b8a8710156114d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114cc90612c2f565b60405180910390fd5b60008611611518576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150f90612d73565b60405180910390fd5b61154533308a8873ffffffffffffffffffffffffffffffffffffffff1661177c909392919063ffffffff16565b6115723330898773ffffffffffffffffffffffffffffffffffffffff1661177c909392919063ffffffff16565b878361157e91906126ea565b600781905550868261159091906126ea565b6008819055506115a08a87611a9c565b5050505050985098509895505050505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6115ee8383836001611b1e565b505050565b60006115ff8484610ffb565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156116825781811015611672578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161166993929190612d93565b60405180910390fd5b61168184848484036000611b1e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116fa5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016116f191906123a3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361176c5760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161176391906123a3565b60405180910390fd5b611777838383611cf5565b505050565b6117f8848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016117b193929190612dca565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611f1a565b50505050565b611878838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611831929190612e01565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611f1a565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118ef5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016118e691906123a3565b60405180910390fd5b6118fb82600083611cf5565b5050565b60006001821161191157819050611a97565b6000829050600060019050700100000000000000000000000000000000821061194357608082901c9150604081901b90505b68010000000000000000821061196257604082901c9150602081901b90505b640100000000821061197d57602082901c9150601081901b90505b62010000821061199657601082901c9150600881901b90505b61010082106119ae57600882901c9150600481901b90505b601082106119c557600482901c9150600281901b90505b600482106119d557600181901b90505b600181600302901c905060018185816119f1576119f0612760565b5b048201901c90506001818581611a0a57611a09612760565b5b048201901c90506001818581611a2357611a22612760565b5b048201901c90506001818581611a3c57611a3b612760565b5b048201901c90506001818581611a5557611a54612760565b5b048201901c90506001818581611a6e57611a6d612760565b5b048201901c9050611a90818581611a8857611a87612760565b5b048211611fbc565b8103925050505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b0e5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611b0591906123a3565b60405180910390fd5b611b1a60008383611cf5565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611b905760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611b8791906123a3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c025760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611bf991906123a3565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611cef578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611ce6919061206a565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d47578060026000828254611d3b91906126ea565b92505081905550611e1a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611dd3578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611dca93929190612d93565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611e635780600260008282540392505081905550611eb0565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611f0d919061206a565b60405180910390a3505050565b600080602060008451602086016000885af180611f3d576040513d6000823e3d81fd5b3d925060005191505060008214611f58576001811415611f74565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b15611fb657836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611fad91906123a3565b60405180910390fd5b50505050565b60008115159050919050565b600080fd5b600080fd5b6000819050919050565b611fe581611fd2565b8114611ff057600080fd5b50565b60008135905061200281611fdc565b92915050565b60008060006060848603121561202157612020611fc8565b5b600061202f86828701611ff3565b935050602061204086828701611ff3565b925050604061205186828701611ff3565b9150509250925092565b61206481611fd2565b82525050565b600060208201905061207f600083018461205b565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156120bf5780820151818401526020810190506120a4565b60008484015250505050565b6000601f19601f8301169050919050565b60006120e782612085565b6120f18185612090565b93506121018185602086016120a1565b61210a816120cb565b840191505092915050565b6000602082019050818103600083015261212f81846120dc565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061216282612137565b9050919050565b61217281612157565b811461217d57600080fd5b50565b60008135905061218f81612169565b92915050565b600080604083850312156121ac576121ab611fc8565b5b60006121ba85828601612180565b92505060206121cb85828601611ff3565b9150509250929050565b60008115159050919050565b6121ea816121d5565b82525050565b600060208201905061220560008301846121e1565b92915050565b60008060006060848603121561222457612223611fc8565b5b600061223286828701612180565b935050602061224386828701612180565b925050604061225486828701611ff3565b9150509250925092565b600060ff82169050919050565b6122748161225e565b82525050565b600060208201905061228f600083018461226b565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126122ba576122b9612295565b5b8235905067ffffffffffffffff8111156122d7576122d661229a565b5b6020830191508360208202830111156122f3576122f261229f565b5b9250929050565b60008060008060008060a0878903121561231757612316611fc8565b5b600061232589828a01611ff3565b965050602061233689828a01611ff3565b955050604087013567ffffffffffffffff81111561235757612356611fcd565b5b61236389828a016122a4565b9450945050606061237689828a01612180565b925050608061238789828a01611ff3565b9150509295509295509295565b61239d81612157565b82525050565b60006020820190506123b86000830184612394565b92915050565b6000602082840312156123d4576123d3611fc8565b5b60006123e284828501612180565b91505092915050565b6000806040838503121561240257612401611fc8565b5b600061241085828601612180565b925050602061242185828601612180565b9150509250929050565b600080600080600080600060e0888a03121561244a57612449611fc8565b5b60006124588a828b01612180565b97505060206124698a828b01612180565b965050604061247a8a828b01611ff3565b955050606061248b8a828b01611ff3565b945050608061249c8a828b01611ff3565b93505060a06124ad8a828b01612180565b92505060c06124be8a828b01611ff3565b91505092959891949750929550565b60006040820190506124e2600083018561205b565b6124ef602083018461205b565b9392505050565b600080600080600080600080610100898b03121561251757612516611fc8565b5b60006125258b828c01612180565b98505060206125368b828c01612180565b97505060406125478b828c01611ff3565b96505060606125588b828c01611ff3565b95505060806125698b828c01611ff3565b94505060a061257a8b828c01611ff3565b93505060c061258b8b828c01612180565b92505060e061259c8b828c01611ff3565b9150509295985092959890939650565b60006060820190506125c1600083018661205b565b6125ce602083018561205b565b6125db604083018461205b565b949350505050565b7f5a65726f20696e70757400000000000000000000000000000000000000000000600082015250565b6000612619600a83612090565b9150612624826125e3565b602082019050919050565b600060208201905081810360008301526126488161260c565b9050919050565b7f456d707479207265736572766573000000000000000000000000000000000000600082015250565b6000612685600e83612090565b91506126908261264f565b602082019050919050565b600060208201905081810360008301526126b481612678565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006126f582611fd2565b915061270083611fd2565b9250828201905080821115612718576127176126bb565b5b92915050565b600061272982611fd2565b915061273483611fd2565b925082820261274281611fd2565b91508282048414831517612759576127586126bb565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061279a82611fd2565b91506127a583611fd2565b9250826127b5576127b4612760565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061280757607f821691505b60208210810361281a576128196127c0565b5b50919050565b7f4578706972656400000000000000000000000000000000000000000000000000600082015250565b6000612856600783612090565b915061286182612820565b602082019050919050565b6000602082019050818103600083015261288581612849565b9050919050565b7f4f6e6c7920322d746f6b656e2073776170730000000000000000000000000000600082015250565b60006128c2601283612090565b91506128cd8261288c565b602082019050919050565b600060208201905081810360008301526128f1816128b5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f496e76616c696420737761702070617468000000000000000000000000000000600082015250565b600061295d601183612090565b915061296882612927565b602082019050919050565b6000602082019050818103600083015261298c81612950565b9050919050565b7f536c697070616765000000000000000000000000000000000000000000000000600082015250565b60006129c9600883612090565b91506129d482612993565b602082019050919050565b600060208201905081810360008301526129f8816129bc565b9050919050565b6000612a0a82611fd2565b9150612a1583611fd2565b9250828203905081811115612a2d57612a2c6126bb565b5b92915050565b7f496e76616c696420746f6b656e20706169720000000000000000000000000000600082015250565b6000612a69601283612090565b9150612a7482612a33565b602082019050919050565b60006020820190508181036000830152612a9881612a5c565b9050919050565b7f4e6f207265736572766573000000000000000000000000000000000000000000600082015250565b6000612ad5600b83612090565b9150612ae082612a9f565b602082019050919050565b60006020820190508181036000830152612b0481612ac8565b9050919050565b7f4e6f7420656e6f756768204c5000000000000000000000000000000000000000600082015250565b6000612b41600d83612090565b9150612b4c82612b0b565b602082019050919050565b60006020820190508181036000830152612b7081612b34565b9050919050565b7f4c6f772041000000000000000000000000000000000000000000000000000000600082015250565b6000612bad600583612090565b9150612bb882612b77565b602082019050919050565b60006020820190508181036000830152612bdc81612ba0565b9050919050565b7f4c6f772042000000000000000000000000000000000000000000000000000000600082015250565b6000612c19600583612090565b9150612c2482612be3565b602082019050919050565b60006020820190508181036000830152612c4881612c0c565b9050919050565b7f546f6b656e73206d757374206469666665720000000000000000000000000000600082015250565b6000612c85601283612090565b9150612c9082612c4f565b602082019050919050565b60006020820190508181036000830152612cb481612c78565b9050919050565b7f546f6f206d756368204200000000000000000000000000000000000000000000600082015250565b6000612cf1600a83612090565b9150612cfc82612cbb565b602082019050919050565b60006020820190508181036000830152612d2081612ce4565b9050919050565b7f5a65726f206c6971756964697479000000000000000000000000000000000000600082015250565b6000612d5d600e83612090565b9150612d6882612d27565b602082019050919050565b60006020820190508181036000830152612d8c81612d50565b9050919050565b6000606082019050612da86000830186612394565b612db5602083018561205b565b612dc2604083018461205b565b949350505050565b6000606082019050612ddf6000830186612394565b612dec6020830185612394565b612df9604083018461205b565b949350505050565b6000604082019050612e166000830185612394565b612e23602083018461205b565b939250505056fea2646970667358221220979623ea2f95bd53c2b05b9029edb6f39df879b879d117e65ff93d3f45da166364736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xBAA2ABDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBAA2ABDE EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0xDC5FA6C5 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xE8E33700 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xEED86C96 EQ PUSH2 0x3BC JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0x2DB JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x19E36F3B GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x19E36F3B EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x38ED1739 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x50430CE4 EQ PUSH2 0x23F JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x54D50D4 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x498 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x2195 JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x21F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x21F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x58C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x595 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x247 PUSH2 0x991 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x23BE JUMP JUMPDEST PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x2195 JUMP JUMPDEST PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x21F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP3 SWAP2 SWAP1 PUSH2 0x24CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x344 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST PUSH2 0xFFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C4 PUSH2 0x15B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP5 GT PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x415 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT DUP1 ISZERO PUSH2 0x42E JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x46D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x464 SWAP1 PUSH2 0x269B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x26EA JUMP JUMPDEST DUP3 DUP6 PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH2 0x48F SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4A7 SWAP1 PUSH2 0x27EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D3 SWAP1 PUSH2 0x27EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x520 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4F5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x520 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x503 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x535 PUSH2 0x15D9 JUMP JUMPDEST SWAP1 POP PUSH2 0x542 DUP2 DUP6 DUP6 PUSH2 0x15E1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x568 PUSH2 0x15D9 JUMP JUMPDEST SWAP1 POP PUSH2 0x575 DUP6 DUP3 DUP6 PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0x580 DUP6 DUP6 DUP6 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 TIMESTAMP GT ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CF SWAP1 PUSH2 0x286C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP5 DUP5 SWAP1 POP EQ PUSH2 0x61E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x28D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x634 JUMPI PUSH2 0x633 PUSH2 0x28F8 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x649 SWAP2 SWAP1 PUSH2 0x23BE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 DUP6 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x661 JUMPI PUSH2 0x660 PUSH2 0x28F8 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x676 SWAP2 SWAP1 PUSH2 0x23BE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x72C JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x799 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x798 JUMPI POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST PUSH2 0x7D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CF SWAP1 PUSH2 0x2973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x819 JUMPI PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0x820 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x851 CALLER ADDRESS DUP15 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x177C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP13 DUP4 PUSH2 0x85F SWAP2 SWAP1 PUSH2 0x26EA JUMP JUMPDEST DUP3 DUP15 PUSH2 0x86B SWAP2 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH2 0x875 SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST SWAP1 POP DUP12 DUP2 LT ISZERO PUSH2 0x8BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B1 SWAP1 PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x924 JUMPI DUP13 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8FF SWAP2 SWAP1 PUSH2 0x26EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x918 SWAP2 SWAP1 PUSH2 0x29FF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x957 JUMP JUMPDEST DUP13 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x936 SWAP2 SWAP1 PUSH2 0x26EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x94F SWAP2 SWAP1 PUSH2 0x29FF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x982 DUP10 DUP3 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17FE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA0E SWAP1 PUSH2 0x27EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA3A SWAP1 PUSH2 0x27EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA87 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA5C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA87 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA6A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA9C PUSH2 0x15D9 JUMP JUMPDEST SWAP1 POP PUSH2 0xAA9 DUP2 DUP6 DUP6 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB69 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xBD6 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xBD5 JUMPI POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST PUSH2 0xC15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0C SWAP1 PUSH2 0x2A7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0xC33 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0xC72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC69 SWAP1 PUSH2 0x2AEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0xC87 SWAP2 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH2 0xC91 SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 TIMESTAMP GT ISZERO PUSH2 0xCE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDA SWAP1 PUSH2 0x286C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xD97 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xE04 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xE03 JUMPI POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST PUSH2 0xE43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3A SWAP1 PUSH2 0x2A7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xE5B PUSH2 0x54D JUMP JUMPDEST SWAP1 POP DUP12 PUSH2 0xE67 CALLER PUSH2 0x9B7 JUMP JUMPDEST LT ISZERO PUSH2 0xEA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9F SWAP1 PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP4 DUP14 PUSH2 0xEB5 SWAP2 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH2 0xEBF SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST SWAP7 POP DUP1 DUP3 DUP14 PUSH2 0xECE SWAP2 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH2 0xED8 SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST SWAP6 POP DUP11 DUP8 LT ISZERO PUSH2 0xF1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF14 SWAP1 PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 DUP7 LT ISZERO PUSH2 0xF60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF57 SWAP1 PUSH2 0x2C2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF6A CALLER DUP14 PUSH2 0x187D JUMP JUMPDEST DUP7 DUP4 PUSH2 0xF76 SWAP2 SWAP1 PUSH2 0x29FF JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP6 DUP3 PUSH2 0xF88 SWAP2 SWAP1 PUSH2 0x29FF JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0xFB9 DUP10 DUP9 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17FE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xFE4 DUP10 DUP8 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17FE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 TIMESTAMP GT ISZERO PUSH2 0x10CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C1 SWAP1 PUSH2 0x286C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1180 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1280 JUMPI DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EA SWAP1 PUSH2 0x2C9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP13 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP12 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP13 SWAP2 POP DUP12 SWAP1 POP PUSH2 0x1393 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x12E6 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x1353 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1352 JUMPI POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST PUSH2 0x1392 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1389 SWAP1 PUSH2 0x2A7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x13AB PUSH2 0x54D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x13D6 JUMPI DUP14 SWAP8 POP DUP13 SWAP7 POP PUSH2 0x13CF DUP8 DUP10 PUSH2 0x13CA SWAP2 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH2 0x18FF JUMP JUMPDEST SWAP6 POP PUSH2 0x144F JUMP JUMPDEST DUP14 SWAP8 POP DUP3 DUP3 DUP10 PUSH2 0x13E6 SWAP2 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH2 0x13F0 SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST SWAP7 POP DUP13 DUP8 GT ISZERO PUSH2 0x1435 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142C SWAP1 PUSH2 0x2D07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 DUP10 PUSH2 0x1442 SWAP2 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH2 0x144C SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST SWAP6 POP JUMPDEST DUP12 DUP9 LT ISZERO PUSH2 0x1492 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1489 SWAP1 PUSH2 0x2BC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP11 DUP8 LT ISZERO PUSH2 0x14D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CC SWAP1 PUSH2 0x2C2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 GT PUSH2 0x1518 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150F SWAP1 PUSH2 0x2D73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1545 CALLER ADDRESS DUP11 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x177C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1572 CALLER ADDRESS DUP10 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x177C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 DUP4 PUSH2 0x157E SWAP2 SWAP1 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP7 DUP3 PUSH2 0x1590 SWAP2 SWAP1 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x15A0 DUP11 DUP8 PUSH2 0x1A9C JUMP JUMPDEST POP POP POP POP POP SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x15EE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1B1E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15FF DUP5 DUP5 PUSH2 0xFFB JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1682 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1672 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1669 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1681 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1B1E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16FA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F1 SWAP2 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x176C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1763 SWAP2 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1777 DUP4 DUP4 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x17F8 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x17B1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1F1A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1878 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1831 SWAP3 SWAP2 SWAP1 PUSH2 0x2E01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1F1A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18EF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18E6 SWAP2 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18FB DUP3 PUSH1 0x0 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 GT PUSH2 0x1911 JUMPI DUP2 SWAP1 POP PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH17 0x100000000000000000000000000000000 DUP3 LT PUSH2 0x1943 JUMPI PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x40 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x1962 JUMPI PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x20 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x197D JUMPI PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x10 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x1996 JUMPI PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x8 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x19AE JUMPI PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x4 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x19C5 JUMPI PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x2 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x19D5 JUMPI PUSH1 0x1 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x3 MUL SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x19F1 JUMPI PUSH2 0x19F0 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A0A JUMPI PUSH2 0x1A09 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A23 JUMPI PUSH2 0x1A22 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A3C JUMPI PUSH2 0x1A3B PUSH2 0x2760 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A55 JUMPI PUSH2 0x1A54 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A6E JUMPI PUSH2 0x1A6D PUSH2 0x2760 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x1A90 DUP2 DUP6 DUP2 PUSH2 0x1A88 JUMPI PUSH2 0x1A87 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST DIV DUP3 GT PUSH2 0x1FBC JUMP JUMPDEST DUP2 SUB SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B0E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B05 SWAP2 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B1A PUSH1 0x0 DUP4 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B90 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B87 SWAP2 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C02 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF9 SWAP2 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1CEF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1CE6 SWAP2 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D47 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D3B SWAP2 SWAP1 PUSH2 0x26EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E1A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1DD3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DCA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E63 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1EB0 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F0D SWAP2 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x1F3D JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH1 0x0 MLOAD SWAP2 POP POP PUSH1 0x0 DUP3 EQ PUSH2 0x1F58 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1F74 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1FB6 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FAD SWAP2 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FE5 DUP2 PUSH2 0x1FD2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2002 DUP2 PUSH2 0x1FDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2021 JUMPI PUSH2 0x2020 PUSH2 0x1FC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x202F DUP7 DUP3 DUP8 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2040 DUP7 DUP3 DUP8 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2051 DUP7 DUP3 DUP8 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2064 DUP2 PUSH2 0x1FD2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x207F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x205B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20BF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20A4 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E7 DUP3 PUSH2 0x2085 JUMP JUMPDEST PUSH2 0x20F1 DUP2 DUP6 PUSH2 0x2090 JUMP JUMPDEST SWAP4 POP PUSH2 0x2101 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20A1 JUMP JUMPDEST PUSH2 0x210A DUP2 PUSH2 0x20CB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x212F DUP2 DUP5 PUSH2 0x20DC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2162 DUP3 PUSH2 0x2137 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2172 DUP2 PUSH2 0x2157 JUMP JUMPDEST DUP2 EQ PUSH2 0x217D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x218F DUP2 PUSH2 0x2169 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21AC JUMPI PUSH2 0x21AB PUSH2 0x1FC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21BA DUP6 DUP3 DUP7 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21CB DUP6 DUP3 DUP7 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21EA DUP2 PUSH2 0x21D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2205 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2224 JUMPI PUSH2 0x2223 PUSH2 0x1FC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2232 DUP7 DUP3 DUP8 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2243 DUP7 DUP3 DUP8 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2254 DUP7 DUP3 DUP8 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2274 DUP2 PUSH2 0x225E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x228F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x226B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x22BA JUMPI PUSH2 0x22B9 PUSH2 0x2295 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22D7 JUMPI PUSH2 0x22D6 PUSH2 0x229A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x22F3 JUMPI PUSH2 0x22F2 PUSH2 0x229F JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2317 JUMPI PUSH2 0x2316 PUSH2 0x1FC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2325 DUP10 DUP3 DUP11 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x2336 DUP10 DUP3 DUP11 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2357 JUMPI PUSH2 0x2356 PUSH2 0x1FCD JUMP JUMPDEST JUMPDEST PUSH2 0x2363 DUP10 DUP3 DUP11 ADD PUSH2 0x22A4 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x60 PUSH2 0x2376 DUP10 DUP3 DUP11 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2387 DUP10 DUP3 DUP11 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH2 0x239D DUP2 PUSH2 0x2157 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2394 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23D4 JUMPI PUSH2 0x23D3 PUSH2 0x1FC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23E2 DUP5 DUP3 DUP6 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2402 JUMPI PUSH2 0x2401 PUSH2 0x1FC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2410 DUP6 DUP3 DUP7 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2421 DUP6 DUP3 DUP7 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x244A JUMPI PUSH2 0x2449 PUSH2 0x1FC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2458 DUP11 DUP3 DUP12 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2469 DUP11 DUP3 DUP12 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x247A DUP11 DUP3 DUP12 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x248B DUP11 DUP3 DUP12 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x249C DUP11 DUP3 DUP12 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x24AD DUP11 DUP3 DUP12 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x24BE DUP11 DUP3 DUP12 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24E2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x205B JUMP JUMPDEST PUSH2 0x24EF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x205B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2517 JUMPI PUSH2 0x2516 PUSH2 0x1FC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2525 DUP12 DUP3 DUP13 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x2536 DUP12 DUP3 DUP13 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x2547 DUP12 DUP3 DUP13 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x2558 DUP12 DUP3 DUP13 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x2569 DUP12 DUP3 DUP13 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x257A DUP12 DUP3 DUP13 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x258B DUP12 DUP3 DUP13 ADD PUSH2 0x2180 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x259C DUP12 DUP3 DUP13 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25C1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x205B JUMP JUMPDEST PUSH2 0x25CE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x205B JUMP JUMPDEST PUSH2 0x25DB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x205B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5A65726F20696E70757400000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2619 PUSH1 0xA DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2624 DUP3 PUSH2 0x25E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2648 DUP2 PUSH2 0x260C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456D707479207265736572766573000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2685 PUSH1 0xE DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2690 DUP3 PUSH2 0x264F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26B4 DUP2 PUSH2 0x2678 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x26F5 DUP3 PUSH2 0x1FD2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2700 DUP4 PUSH2 0x1FD2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2718 JUMPI PUSH2 0x2717 PUSH2 0x26BB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2729 DUP3 PUSH2 0x1FD2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2734 DUP4 PUSH2 0x1FD2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2742 DUP2 PUSH2 0x1FD2 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2759 JUMPI PUSH2 0x2758 PUSH2 0x26BB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x279A DUP3 PUSH2 0x1FD2 JUMP JUMPDEST SWAP2 POP PUSH2 0x27A5 DUP4 PUSH2 0x1FD2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x27B5 JUMPI PUSH2 0x27B4 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2807 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x281A JUMPI PUSH2 0x2819 PUSH2 0x27C0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4578706972656400000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2856 PUSH1 0x7 DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2861 DUP3 PUSH2 0x2820 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2885 DUP2 PUSH2 0x2849 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C7920322D746F6B656E2073776170730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28C2 PUSH1 0x12 DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x28CD DUP3 PUSH2 0x288C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28F1 DUP2 PUSH2 0x28B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x496E76616C696420737761702070617468000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x295D PUSH1 0x11 DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2968 DUP3 PUSH2 0x2927 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x298C DUP2 PUSH2 0x2950 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536C697070616765000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29C9 PUSH1 0x8 DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x29D4 DUP3 PUSH2 0x2993 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29F8 DUP2 PUSH2 0x29BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A0A DUP3 PUSH2 0x1FD2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A15 DUP4 PUSH2 0x1FD2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2A2D JUMPI PUSH2 0x2A2C PUSH2 0x26BB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20706169720000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A69 PUSH1 0x12 DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A74 DUP3 PUSH2 0x2A33 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A98 DUP2 PUSH2 0x2A5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207265736572766573000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD5 PUSH1 0xB DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AE0 DUP3 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B04 DUP2 PUSH2 0x2AC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768204C5000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B41 PUSH1 0xD DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B4C DUP3 PUSH2 0x2B0B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B70 DUP2 PUSH2 0x2B34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C6F772041000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BAD PUSH1 0x5 DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BB8 DUP3 PUSH2 0x2B77 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BDC DUP2 PUSH2 0x2BA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C6F772042000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C19 PUSH1 0x5 DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C24 DUP3 PUSH2 0x2BE3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C48 DUP2 PUSH2 0x2C0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E73206D757374206469666665720000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C85 PUSH1 0x12 DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C90 DUP3 PUSH2 0x2C4F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CB4 DUP2 PUSH2 0x2C78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6F206D756368204200000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF1 PUSH1 0xA DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CFC DUP3 PUSH2 0x2CBB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D20 DUP2 PUSH2 0x2CE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5A65726F206C6971756964697479000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D5D PUSH1 0xE DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D68 DUP3 PUSH2 0x2D27 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D8C DUP2 PUSH2 0x2D50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2DA8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2394 JUMP JUMPDEST PUSH2 0x2DB5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x205B JUMP JUMPDEST PUSH2 0x2DC2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x205B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2DDF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2394 JUMP JUMPDEST PUSH2 0x2DEC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2394 JUMP JUMPDEST PUSH2 0x2DF9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x205B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E16 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2394 JUMP JUMPDEST PUSH2 0x2E23 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x205B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 SWAP7 0x23 0xEA 0x2F SWAP6 0xBD MSTORE8 0xC2 0xB0 JUMPDEST SWAP1 0x29 0xED 0xB6 RETURN SWAP14 0xF8 PUSH26 0xB879D117E65FF93D3F45DA166364736F6C634300081C00330000 ","sourceMap":"404:7996:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8073:325;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;786:23:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5755:1294:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;538:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3296:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7243:574:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4111:1258;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;714:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1609:1952:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;637:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8073:325;8199:7;8241:1;8230:8;:12;8222:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;8287:1;8275:9;:13;:31;;;;;8305:1;8292:10;:14;8275:31;8267:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;8382:8;8370:9;:20;;;;:::i;:::-;8355:10;8344:8;:21;;;;:::i;:::-;8343:48;;;;:::i;:::-;8336:55;;8073:325;;;;;:::o;1760:89:4:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;786:23:14:-;;;;:::o;4757:244:4:-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;5755:1294:14:-;5976:8;5957:15;:27;;5949:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;6029:1;6014:4;;:11;;:16;6006:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;6064:15;6082:4;;6087:1;6082:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;6064:25;;6099:16;6118:4;;6123:1;6118:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;6099:26;;6136:21;6160:12;;;;;;;;;;;6136:36;;6182:21;6206:12;;;;;;;;;;;6182:36;;6262:13;6251:24;;:7;:24;;;:53;;;;;6291:13;6279:25;;:8;:25;;;6251:53;6250:126;;;;6333:13;6322:24;;:7;:24;;;:53;;;;;6362:13;6350:25;;:8;:25;;;6322:53;6250:126;6229:190;;;;;;;;;;;;:::i;:::-;;;;;;;;;6431:17;6450:18;6483:13;6472:24;;:7;:24;;;:94;;6547:8;;6557;;6472:94;;;6512:8;;6522;;6472:94;6430:136;;;;6577:69;6610:10;6630:4;6637:8;6584:7;6577:32;;;;:69;;;;;;:::i;:::-;6657:17;6716:8;6704:9;:20;;;;:::i;:::-;6689:10;6678:8;:21;;;;:::i;:::-;6677:48;;;;:::i;:::-;6657:68;;6756:12;6743:9;:25;;6735:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;6807:13;6796:24;;:7;:24;;;6792:196;;6848:8;6836;;:20;;;;;;;:::i;:::-;;;;;;;;6882:9;6870:8;;:21;;;;;;;:::i;:::-;;;;;;;;6792:196;;;6934:8;6922;;:20;;;;;;;:::i;:::-;;;;;;;;6968:9;6956:8;;:21;;;;;;;:::i;:::-;;;;;;;;6792:196;6998:44;7028:2;7032:9;7005:8;6998:29;;;;:44;;;;;:::i;:::-;5939:1110;;;;;;;5755:1294;;;;;;:::o;538:27::-;;;;;;;;;;;;;:::o;2985:116:4:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;1962:93::-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3296:178::-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;7243:574:14:-;7316:13;7341:21;7365:12;;;;;;;;;;;7341:36;;7387:21;7411:12;;;;;;;;;;;7387:36;;7466:13;7456:23;;:6;:23;;;:50;;;;;7493:13;7483:23;;:6;:23;;;7456:50;7455:120;;;;7534:13;7524:23;;:6;:23;;;:50;;;;;7561:13;7551:23;;:6;:23;;;7524:50;7455:120;7434:185;;;;;;;;;;;;:::i;:::-;;;;;;;;;7630:17;7650:8;;7630:28;;7668:17;7688:8;;7668:28;;7727:1;7715:9;:13;:30;;;;;7744:1;7732:9;:13;7715:30;7707:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;7801:9;7793:4;7781:9;:16;;;;:::i;:::-;7780:30;;;;:::i;:::-;7772:38;;7331:486;;;;7243:574;;;;:::o;4111:1258::-;4337:15;4354;4408:8;4389:15;:27;;4381:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;4439:21;4463:12;;;;;;;;;;;4439:36;;4485:21;4509:12;;;;;;;;;;;4485:36;;4564:13;4554:23;;:6;:23;;;:50;;;;;4591:13;4581:23;;:6;:23;;;4554:50;4553:120;;;;4632:13;4622:23;;:6;:23;;;:50;;;;;4659:13;4649:23;;:6;:23;;;4622:50;4553:120;4532:185;;;;;;;;;;;;:::i;:::-;;;;;;;;;4728:17;4748:8;;4728:28;;4766:17;4786:8;;4766:28;;4804:20;4827:13;:11;:13::i;:::-;4804:36;;4884:9;4859:21;4869:10;4859:9;:21::i;:::-;:34;;4851:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4958:12;4945:9;4933;:21;;;;:::i;:::-;4932:38;;;;:::i;:::-;4922:48;;5016:12;5003:9;4991;:21;;;;:::i;:::-;4990:38;;;;:::i;:::-;4980:48;;5058:10;5047:7;:21;;5039:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;5107:10;5096:7;:21;;5088:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;5138:28;5144:10;5156:9;5138:5;:28::i;:::-;5200:7;5188:9;:19;;;;:::i;:::-;5177:8;:30;;;;5240:7;5228:9;:19;;;;:::i;:::-;5217:8;:30;;;;5258:47;5293:2;5297:7;5265:13;5258:34;;;;:47;;;;;:::i;:::-;5315;5350:2;5354:7;5322:13;5315:34;;;;:47;;;;;:::i;:::-;4371:998;;;;;4111:1258;;;;;;;;;;:::o;714:23::-;;;;:::o;3532:140:4:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;1609:1952:14:-;1869:15;1886;1903:17;1959:8;1940:15;:27;;1932:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;1990:21;2014:12;;;;;;;;;;;1990:36;;2036:21;2060:12;;;;;;;;;;;2036:36;;2112:1;2087:27;;:13;:27;;;:58;;;;;2143:1;2118:27;;:13;:27;;;2087:58;2083:510;;;2179:6;2169:16;;:6;:16;;;2161:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:6;2222:12;;:21;;;;;;;;;;;;;;;;;;2272:6;2257:12;;:21;;;;;;;;;;;;;;;;;;2308:6;2292:22;;2344:6;2328:22;;2083:510;;;2417:13;2407:23;;:6;:23;;;:50;;;;;2444:13;2434:23;;:6;:23;;;2407:50;2406:124;;;;2489:13;2479:23;;:6;:23;;;:50;;;;;2516:13;2506:23;;:6;:23;;;2479:50;2406:124;2381:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;2083:510;2603:17;2623:8;;2603:28;;2641:17;2661:8;;2641:28;;2679:20;2702:13;:11;:13::i;:::-;2679:36;;2746:1;2730:12;:17;2726:400;;2773:14;2763:24;;2811:14;2801:24;;2851:28;2871:7;2861;:17;;;;:::i;:::-;2851:9;:28::i;:::-;2839:40;;2726:400;;;2920:14;2910:24;;2982:9;2969;2959:7;:19;;;;:::i;:::-;2958:33;;;;:::i;:::-;2948:43;;3024:14;3013:7;:25;;3005:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;3106:9;3090:12;3080:7;:22;;;;:::i;:::-;3079:36;;;;:::i;:::-;3067:48;;2726:400;3155:10;3144:7;:21;;3136:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;3204:10;3193:7;:21;;3185:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;3254:1;3242:9;:13;3234:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;3285:74;3324:10;3344:4;3351:7;3292:13;3285:38;;;;:74;;;;;;:::i;:::-;3369;3408:10;3428:4;3435:7;3376:13;3369:38;;;;:74;;;;;;:::i;:::-;3477:7;3465:9;:19;;;;:::i;:::-;3454:8;:30;;;;3517:7;3505:9;:19;;;;:::i;:::-;3494:8;:30;;;;3534:20;3540:2;3544:9;3534:5;:20::i;:::-;1922:1639;;;;;1609:1952;;;;;;;;;;;;:::o;637:27::-;;;;;;;;;;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8707:128:4:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;1618:188:7:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;1219:160::-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;7965:206:4:-;8054:1;8035:21;;:7;:21;;;8031:89;;8106:1;8079:30;;;;;;;;;;;:::i;:::-;;;;;;;;8031:89;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;:::-;7965:206;;:::o;20567:5181:11:-;20615:7;20733:1;20728;:6;20724:53;;20761:1;20754:8;;;;20724:53;21704:10;21717:1;21704:14;;21732:10;21745:1;21732:14;;21772:8;21765:2;:16;21761:92;;21808:3;21801:10;;;;;21836:2;21829:9;;;;;21761:92;21877:7;21870:2;:15;21866:90;;21912:2;21905:9;;;;;21939:2;21932:9;;;;;21866:90;21980:7;21973:2;:15;21969:90;;22015:2;22008:9;;;;;22042:2;22035:9;;;;;21969:90;22083:7;22076:2;:15;22072:89;;22118:2;22111:9;;;;;22145:1;22138:8;;;;;22072:89;22185:6;22178:2;:14;22174:87;;22219:1;22212:8;;;;;22245:1;22238:8;;;;;22174:87;22285:6;22278:2;:14;22274:87;;22319:1;22312:8;;;;;22345:1;22338:8;;;;;22274:87;22385:6;22378:2;:14;22374:61;;22419:1;22412:8;;;;;22374:61;22872:1;22865:2;22861:1;:6;22860:13;;22855:18;;24782:1;24775:2;24771:1;:6;;;;;:::i;:::-;;;24766:2;:11;24765:18;;24760:23;;24891:1;24884:2;24880:1;:6;;;;;:::i;:::-;;;24875:2;:11;24874:18;;24869:23;;25002:1;24995:2;24991:1;:6;;;;;:::i;:::-;;;24986:2;:11;24985:18;;24980:23;;25111:1;25104:2;25100:1;:6;;;;;:::i;:::-;;;25095:2;:11;25094:18;;25089:23;;25221:1;25214:2;25210:1;:6;;;;;:::i;:::-;;;25205:2;:11;25204:18;;25199:23;;25331:1;25324:2;25320:1;:6;;;;;:::i;:::-;;;25315:2;:11;25314:18;;25309:23;;25703:28;25728:2;25724:1;:6;;;;;:::i;:::-;;;25719:2;:11;25703:15;:28::i;:::-;25698:2;:33;25691:40;;;;20567:5181;;;;:::o;7439:208:4:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;9682:432::-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;8370:720:7:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;34795:145:12:-;34842:9;34921:1;34914:9;34907:17;34902:22;;34795:145;;;:::o;88:117:15:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:619::-;767:6;775;783;832:2;820:9;811:7;807:23;803:32;800:119;;;838:79;;:::i;:::-;800:119;958:1;983:53;1028:7;1019:6;1008:9;1004:22;983:53;:::i;:::-;973:63;;929:117;1085:2;1111:53;1156:7;1147:6;1136:9;1132:22;1111:53;:::i;:::-;1101:63;;1056:118;1213:2;1239:53;1284:7;1275:6;1264:9;1260:22;1239:53;:::i;:::-;1229:63;;1184:118;690:619;;;;;:::o;1315:118::-;1402:24;1420:5;1402:24;:::i;:::-;1397:3;1390:37;1315:118;;:::o;1439:222::-;1532:4;1570:2;1559:9;1555:18;1547:26;;1583:71;1651:1;1640:9;1636:17;1627:6;1583:71;:::i;:::-;1439:222;;;;:::o;1667:99::-;1719:6;1753:5;1747:12;1737:22;;1667:99;;;:::o;1772:169::-;1856:11;1890:6;1885:3;1878:19;1930:4;1925:3;1921:14;1906:29;;1772:169;;;;:::o;1947:248::-;2029:1;2039:113;2053:6;2050:1;2047:13;2039:113;;;2138:1;2133:3;2129:11;2123:18;2119:1;2114:3;2110:11;2103:39;2075:2;2072:1;2068:10;2063:15;;2039:113;;;2186:1;2177:6;2172:3;2168:16;2161:27;2009:186;1947:248;;;:::o;2201:102::-;2242:6;2293:2;2289:7;2284:2;2277:5;2273:14;2269:28;2259:38;;2201:102;;;:::o;2309:377::-;2397:3;2425:39;2458:5;2425:39;:::i;:::-;2480:71;2544:6;2539:3;2480:71;:::i;:::-;2473:78;;2560:65;2618:6;2613:3;2606:4;2599:5;2595:16;2560:65;:::i;:::-;2650:29;2672:6;2650:29;:::i;:::-;2645:3;2641:39;2634:46;;2401:285;2309:377;;;;:::o;2692:313::-;2805:4;2843:2;2832:9;2828:18;2820:26;;2892:9;2886:4;2882:20;2878:1;2867:9;2863:17;2856:47;2920:78;2993:4;2984:6;2920:78;:::i;:::-;2912:86;;2692:313;;;;:::o;3011:126::-;3048:7;3088:42;3081:5;3077:54;3066:65;;3011:126;;;:::o;3143:96::-;3180:7;3209:24;3227:5;3209:24;:::i;:::-;3198:35;;3143:96;;;:::o;3245:122::-;3318:24;3336:5;3318:24;:::i;:::-;3311:5;3308:35;3298:63;;3357:1;3354;3347:12;3298:63;3245:122;:::o;3373:139::-;3419:5;3457:6;3444:20;3435:29;;3473:33;3500:5;3473:33;:::i;:::-;3373:139;;;;:::o;3518:474::-;3586:6;3594;3643:2;3631:9;3622:7;3618:23;3614:32;3611:119;;;3649:79;;:::i;:::-;3611:119;3769:1;3794:53;3839:7;3830:6;3819:9;3815:22;3794:53;:::i;:::-;3784:63;;3740:117;3896:2;3922:53;3967:7;3958:6;3947:9;3943:22;3922:53;:::i;:::-;3912:63;;3867:118;3518:474;;;;;:::o;3998:90::-;4032:7;4075:5;4068:13;4061:21;4050:32;;3998:90;;;:::o;4094:109::-;4175:21;4190:5;4175:21;:::i;:::-;4170:3;4163:34;4094:109;;:::o;4209:210::-;4296:4;4334:2;4323:9;4319:18;4311:26;;4347:65;4409:1;4398:9;4394:17;4385:6;4347:65;:::i;:::-;4209:210;;;;:::o;4425:619::-;4502:6;4510;4518;4567:2;4555:9;4546:7;4542:23;4538:32;4535:119;;;4573:79;;:::i;:::-;4535:119;4693:1;4718:53;4763:7;4754:6;4743:9;4739:22;4718:53;:::i;:::-;4708:63;;4664:117;4820:2;4846:53;4891:7;4882:6;4871:9;4867:22;4846:53;:::i;:::-;4836:63;;4791:118;4948:2;4974:53;5019:7;5010:6;4999:9;4995:22;4974:53;:::i;:::-;4964:63;;4919:118;4425:619;;;;;:::o;5050:86::-;5085:7;5125:4;5118:5;5114:16;5103:27;;5050:86;;;:::o;5142:112::-;5225:22;5241:5;5225:22;:::i;:::-;5220:3;5213:35;5142:112;;:::o;5260:214::-;5349:4;5387:2;5376:9;5372:18;5364:26;;5400:67;5464:1;5453:9;5449:17;5440:6;5400:67;:::i;:::-;5260:214;;;;:::o;5480:117::-;5589:1;5586;5579:12;5603:117;5712:1;5709;5702:12;5726:117;5835:1;5832;5825:12;5866:568;5939:8;5949:6;5999:3;5992:4;5984:6;5980:17;5976:27;5966:122;;6007:79;;:::i;:::-;5966:122;6120:6;6107:20;6097:30;;6150:18;6142:6;6139:30;6136:117;;;6172:79;;:::i;:::-;6136:117;6286:4;6278:6;6274:17;6262:29;;6340:3;6332:4;6324:6;6320:17;6310:8;6306:32;6303:41;6300:128;;;6347:79;;:::i;:::-;6300:128;5866:568;;;;;:::o;6440:1141::-;6562:6;6570;6578;6586;6594;6602;6651:3;6639:9;6630:7;6626:23;6622:33;6619:120;;;6658:79;;:::i;:::-;6619:120;6778:1;6803:53;6848:7;6839:6;6828:9;6824:22;6803:53;:::i;:::-;6793:63;;6749:117;6905:2;6931:53;6976:7;6967:6;6956:9;6952:22;6931:53;:::i;:::-;6921:63;;6876:118;7061:2;7050:9;7046:18;7033:32;7092:18;7084:6;7081:30;7078:117;;;7114:79;;:::i;:::-;7078:117;7227:80;7299:7;7290:6;7279:9;7275:22;7227:80;:::i;:::-;7209:98;;;;7004:313;7356:2;7382:53;7427:7;7418:6;7407:9;7403:22;7382:53;:::i;:::-;7372:63;;7327:118;7484:3;7511:53;7556:7;7547:6;7536:9;7532:22;7511:53;:::i;:::-;7501:63;;7455:119;6440:1141;;;;;;;;:::o;7587:118::-;7674:24;7692:5;7674:24;:::i;:::-;7669:3;7662:37;7587:118;;:::o;7711:222::-;7804:4;7842:2;7831:9;7827:18;7819:26;;7855:71;7923:1;7912:9;7908:17;7899:6;7855:71;:::i;:::-;7711:222;;;;:::o;7939:329::-;7998:6;8047:2;8035:9;8026:7;8022:23;8018:32;8015:119;;;8053:79;;:::i;:::-;8015:119;8173:1;8198:53;8243:7;8234:6;8223:9;8219:22;8198:53;:::i;:::-;8188:63;;8144:117;7939:329;;;;:::o;8274:474::-;8342:6;8350;8399:2;8387:9;8378:7;8374:23;8370:32;8367:119;;;8405:79;;:::i;:::-;8367:119;8525:1;8550:53;8595:7;8586:6;8575:9;8571:22;8550:53;:::i;:::-;8540:63;;8496:117;8652:2;8678:53;8723:7;8714:6;8703:9;8699:22;8678:53;:::i;:::-;8668:63;;8623:118;8274:474;;;;;:::o;8754:1203::-;8867:6;8875;8883;8891;8899;8907;8915;8964:3;8952:9;8943:7;8939:23;8935:33;8932:120;;;8971:79;;:::i;:::-;8932:120;9091:1;9116:53;9161:7;9152:6;9141:9;9137:22;9116:53;:::i;:::-;9106:63;;9062:117;9218:2;9244:53;9289:7;9280:6;9269:9;9265:22;9244:53;:::i;:::-;9234:63;;9189:118;9346:2;9372:53;9417:7;9408:6;9397:9;9393:22;9372:53;:::i;:::-;9362:63;;9317:118;9474:2;9500:53;9545:7;9536:6;9525:9;9521:22;9500:53;:::i;:::-;9490:63;;9445:118;9602:3;9629:53;9674:7;9665:6;9654:9;9650:22;9629:53;:::i;:::-;9619:63;;9573:119;9731:3;9758:53;9803:7;9794:6;9783:9;9779:22;9758:53;:::i;:::-;9748:63;;9702:119;9860:3;9887:53;9932:7;9923:6;9912:9;9908:22;9887:53;:::i;:::-;9877:63;;9831:119;8754:1203;;;;;;;;;;:::o;9963:332::-;10084:4;10122:2;10111:9;10107:18;10099:26;;10135:71;10203:1;10192:9;10188:17;10179:6;10135:71;:::i;:::-;10216:72;10284:2;10273:9;10269:18;10260:6;10216:72;:::i;:::-;9963:332;;;;;:::o;10301:1349::-;10423:6;10431;10439;10447;10455;10463;10471;10479;10528:3;10516:9;10507:7;10503:23;10499:33;10496:120;;;10535:79;;:::i;:::-;10496:120;10655:1;10680:53;10725:7;10716:6;10705:9;10701:22;10680:53;:::i;:::-;10670:63;;10626:117;10782:2;10808:53;10853:7;10844:6;10833:9;10829:22;10808:53;:::i;:::-;10798:63;;10753:118;10910:2;10936:53;10981:7;10972:6;10961:9;10957:22;10936:53;:::i;:::-;10926:63;;10881:118;11038:2;11064:53;11109:7;11100:6;11089:9;11085:22;11064:53;:::i;:::-;11054:63;;11009:118;11166:3;11193:53;11238:7;11229:6;11218:9;11214:22;11193:53;:::i;:::-;11183:63;;11137:119;11295:3;11322:53;11367:7;11358:6;11347:9;11343:22;11322:53;:::i;:::-;11312:63;;11266:119;11424:3;11451:53;11496:7;11487:6;11476:9;11472:22;11451:53;:::i;:::-;11441:63;;11395:119;11553:3;11580:53;11625:7;11616:6;11605:9;11601:22;11580:53;:::i;:::-;11570:63;;11524:119;10301:1349;;;;;;;;;;;:::o;11656:442::-;11805:4;11843:2;11832:9;11828:18;11820:26;;11856:71;11924:1;11913:9;11909:17;11900:6;11856:71;:::i;:::-;11937:72;12005:2;11994:9;11990:18;11981:6;11937:72;:::i;:::-;12019;12087:2;12076:9;12072:18;12063:6;12019:72;:::i;:::-;11656:442;;;;;;:::o;12104:160::-;12244:12;12240:1;12232:6;12228:14;12221:36;12104:160;:::o;12270:366::-;12412:3;12433:67;12497:2;12492:3;12433:67;:::i;:::-;12426:74;;12509:93;12598:3;12509:93;:::i;:::-;12627:2;12622:3;12618:12;12611:19;;12270:366;;;:::o;12642:419::-;12808:4;12846:2;12835:9;12831:18;12823:26;;12895:9;12889:4;12885:20;12881:1;12870:9;12866:17;12859:47;12923:131;13049:4;12923:131;:::i;:::-;12915:139;;12642:419;;;:::o;13067:164::-;13207:16;13203:1;13195:6;13191:14;13184:40;13067:164;:::o;13237:366::-;13379:3;13400:67;13464:2;13459:3;13400:67;:::i;:::-;13393:74;;13476:93;13565:3;13476:93;:::i;:::-;13594:2;13589:3;13585:12;13578:19;;13237:366;;;:::o;13609:419::-;13775:4;13813:2;13802:9;13798:18;13790:26;;13862:9;13856:4;13852:20;13848:1;13837:9;13833:17;13826:47;13890:131;14016:4;13890:131;:::i;:::-;13882:139;;13609:419;;;:::o;14034:180::-;14082:77;14079:1;14072:88;14179:4;14176:1;14169:15;14203:4;14200:1;14193:15;14220:191;14260:3;14279:20;14297:1;14279:20;:::i;:::-;14274:25;;14313:20;14331:1;14313:20;:::i;:::-;14308:25;;14356:1;14353;14349:9;14342:16;;14377:3;14374:1;14371:10;14368:36;;;14384:18;;:::i;:::-;14368:36;14220:191;;;;:::o;14417:410::-;14457:7;14480:20;14498:1;14480:20;:::i;:::-;14475:25;;14514:20;14532:1;14514:20;:::i;:::-;14509:25;;14569:1;14566;14562:9;14591:30;14609:11;14591:30;:::i;:::-;14580:41;;14770:1;14761:7;14757:15;14754:1;14751:22;14731:1;14724:9;14704:83;14681:139;;14800:18;;:::i;:::-;14681:139;14465:362;14417:410;;;;:::o;14833:180::-;14881:77;14878:1;14871:88;14978:4;14975:1;14968:15;15002:4;14999:1;14992:15;15019:185;15059:1;15076:20;15094:1;15076:20;:::i;:::-;15071:25;;15110:20;15128:1;15110:20;:::i;:::-;15105:25;;15149:1;15139:35;;15154:18;;:::i;:::-;15139:35;15196:1;15193;15189:9;15184:14;;15019:185;;;;:::o;15210:180::-;15258:77;15255:1;15248:88;15355:4;15352:1;15345:15;15379:4;15376:1;15369:15;15396:320;15440:6;15477:1;15471:4;15467:12;15457:22;;15524:1;15518:4;15514:12;15545:18;15535:81;;15601:4;15593:6;15589:17;15579:27;;15535:81;15663:2;15655:6;15652:14;15632:18;15629:38;15626:84;;15682:18;;:::i;:::-;15626:84;15447:269;15396:320;;;:::o;15722:157::-;15862:9;15858:1;15850:6;15846:14;15839:33;15722:157;:::o;15885:365::-;16027:3;16048:66;16112:1;16107:3;16048:66;:::i;:::-;16041:73;;16123:93;16212:3;16123:93;:::i;:::-;16241:2;16236:3;16232:12;16225:19;;15885:365;;;:::o;16256:419::-;16422:4;16460:2;16449:9;16445:18;16437:26;;16509:9;16503:4;16499:20;16495:1;16484:9;16480:17;16473:47;16537:131;16663:4;16537:131;:::i;:::-;16529:139;;16256:419;;;:::o;16681:168::-;16821:20;16817:1;16809:6;16805:14;16798:44;16681:168;:::o;16855:366::-;16997:3;17018:67;17082:2;17077:3;17018:67;:::i;:::-;17011:74;;17094:93;17183:3;17094:93;:::i;:::-;17212:2;17207:3;17203:12;17196:19;;16855:366;;;:::o;17227:419::-;17393:4;17431:2;17420:9;17416:18;17408:26;;17480:9;17474:4;17470:20;17466:1;17455:9;17451:17;17444:47;17508:131;17634:4;17508:131;:::i;:::-;17500:139;;17227:419;;;:::o;17652:180::-;17700:77;17697:1;17690:88;17797:4;17794:1;17787:15;17821:4;17818:1;17811:15;17838:167;17978:19;17974:1;17966:6;17962:14;17955:43;17838:167;:::o;18011:366::-;18153:3;18174:67;18238:2;18233:3;18174:67;:::i;:::-;18167:74;;18250:93;18339:3;18250:93;:::i;:::-;18368:2;18363:3;18359:12;18352:19;;18011:366;;;:::o;18383:419::-;18549:4;18587:2;18576:9;18572:18;18564:26;;18636:9;18630:4;18626:20;18622:1;18611:9;18607:17;18600:47;18664:131;18790:4;18664:131;:::i;:::-;18656:139;;18383:419;;;:::o;18808:158::-;18948:10;18944:1;18936:6;18932:14;18925:34;18808:158;:::o;18972:365::-;19114:3;19135:66;19199:1;19194:3;19135:66;:::i;:::-;19128:73;;19210:93;19299:3;19210:93;:::i;:::-;19328:2;19323:3;19319:12;19312:19;;18972:365;;;:::o;19343:419::-;19509:4;19547:2;19536:9;19532:18;19524:26;;19596:9;19590:4;19586:20;19582:1;19571:9;19567:17;19560:47;19624:131;19750:4;19624:131;:::i;:::-;19616:139;;19343:419;;;:::o;19768:194::-;19808:4;19828:20;19846:1;19828:20;:::i;:::-;19823:25;;19862:20;19880:1;19862:20;:::i;:::-;19857:25;;19906:1;19903;19899:9;19891:17;;19930:1;19924:4;19921:11;19918:37;;;19935:18;;:::i;:::-;19918:37;19768:194;;;;:::o;19968:168::-;20108:20;20104:1;20096:6;20092:14;20085:44;19968:168;:::o;20142:366::-;20284:3;20305:67;20369:2;20364:3;20305:67;:::i;:::-;20298:74;;20381:93;20470:3;20381:93;:::i;:::-;20499:2;20494:3;20490:12;20483:19;;20142:366;;;:::o;20514:419::-;20680:4;20718:2;20707:9;20703:18;20695:26;;20767:9;20761:4;20757:20;20753:1;20742:9;20738:17;20731:47;20795:131;20921:4;20795:131;:::i;:::-;20787:139;;20514:419;;;:::o;20939:161::-;21079:13;21075:1;21067:6;21063:14;21056:37;20939:161;:::o;21106:366::-;21248:3;21269:67;21333:2;21328:3;21269:67;:::i;:::-;21262:74;;21345:93;21434:3;21345:93;:::i;:::-;21463:2;21458:3;21454:12;21447:19;;21106:366;;;:::o;21478:419::-;21644:4;21682:2;21671:9;21667:18;21659:26;;21731:9;21725:4;21721:20;21717:1;21706:9;21702:17;21695:47;21759:131;21885:4;21759:131;:::i;:::-;21751:139;;21478:419;;;:::o;21903:163::-;22043:15;22039:1;22031:6;22027:14;22020:39;21903:163;:::o;22072:366::-;22214:3;22235:67;22299:2;22294:3;22235:67;:::i;:::-;22228:74;;22311:93;22400:3;22311:93;:::i;:::-;22429:2;22424:3;22420:12;22413:19;;22072:366;;;:::o;22444:419::-;22610:4;22648:2;22637:9;22633:18;22625:26;;22697:9;22691:4;22687:20;22683:1;22672:9;22668:17;22661:47;22725:131;22851:4;22725:131;:::i;:::-;22717:139;;22444:419;;;:::o;22869:155::-;23009:7;23005:1;22997:6;22993:14;22986:31;22869:155;:::o;23030:365::-;23172:3;23193:66;23257:1;23252:3;23193:66;:::i;:::-;23186:73;;23268:93;23357:3;23268:93;:::i;:::-;23386:2;23381:3;23377:12;23370:19;;23030:365;;;:::o;23401:419::-;23567:4;23605:2;23594:9;23590:18;23582:26;;23654:9;23648:4;23644:20;23640:1;23629:9;23625:17;23618:47;23682:131;23808:4;23682:131;:::i;:::-;23674:139;;23401:419;;;:::o;23826:155::-;23966:7;23962:1;23954:6;23950:14;23943:31;23826:155;:::o;23987:365::-;24129:3;24150:66;24214:1;24209:3;24150:66;:::i;:::-;24143:73;;24225:93;24314:3;24225:93;:::i;:::-;24343:2;24338:3;24334:12;24327:19;;23987:365;;;:::o;24358:419::-;24524:4;24562:2;24551:9;24547:18;24539:26;;24611:9;24605:4;24601:20;24597:1;24586:9;24582:17;24575:47;24639:131;24765:4;24639:131;:::i;:::-;24631:139;;24358:419;;;:::o;24783:168::-;24923:20;24919:1;24911:6;24907:14;24900:44;24783:168;:::o;24957:366::-;25099:3;25120:67;25184:2;25179:3;25120:67;:::i;:::-;25113:74;;25196:93;25285:3;25196:93;:::i;:::-;25314:2;25309:3;25305:12;25298:19;;24957:366;;;:::o;25329:419::-;25495:4;25533:2;25522:9;25518:18;25510:26;;25582:9;25576:4;25572:20;25568:1;25557:9;25553:17;25546:47;25610:131;25736:4;25610:131;:::i;:::-;25602:139;;25329:419;;;:::o;25754:160::-;25894:12;25890:1;25882:6;25878:14;25871:36;25754:160;:::o;25920:366::-;26062:3;26083:67;26147:2;26142:3;26083:67;:::i;:::-;26076:74;;26159:93;26248:3;26159:93;:::i;:::-;26277:2;26272:3;26268:12;26261:19;;25920:366;;;:::o;26292:419::-;26458:4;26496:2;26485:9;26481:18;26473:26;;26545:9;26539:4;26535:20;26531:1;26520:9;26516:17;26509:47;26573:131;26699:4;26573:131;:::i;:::-;26565:139;;26292:419;;;:::o;26717:164::-;26857:16;26853:1;26845:6;26841:14;26834:40;26717:164;:::o;26887:366::-;27029:3;27050:67;27114:2;27109:3;27050:67;:::i;:::-;27043:74;;27126:93;27215:3;27126:93;:::i;:::-;27244:2;27239:3;27235:12;27228:19;;26887:366;;;:::o;27259:419::-;27425:4;27463:2;27452:9;27448:18;27440:26;;27512:9;27506:4;27502:20;27498:1;27487:9;27483:17;27476:47;27540:131;27666:4;27540:131;:::i;:::-;27532:139;;27259:419;;;:::o;27684:442::-;27833:4;27871:2;27860:9;27856:18;27848:26;;27884:71;27952:1;27941:9;27937:17;27928:6;27884:71;:::i;:::-;27965:72;28033:2;28022:9;28018:18;28009:6;27965:72;:::i;:::-;28047;28115:2;28104:9;28100:18;28091:6;28047:72;:::i;:::-;27684:442;;;;;;:::o;28132:::-;28281:4;28319:2;28308:9;28304:18;28296:26;;28332:71;28400:1;28389:9;28385:17;28376:6;28332:71;:::i;:::-;28413:72;28481:2;28470:9;28466:18;28457:6;28413:72;:::i;:::-;28495;28563:2;28552:9;28548:18;28539:6;28495:72;:::i;:::-;28132:442;;;;;;:::o;28580:332::-;28701:4;28739:2;28728:9;28724:18;28716:26;;28752:71;28820:1;28809:9;28805:17;28796:6;28752:71;:::i;:::-;28833:72;28901:2;28890:9;28886:18;28877:6;28833:72;:::i;:::-;28580:332;;;;;:::o"},"methodIdentifiers":{"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)":"e8e33700","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","getAmountOut(uint256,uint256,uint256)":"054d50d4","getPrice(address,address)":"ac41865a","name()":"06fdde03","removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)":"baa2abde","reserveA()":"dc5fa6c5","reserveB()":"19e36f3b","swapExactTokensForTokens(uint256,uint256,address[],address,uint256)":"38ed1739","symbol()":"95d89b41","tokenAAddres()":"50430ce4","tokenBAddres()":"eed86c96","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAAddres\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBAddres\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Inherits ERC20 to represent LP tokens. Tokens are set at first addLiquidity call.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountADesired\":\"Desired amount of token A to deposit\",\"amountAMin\":\"Minimum acceptable amount of token A\",\"amountBDesired\":\"Desired amount of token B to deposit\",\"amountBMin\":\"Minimum acceptable amount of token B\",\"deadline\":\"Timestamp after which transaction is invalid\",\"to\":\"Address receiving LP tokens\",\"tokenA\":\"Address of token A\",\"tokenB\":\"Address of token B\"},\"returns\":{\"amountA\":\"Actual amount of token A deposited\",\"amountB\":\"Actual amount of token B deposited\",\"liquidity\":\"Amount of LP tokens minted\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes LP token with name and symbol\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getAmountOut(uint256,uint256,uint256)\":{\"params\":{\"amountIn\":\"Amount of input token\",\"reserveIn\":\"Reserve of input token\",\"reserveOut\":\"Reserve of output token\"},\"returns\":{\"_0\":\"Output token amount\"}},\"getPrice(address,address)\":{\"params\":{\"tokenA\":\"Address\",\"tokenB\":\"Address\"},\"returns\":{\"price\":\"Price with 18 decimals (tokenB per tokenA)\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountAMin\":\"Minimum amount of token A to receive\",\"amountBMin\":\"Minimum amount of token B to receive\",\"deadline\":\"Timestamp after which transaction is invalid\",\"liquidity\":\"Amount of LP tokens to burn\",\"to\":\"Address receiving the underlying tokens\",\"tokenA\":\"Address of token A\",\"tokenB\":\"Address of token B\"},\"returns\":{\"amountA\":\"Amount of token A returned\",\"amountB\":\"Amount of token B returned\"}},\"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\":{\"params\":{\"amountIn\":\"Amount of input token to send\",\"amountOutMin\":\"Minimum acceptable amount of output token\",\"deadline\":\"Timestamp after which transaction is invalid\",\"path\":\"Array with [tokenIn, tokenOut] addresses\",\"to\":\"Address to receive the output token\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"SimpleSwap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Adds liquidity to the pool and mints LP tokens\"},\"getAmountOut(uint256,uint256,uint256)\":{\"notice\":\"Computes output amount for a given input and reserves\"},\"getPrice(address,address)\":{\"notice\":\"Returns the price of tokenA in terms of tokenB\"},\"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Removes liquidity and burns LP tokens\"},\"reserveA()\":{\"notice\":\"Current reserve of token A\"},\"reserveB()\":{\"notice\":\"Current reserve of token B\"},\"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\":{\"notice\":\"Swaps an exact amount of input tokens for output tokens\"},\"tokenAAddres()\":{\"notice\":\"Token A address (set at first liquidity addition)\"},\"tokenBAddres()\":{\"notice\":\"Token B address (set at first liquidity addition)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSwap.sol\":\"SimpleSwap\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/SimpleSwap.sol\":{\"keccak256\":\"0xcac43569d885cd56c1074250ac53192c0b94c29014cba73f69954ea2f464c71a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db575aa1f994dcc91d88ff7fbadf1b80ef526a0af2ee5521719c5036f3f8609d\",\"dweb:/ipfs/QmetEQxALx99LuNT1qimKxpBy8f4oDDTXFFf4Z4qsjBAiW\"]}},\"version\":1}"}}}}}